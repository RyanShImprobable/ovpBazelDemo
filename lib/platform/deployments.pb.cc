// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform/deployments.proto

#include "platform/deployments.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_platform_2fdeployments_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto;
namespace improbable {
namespace platform {
namespace locator {
class LoginRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginRequest> _instance;
} _LoginRequest_default_instance_;
class LoginResponse_LoginFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginResponse_LoginFailure> _instance;
} _LoginResponse_LoginFailure_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginResponse> _instance;
} _LoginResponse_default_instance_;
}  // namespace locator
}  // namespace platform
}  // namespace improbable
static void InitDefaultsscc_info_LoginRequest_platform_2fdeployments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::locator::_LoginRequest_default_instance_;
    new (ptr) ::improbable::platform::locator::LoginRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginRequest_platform_2fdeployments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginRequest_platform_2fdeployments_2eproto}, {}};

static void InitDefaultsscc_info_LoginResponse_platform_2fdeployments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::locator::_LoginResponse_default_instance_;
    new (ptr) ::improbable::platform::locator::LoginResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoginResponse_platform_2fdeployments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoginResponse_platform_2fdeployments_2eproto}, {
      &scc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto.base,}};

static void InitDefaultsscc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::locator::_LoginResponse_LoginFailure_default_instance_;
    new (ptr) ::improbable::platform::locator::LoginResponse_LoginFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_platform_2fdeployments_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_platform_2fdeployments_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_platform_2fdeployments_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_platform_2fdeployments_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginRequest, player_identity_token_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginRequest, login_token_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginRequest, worker_type_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginRequest, protocol_capabilities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginResponse_LoginFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginResponse_LoginFailure, status_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginResponse_LoginFailure, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::locator::LoginResponse, outcome_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::improbable::platform::locator::LoginRequest)},
  { 9, -1, sizeof(::improbable::platform::locator::LoginResponse_LoginFailure)},
  { 16, -1, sizeof(::improbable::platform::locator::LoginResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::locator::_LoginRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::locator::_LoginResponse_LoginFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::locator::_LoginResponse_default_instance_),
};

const char descriptor_table_protodef_platform_2fdeployments_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032platform/deployments.proto\022\033improbable"
  ".platform.locator\"v\n\014LoginRequest\022\035\n\025pla"
  "yer_identity_token\030\001 \001(\t\022\023\n\013login_token\030"
  "\002 \001(\t\022\023\n\013worker_type\030\003 \001(\t\022\035\n\025protocol_c"
  "apabilities\030\004 \001(\014\"\367\002\n\rLoginResponse\022J\n\007f"
  "ailure\030\001 \001(\01327.improbable.platform.locat"
  "or.LoginResponse.LoginFailureH\000\022\033\n\021proto"
  "col_settings\030\002 \001(\014H\000\032m\n\014LoginFailure\022H\n\006"
  "status\030\001 \001(\01628.improbable.platform.locat"
  "or.LoginResponse.FailureStatus\022\023\n\013descri"
  "ption\030\002 \001(\t\"\202\001\n\rFailureStatus\022\013\n\007UNKNOWN"
  "\020\000\022\025\n\021CAPACITY_EXCEEDED\020\001\022\021\n\rRATE_EXCEED"
  "ED\020\002\022\027\n\023LOGIN_TOKEN_EXPIRED\020\003\022!\n\035PLAYER_"
  "IDENTITY_TOKEN_EXPIRED\020\004B\t\n\007outcome2s\n\017L"
  "ocateServiceV2\022`\n\005Login\022).improbable.pla"
  "tform.locator.LoginRequest\032*.improbable."
  "platform.locator.LoginResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_platform_2fdeployments_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_platform_2fdeployments_2eproto_sccs[3] = {
  &scc_info_LoginRequest_platform_2fdeployments_2eproto.base,
  &scc_info_LoginResponse_platform_2fdeployments_2eproto.base,
  &scc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_platform_2fdeployments_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_platform_2fdeployments_2eproto = {
  false, false, descriptor_table_protodef_platform_2fdeployments_2eproto, "platform/deployments.proto", 680,
  &descriptor_table_platform_2fdeployments_2eproto_once, descriptor_table_platform_2fdeployments_2eproto_sccs, descriptor_table_platform_2fdeployments_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_platform_2fdeployments_2eproto::offsets,
  file_level_metadata_platform_2fdeployments_2eproto, 3, file_level_enum_descriptors_platform_2fdeployments_2eproto, file_level_service_descriptors_platform_2fdeployments_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_platform_2fdeployments_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_platform_2fdeployments_2eproto)), true);
namespace improbable {
namespace platform {
namespace locator {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoginResponse_FailureStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_platform_2fdeployments_2eproto);
  return file_level_enum_descriptors_platform_2fdeployments_2eproto[0];
}
bool LoginResponse_FailureStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LoginResponse_FailureStatus LoginResponse::UNKNOWN;
constexpr LoginResponse_FailureStatus LoginResponse::CAPACITY_EXCEEDED;
constexpr LoginResponse_FailureStatus LoginResponse::RATE_EXCEEDED;
constexpr LoginResponse_FailureStatus LoginResponse::LOGIN_TOKEN_EXPIRED;
constexpr LoginResponse_FailureStatus LoginResponse::PLAYER_IDENTITY_TOKEN_EXPIRED;
constexpr LoginResponse_FailureStatus LoginResponse::FailureStatus_MIN;
constexpr LoginResponse_FailureStatus LoginResponse::FailureStatus_MAX;
constexpr int LoginResponse::FailureStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.locator.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  player_identity_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_identity_token().empty()) {
    player_identity_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_identity_token(), 
      GetArena());
  }
  login_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login_token().empty()) {
    login_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_login_token(), 
      GetArena());
  }
  worker_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_type().empty()) {
    worker_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_type(), 
      GetArena());
  }
  protocol_capabilities_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_protocol_capabilities().empty()) {
    protocol_capabilities_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol_capabilities(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.locator.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginRequest_platform_2fdeployments_2eproto.base);
  player_identity_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  login_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  worker_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_capabilities_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.locator.LoginRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  player_identity_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  login_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  worker_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_capabilities_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::ArenaDtor(void* object) {
  LoginRequest* _this = reinterpret_cast< LoginRequest* >(object);
  (void)_this;
}
void LoginRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginRequest& LoginRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginRequest_platform_2fdeployments_2eproto.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.locator.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_identity_token_.ClearToEmpty();
  login_token_.ClearToEmpty();
  worker_type_.ClearToEmpty();
  protocol_capabilities_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string player_identity_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_player_identity_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.locator.LoginRequest.player_identity_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string login_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_login_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.locator.LoginRequest.login_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string worker_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_worker_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.locator.LoginRequest.worker_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes protocol_capabilities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_protocol_capabilities();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.locator.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string player_identity_token = 1;
  if (this->player_identity_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_player_identity_token().data(), static_cast<int>(this->_internal_player_identity_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.locator.LoginRequest.player_identity_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_player_identity_token(), target);
  }

  // string login_token = 2;
  if (this->login_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login_token().data(), static_cast<int>(this->_internal_login_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.locator.LoginRequest.login_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_login_token(), target);
  }

  // string worker_type = 3;
  if (this->worker_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_type().data(), static_cast<int>(this->_internal_worker_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.locator.LoginRequest.worker_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_worker_type(), target);
  }

  // bytes protocol_capabilities = 4;
  if (this->protocol_capabilities().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_protocol_capabilities(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.locator.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.locator.LoginRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string player_identity_token = 1;
  if (this->player_identity_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_identity_token());
  }

  // string login_token = 2;
  if (this->login_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_token());
  }

  // string worker_type = 3;
  if (this->worker_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_type());
  }

  // bytes protocol_capabilities = 4;
  if (this->protocol_capabilities().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_protocol_capabilities());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.locator.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.locator.LoginRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.locator.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.locator.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_identity_token().size() > 0) {
    _internal_set_player_identity_token(from._internal_player_identity_token());
  }
  if (from.login_token().size() > 0) {
    _internal_set_login_token(from._internal_login_token());
  }
  if (from.worker_type().size() > 0) {
    _internal_set_worker_type(from._internal_worker_type());
  }
  if (from.protocol_capabilities().size() > 0) {
    _internal_set_protocol_capabilities(from._internal_protocol_capabilities());
  }
}

void LoginRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.locator.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.locator.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  player_identity_token_.Swap(&other->player_identity_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  login_token_.Swap(&other->login_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  worker_type_.Swap(&other->worker_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  protocol_capabilities_.Swap(&other->protocol_capabilities_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoginResponse_LoginFailure::_Internal {
 public:
};

LoginResponse_LoginFailure::LoginResponse_LoginFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.locator.LoginResponse.LoginFailure)
}
LoginResponse_LoginFailure::LoginResponse_LoginFailure(const LoginResponse_LoginFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.locator.LoginResponse.LoginFailure)
}

void LoginResponse_LoginFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

LoginResponse_LoginFailure::~LoginResponse_LoginFailure() {
  // @@protoc_insertion_point(destructor:improbable.platform.locator.LoginResponse.LoginFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoginResponse_LoginFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginResponse_LoginFailure::ArenaDtor(void* object) {
  LoginResponse_LoginFailure* _this = reinterpret_cast< LoginResponse_LoginFailure* >(object);
  (void)_this;
}
void LoginResponse_LoginFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoginResponse_LoginFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginResponse_LoginFailure& LoginResponse_LoginFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginResponse_LoginFailure_platform_2fdeployments_2eproto.base);
  return *internal_default_instance();
}


void LoginResponse_LoginFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.locator.LoginResponse.LoginFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginResponse_LoginFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.locator.LoginResponse.FailureStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::improbable::platform::locator::LoginResponse_FailureStatus>(val));
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.locator.LoginResponse.LoginFailure.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginResponse_LoginFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.locator.LoginResponse.LoginFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.locator.LoginResponse.FailureStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.locator.LoginResponse.LoginFailure.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.locator.LoginResponse.LoginFailure)
  return target;
}

size_t LoginResponse_LoginFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.locator.LoginResponse.LoginFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .improbable.platform.locator.LoginResponse.FailureStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse_LoginFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.locator.LoginResponse.LoginFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse_LoginFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginResponse_LoginFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.locator.LoginResponse.LoginFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.locator.LoginResponse.LoginFailure)
    MergeFrom(*source);
  }
}

void LoginResponse_LoginFailure::MergeFrom(const LoginResponse_LoginFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.locator.LoginResponse.LoginFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void LoginResponse_LoginFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.locator.LoginResponse.LoginFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse_LoginFailure::CopyFrom(const LoginResponse_LoginFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.locator.LoginResponse.LoginFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse_LoginFailure::IsInitialized() const {
  return true;
}

void LoginResponse_LoginFailure::InternalSwap(LoginResponse_LoginFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginResponse_LoginFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoginResponse::_Internal {
 public:
  static const ::improbable::platform::locator::LoginResponse_LoginFailure& failure(const LoginResponse* msg);
};

const ::improbable::platform::locator::LoginResponse_LoginFailure&
LoginResponse::_Internal::failure(const LoginResponse* msg) {
  return *msg->outcome_.failure_;
}
void LoginResponse::set_allocated_failure(::improbable::platform::locator::LoginResponse_LoginFailure* failure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_outcome();
  if (failure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(failure);
    if (message_arena != submessage_arena) {
      failure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, failure, submessage_arena);
    }
    set_has_failure();
    outcome_.failure_ = failure;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.locator.LoginResponse.failure)
}
LoginResponse::LoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.locator.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_outcome();
  switch (from.outcome_case()) {
    case kFailure: {
      _internal_mutable_failure()->::improbable::platform::locator::LoginResponse_LoginFailure::MergeFrom(from._internal_failure());
      break;
    }
    case kProtocolSettings: {
      _internal_set_protocol_settings(from._internal_protocol_settings());
      break;
    }
    case OUTCOME_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.locator.LoginResponse)
}

void LoginResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginResponse_platform_2fdeployments_2eproto.base);
  clear_has_outcome();
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.locator.LoginResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_outcome()) {
    clear_outcome();
  }
}

void LoginResponse::ArenaDtor(void* object) {
  LoginResponse* _this = reinterpret_cast< LoginResponse* >(object);
  (void)_this;
}
void LoginResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginResponse& LoginResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginResponse_platform_2fdeployments_2eproto.base);
  return *internal_default_instance();
}


void LoginResponse::clear_outcome() {
// @@protoc_insertion_point(one_of_clear_start:improbable.platform.locator.LoginResponse)
  switch (outcome_case()) {
    case kFailure: {
      if (GetArena() == nullptr) {
        delete outcome_.failure_;
      }
      break;
    }
    case kProtocolSettings: {
      outcome_.protocol_settings_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case OUTCOME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OUTCOME_NOT_SET;
}


void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.locator.LoginResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_outcome();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.locator.LoginResponse.LoginFailure failure = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_failure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes protocol_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_protocol_settings();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.locator.LoginResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.locator.LoginResponse.LoginFailure failure = 1;
  if (_internal_has_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::failure(this), target, stream);
  }

  // bytes protocol_settings = 2;
  if (_internal_has_protocol_settings()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_protocol_settings(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.locator.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.locator.LoginResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (outcome_case()) {
    // .improbable.platform.locator.LoginResponse.LoginFailure failure = 1;
    case kFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *outcome_.failure_);
      break;
    }
    // bytes protocol_settings = 2;
    case kProtocolSettings: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_protocol_settings());
      break;
    }
    case OUTCOME_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.locator.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.locator.LoginResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.locator.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.locator.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.outcome_case()) {
    case kFailure: {
      _internal_mutable_failure()->::improbable::platform::locator::LoginResponse_LoginFailure::MergeFrom(from._internal_failure());
      break;
    }
    case kProtocolSettings: {
      _internal_set_protocol_settings(from._internal_protocol_settings());
      break;
    }
    case OUTCOME_NOT_SET: {
      break;
    }
  }
}

void LoginResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.locator.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.locator.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(outcome_, other->outcome_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace locator
}  // namespace platform
}  // namespace improbable
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::improbable::platform::locator::LoginRequest* Arena::CreateMaybeMessage< ::improbable::platform::locator::LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::locator::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::locator::LoginResponse_LoginFailure* Arena::CreateMaybeMessage< ::improbable::platform::locator::LoginResponse_LoginFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::locator::LoginResponse_LoginFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::locator::LoginResponse* Arena::CreateMaybeMessage< ::improbable::platform::locator::LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::locator::LoginResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
