// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: runtime/inspection.proto

#include "runtime/inspection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2fquery_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_AndConstraint_runtime_2fquery_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ChunkDetails_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EntityData_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EntityHeatmapOptions_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityId_runtime_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityPosition_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GridPartition_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GridPartitionStrategy_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Heatmap_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Heatmap_Cell_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectionEntityComponentId_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2fquery_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionQueryResultType_runtime_2fquery_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectorStreamingQuery_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Point_runtime_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Rectangle_runtime_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Region_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Region_RectanglesRegion_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RenderableComponent_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2fworker_5fattribute_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkerAttributeSet_runtime_2fworker_5fattribute_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_WorkerDetails_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerDetails_MetricsEntry_DoNotUse_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_runtime_2finspection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WorkerSummary_runtime_2finspection_2eproto;
namespace improbable {
namespace platform {
namespace runtime {
class EntityDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityData> _instance;
} _EntityData_default_instance_;
class EntityPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityPosition> _instance;
} _EntityPosition_default_instance_;
class RenderableComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RenderableComponent> _instance;
} _RenderableComponent_default_instance_;
class WorkerNodeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerNodeRequest> _instance;
} _WorkerNodeRequest_default_instance_;
class WorkerNodeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerNodeResponse> _instance;
} _WorkerNodeResponse_default_instance_;
class DeleteWorkerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteWorkerRequest> _instance;
} _DeleteWorkerRequest_default_instance_;
class DeleteWorkerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteWorkerResponse> _instance;
} _DeleteWorkerResponse_default_instance_;
class DeleteEntitiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteEntitiesRequest> _instance;
} _DeleteEntitiesRequest_default_instance_;
class DeleteEntitiesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteEntitiesResponse> _instance;
} _DeleteEntitiesResponse_default_instance_;
class Heatmap_CellDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Heatmap_Cell> _instance;
} _Heatmap_Cell_default_instance_;
class HeatmapDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Heatmap> _instance;
} _Heatmap_default_instance_;
class EntityHeatmapOptions_Resolution_ChunkResolutionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityHeatmapOptions_Resolution_ChunkResolution> _instance;
} _EntityHeatmapOptions_Resolution_ChunkResolution_default_instance_;
class EntityHeatmapOptions_Resolution_SquareGridResolutionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityHeatmapOptions_Resolution_SquareGridResolution> _instance;
} _EntityHeatmapOptions_Resolution_SquareGridResolution_default_instance_;
class EntityHeatmapOptions_Resolution_AutoResolutionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityHeatmapOptions_Resolution_AutoResolution> _instance;
} _EntityHeatmapOptions_Resolution_AutoResolution_default_instance_;
class EntityHeatmapOptions_ResolutionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityHeatmapOptions_Resolution> _instance;
} _EntityHeatmapOptions_Resolution_default_instance_;
class EntityHeatmapOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityHeatmapOptions> _instance;
} _EntityHeatmapOptions_default_instance_;
class GetEntityHeatmapRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityHeatmapRequest> _instance;
} _GetEntityHeatmapRequest_default_instance_;
class GetEntityHeatmapResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityHeatmapResponse> _instance;
} _GetEntityHeatmapResponse_default_instance_;
class GetEntityDetailsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityDetailsRequest> _instance;
} _GetEntityDetailsRequest_default_instance_;
class GetEntityDetailsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityDetailsResponse> _instance;
} _GetEntityDetailsResponse_default_instance_;
class GetAllWorkersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllWorkersRequest> _instance;
} _GetAllWorkersRequest_default_instance_;
class GetAllWorkersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllWorkersResponse> _instance;
} _GetAllWorkersResponse_default_instance_;
class WorkerSummaryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerSummary> _instance;
} _WorkerSummary_default_instance_;
class WorkerLoadbalancingStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerLoadbalancingStatus> _instance;
} _WorkerLoadbalancingStatus_default_instance_;
class GetWorkerDetailsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkerDetailsRequest> _instance;
} _GetWorkerDetailsRequest_default_instance_;
class GetWorkerDetailsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkerDetailsResponse> _instance;
} _GetWorkerDetailsResponse_default_instance_;
class GetWorkerInterestRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkerInterestRequest> _instance;
} _GetWorkerInterestRequest_default_instance_;
class GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse> _instance;
} _GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_default_instance_;
class GetWorkerInterestResponse_WorkerInterestConfigurationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkerInterestResponse_WorkerInterestConfiguration> _instance;
} _GetWorkerInterestResponse_WorkerInterestConfiguration_default_instance_;
class GetWorkerInterestResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkerInterestResponse> _instance;
} _GetWorkerInterestResponse_default_instance_;
class InspectorStreamingQueryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectorStreamingQuery> _instance;
} _InspectorStreamingQuery_default_instance_;
class LoadBalancingGridFormatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadBalancingGridFormat> _instance;
} _LoadBalancingGridFormat_default_instance_;
class GetLoadBalancingStrategyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLoadBalancingStrategyRequest> _instance;
} _GetLoadBalancingStrategyRequest_default_instance_;
class GridPartitionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GridPartition> _instance;
} _GridPartition_default_instance_;
class GridPartitionStrategyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GridPartitionStrategy> _instance;
} _GridPartitionStrategy_default_instance_;
class GetLoadBalancingStrategyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLoadBalancingStrategyResponse> _instance;
} _GetLoadBalancingStrategyResponse_default_instance_;
class GetVirtualWorkerMappingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVirtualWorkerMappingRequest> _instance;
} _GetVirtualWorkerMappingRequest_default_instance_;
class GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse> _instance;
} _GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_default_instance_;
class GetVirtualWorkerMappingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVirtualWorkerMappingResponse> _instance;
} _GetVirtualWorkerMappingResponse_default_instance_;
class WorkerDetails_DelegatedEntityComponentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse> _instance;
} _WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_default_instance_;
class WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse> _instance;
} _WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_default_instance_;
class WorkerDetails_ComponentSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerDetails_ComponentSet> _instance;
} _WorkerDetails_ComponentSet_default_instance_;
class WorkerDetails_MetricsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerDetails_MetricsEntry_DoNotUse> _instance;
} _WorkerDetails_MetricsEntry_DoNotUse_default_instance_;
class WorkerDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerDetails> _instance;
} _WorkerDetails_default_instance_;
class Region_RectanglesRegionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Region_RectanglesRegion> _instance;
} _Region_RectanglesRegion_default_instance_;
class RegionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Region> _instance;
} _Region_default_instance_;
class GetWorldExtentsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorldExtentsRequest> _instance;
} _GetWorldExtentsRequest_default_instance_;
class GetWorldExtentsResponse_WorldSubdivision_GsimSubdivisionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision> _instance;
} _GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_default_instance_;
class GetWorldExtentsResponse_WorldSubdivisionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorldExtentsResponse_WorldSubdivision> _instance;
} _GetWorldExtentsResponse_WorldSubdivision_default_instance_;
class GetWorldExtentsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorldExtentsResponse> _instance;
} _GetWorldExtentsResponse_default_instance_;
class GetChunksRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetChunksRequest> _instance;
} _GetChunksRequest_default_instance_;
class GetChunksResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetChunksResponse> _instance;
} _GetChunksResponse_default_instance_;
class ChunkDetails_WorkerAssignmentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChunkDetails_WorkerAssignmentsEntry_DoNotUse> _instance;
} _ChunkDetails_WorkerAssignmentsEntry_DoNotUse_default_instance_;
class ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse> _instance;
} _ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_default_instance_;
class ChunkDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChunkDetails> _instance;
} _ChunkDetails_default_instance_;
class InspectionEntitySubscriptionQueryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntitySubscriptionQuery> _instance;
} _InspectionEntitySubscriptionQuery_default_instance_;
class InspectionEntitySubscriptionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntitySubscriptionResponse> _instance;
} _InspectionEntitySubscriptionResponse_default_instance_;
class InspectionEntityComponentIdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntityComponentId> _instance;
} _InspectionEntityComponentId_default_instance_;
class InspectionEntitySnapshot_ComponentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntitySnapshot_ComponentsEntry_DoNotUse> _instance;
} _InspectionEntitySnapshot_ComponentsEntry_DoNotUse_default_instance_;
class InspectionEntitySnapshotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntitySnapshot> _instance;
} _InspectionEntitySnapshot_default_instance_;
class InspectionEntityComponentUpdateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntityComponentUpdate> _instance;
} _InspectionEntityComponentUpdate_default_instance_;
class InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse> _instance;
} _InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_default_instance_;
class InspectionEntityAuthorityStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InspectionEntityAuthorityState> _instance;
} _InspectionEntityAuthorityState_default_instance_;
}  // namespace runtime
}  // namespace platform
}  // namespace improbable
static void InitDefaultsscc_info_ChunkDetails_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_ChunkDetails_default_instance_;
    new (ptr) ::improbable::platform::runtime::ChunkDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ChunkDetails_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ChunkDetails_runtime_2finspection_2eproto}, {
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,
      &scc_info_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_runtime_2finspection_2eproto.base,
      &scc_info_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_DeleteEntitiesRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_DeleteEntitiesRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::DeleteEntitiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteEntitiesRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteEntitiesRequest_runtime_2finspection_2eproto}, {
      &scc_info_EntityId_runtime_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_DeleteEntitiesResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_DeleteEntitiesResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::DeleteEntitiesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteEntitiesResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteEntitiesResponse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_DeleteWorkerRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_DeleteWorkerRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::DeleteWorkerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteWorkerRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteWorkerRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_DeleteWorkerResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_DeleteWorkerResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::DeleteWorkerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteWorkerResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteWorkerResponse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_EntityData_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityData_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EntityData_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EntityData_runtime_2finspection_2eproto}, {
      &scc_info_RenderableComponent_runtime_2finspection_2eproto.base,
      &scc_info_EntityPosition_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_EntityHeatmapOptions_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityHeatmapOptions_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityHeatmapOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EntityHeatmapOptions_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EntityHeatmapOptions_runtime_2finspection_2eproto}, {
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,
      &scc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityHeatmapOptions_Resolution();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto}, {
      &scc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto.base,
      &scc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto.base,
      &scc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_AutoResolution_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_ChunkResolution_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_SquareGridResolution_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_EntityPosition_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_EntityPosition_default_instance_;
    new (ptr) ::improbable::platform::runtime::EntityPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityPosition_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityPosition_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetAllWorkersRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetAllWorkersRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetAllWorkersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllWorkersRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllWorkersRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetAllWorkersResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetAllWorkersResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetAllWorkersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAllWorkersResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAllWorkersResponse_runtime_2finspection_2eproto}, {
      &scc_info_WorkerSummary_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetChunksRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetChunksRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetChunksRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetChunksRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetChunksRequest_runtime_2finspection_2eproto}, {
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_GetChunksResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetChunksResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetChunksResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetChunksResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetChunksResponse_runtime_2finspection_2eproto}, {
      &scc_info_ChunkDetails_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetEntityDetailsRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetEntityDetailsRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetEntityDetailsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEntityDetailsRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEntityDetailsRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetEntityDetailsResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetEntityDetailsResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetEntityDetailsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEntityDetailsResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEntityDetailsResponse_runtime_2finspection_2eproto}, {
      &scc_info_EntityData_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetEntityHeatmapRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetEntityHeatmapRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetEntityHeatmapRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEntityHeatmapRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEntityHeatmapRequest_runtime_2finspection_2eproto}, {
      &scc_info_EntityHeatmapOptions_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetEntityHeatmapResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetEntityHeatmapResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetEntityHeatmapResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEntityHeatmapResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEntityHeatmapResponse_runtime_2finspection_2eproto}, {
      &scc_info_Heatmap_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetLoadBalancingStrategyRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetLoadBalancingStrategyRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetLoadBalancingStrategyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLoadBalancingStrategyRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLoadBalancingStrategyRequest_runtime_2finspection_2eproto}, {
      &scc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetLoadBalancingStrategyResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetLoadBalancingStrategyResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetLoadBalancingStrategyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLoadBalancingStrategyResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLoadBalancingStrategyResponse_runtime_2finspection_2eproto}, {
      &scc_info_GridPartitionStrategy_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetVirtualWorkerMappingRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetVirtualWorkerMappingRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetVirtualWorkerMappingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVirtualWorkerMappingRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVirtualWorkerMappingRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetVirtualWorkerMappingResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetVirtualWorkerMappingResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetVirtualWorkerMappingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetVirtualWorkerMappingResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetVirtualWorkerMappingResponse_runtime_2finspection_2eproto}, {
      &scc_info_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetWorkerDetailsRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorkerDetailsRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorkerDetailsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorkerDetailsRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetWorkerDetailsRequest_runtime_2finspection_2eproto}, {
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsscc_info_GetWorkerDetailsResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorkerDetailsResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorkerDetailsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetWorkerDetailsResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetWorkerDetailsResponse_runtime_2finspection_2eproto}, {
      &scc_info_WorkerSummary_runtime_2finspection_2eproto.base,
      &scc_info_WorkerDetails_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetWorkerInterestRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorkerInterestRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorkerInterestRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetWorkerInterestRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetWorkerInterestRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetWorkerInterestResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorkerInterestResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorkerInterestResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorkerInterestResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetWorkerInterestResponse_runtime_2finspection_2eproto}, {
      &scc_info_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorkerInterestResponse_WorkerInterestConfiguration_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto}, {
      &scc_info_InspectorStreamingQuery_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_runtime_2finspection_2eproto}, {
      &scc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetWorldExtentsRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorldExtentsRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorldExtentsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetWorldExtentsRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetWorldExtentsRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_GetWorldExtentsResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorldExtentsResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorldExtentsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetWorldExtentsResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetWorldExtentsResponse_runtime_2finspection_2eproto}, {
      &scc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto.base,
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorldExtentsResponse_WorldSubdivision_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto}, {
      &scc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_default_instance_;
    new (ptr) ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto}, {
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_GridPartition_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GridPartition_default_instance_;
    new (ptr) ::improbable::platform::runtime::GridPartition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GridPartition_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GridPartition_runtime_2finspection_2eproto}, {
      &scc_info_Region_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_GridPartitionStrategy_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_GridPartitionStrategy_default_instance_;
    new (ptr) ::improbable::platform::runtime::GridPartitionStrategy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GridPartitionStrategy_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GridPartitionStrategy_runtime_2finspection_2eproto}, {
      &scc_info_GridPartition_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_Heatmap_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_Heatmap_default_instance_;
    new (ptr) ::improbable::platform::runtime::Heatmap();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Heatmap_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Heatmap_runtime_2finspection_2eproto}, {
      &scc_info_Heatmap_Cell_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_Heatmap_Cell_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_Heatmap_Cell_default_instance_;
    new (ptr) ::improbable::platform::runtime::Heatmap_Cell();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Heatmap_Cell_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Heatmap_Cell_runtime_2finspection_2eproto}, {
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntityAuthorityState_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntityAuthorityState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto}, {
      &scc_info_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_InspectionEntityComponentId_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntityComponentId_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntityComponentId();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectionEntityComponentId_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InspectionEntityComponentId_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntityComponentUpdate_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntityComponentUpdate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto}, {
      &scc_info_InspectionEntityComponentId_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntitySnapshot_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntitySnapshot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto}, {
      &scc_info_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_InspectionEntitySubscriptionQuery_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntitySubscriptionQuery_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntitySubscriptionQuery();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InspectionEntitySubscriptionQuery_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_InspectionEntitySubscriptionQuery_runtime_2finspection_2eproto}, {
      &scc_info_AndConstraint_runtime_2fquery_2eproto.base,
      &scc_info_InspectionQueryResultType_runtime_2fquery_2eproto.base,}};

static void InitDefaultsscc_info_InspectionEntitySubscriptionResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectionEntitySubscriptionResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectionEntitySubscriptionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_InspectionEntitySubscriptionResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_InspectionEntitySubscriptionResponse_runtime_2finspection_2eproto}, {
      &scc_info_InspectionEntityComponentId_runtime_2finspection_2eproto.base,
      &scc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto.base,
      &scc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto.base,
      &scc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_InspectorStreamingQuery_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_InspectorStreamingQuery_default_instance_;
    new (ptr) ::improbable::platform::runtime::InspectorStreamingQuery();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InspectorStreamingQuery_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InspectorStreamingQuery_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_LoadBalancingGridFormat_default_instance_;
    new (ptr) ::improbable::platform::runtime::LoadBalancingGridFormat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_Region_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_Region_default_instance_;
    new (ptr) ::improbable::platform::runtime::Region();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Region_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Region_runtime_2finspection_2eproto}, {
      &scc_info_Region_RectanglesRegion_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_Region_RectanglesRegion_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_Region_RectanglesRegion_default_instance_;
    new (ptr) ::improbable::platform::runtime::Region_RectanglesRegion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Region_RectanglesRegion_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Region_RectanglesRegion_runtime_2finspection_2eproto}, {
      &scc_info_Rectangle_runtime_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_RenderableComponent_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_RenderableComponent_default_instance_;
    new (ptr) ::improbable::platform::runtime::RenderableComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RenderableComponent_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RenderableComponent_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_WorkerDetails_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerDetails_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_WorkerDetails_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_WorkerDetails_runtime_2finspection_2eproto}, {
      &scc_info_Region_runtime_2finspection_2eproto.base,
      &scc_info_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_runtime_2finspection_2eproto.base,
      &scc_info_WorkerDetails_MetricsEntry_DoNotUse_runtime_2finspection_2eproto.base,
      &scc_info_WorkerAttributeSet_runtime_2fworker_5fattribute_2eproto.base,}};

static void InitDefaultsscc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerDetails_ComponentSet_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerDetails_ComponentSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto}, {
      &scc_info_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_runtime_2finspection_2eproto}, {
      &scc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto.base,}};

static void InitDefaultsscc_info_WorkerDetails_MetricsEntry_DoNotUse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerDetails_MetricsEntry_DoNotUse_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerDetails_MetricsEntry_DoNotUse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerDetails_MetricsEntry_DoNotUse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerLoadbalancingStatus_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerLoadbalancingStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_WorkerNodeRequest_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerNodeRequest_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerNodeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerNodeRequest_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerNodeRequest_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_WorkerNodeResponse_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerNodeResponse_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerNodeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerNodeResponse_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerNodeResponse_runtime_2finspection_2eproto}, {}};

static void InitDefaultsscc_info_WorkerSummary_runtime_2finspection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::platform::runtime::_WorkerSummary_default_instance_;
    new (ptr) ::improbable::platform::runtime::WorkerSummary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WorkerSummary_runtime_2finspection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_WorkerSummary_runtime_2finspection_2eproto}, {
      &scc_info_Point_runtime_2fcommon_2eproto.base,
      &scc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_runtime_2finspection_2eproto[63];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_runtime_2finspection_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_runtime_2finspection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_runtime_2finspection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityData, entity_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityData, renderable_components_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityData, prefab_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityData, entity_position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityPosition, x_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityPosition, y_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityPosition, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::RenderableComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::RenderableComponent, name_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::RenderableComponent, value_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::RenderableComponent, assigned_worker_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::RenderableComponent, component_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerNodeRequest, worker_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerNodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerNodeResponse, node_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::DeleteWorkerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::DeleteWorkerRequest, worker_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::DeleteWorkerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::DeleteEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::DeleteEntitiesRequest, entity_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::DeleteEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Heatmap_Cell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Heatmap_Cell, entity_count_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Heatmap_Cell, extent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Heatmap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Heatmap, cells_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution, edge_length_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution, max_cells_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions_Resolution, resolution_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions, viewport_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::EntityHeatmapOptions, resolution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityHeatmapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityHeatmapRequest, entity_heatmap_options_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityHeatmapRequest, desired_response_interval_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityHeatmapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityHeatmapResponse, heatmap_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityHeatmapResponse, query_cost_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityDetailsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityDetailsRequest, entity_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetEntityDetailsResponse, entity_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetAllWorkersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetAllWorkersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetAllWorkersResponse, worker_summaries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerSummary, worker_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerSummary, position_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerSummary, loadbalancing_status_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerSummary, worker_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerLoadbalancingStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerLoadbalancingStatus, load_category_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerLoadbalancingStatus, load_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerDetailsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerDetailsRequest, worker_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerDetailsRequest, field_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerDetailsResponse, summary_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerDetailsResponse, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration, worker_type_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration, entity_interest_radius_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration, streaming_query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse, enable_chunk_based_interest_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse, enable_streaming_queries_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse, chunk_size_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorkerInterestResponse, worker_type_interest_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectorStreamingQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectorStreamingQuery, component_name_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectorStreamingQuery, radius_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::LoadBalancingGridFormat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::LoadBalancingGridFormat, cell_edge_length_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetLoadBalancingStrategyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetLoadBalancingStrategyRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetLoadBalancingStrategyRequest, format_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GridPartition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GridPartition, virtual_worker_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GridPartition, region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GridPartitionStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GridPartitionStrategy, grid_partitions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetLoadBalancingStrategyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetLoadBalancingStrategyResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetLoadBalancingStrategyResponse, strategy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetVirtualWorkerMappingResponse, virtual_to_worker_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_ComponentSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_ComponentSet, component_ids_with_names_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, interest_region_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, known_entity_ids_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, delegated_entity_components_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, metrics_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, worker_attributes_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::WorkerDetails, authority_region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Region_RectanglesRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Region_RectanglesRegion, rectangles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Region, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Region, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::Region, area_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision, gsim_bounds_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision, chunk_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision, subdivision_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse, world_subdivision_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetWorldExtentsResponse, world_bounds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetChunksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetChunksRequest, viewport_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetChunksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::GetChunksResponse, chunks_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails, chunk_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails, extent_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails, subscribed_worker_ids_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails, worker_assignments_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::ChunkDetails, worker_assignment_overrides_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionQuery, constraint_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionQuery, result_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionResponse, deleted_entities_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionResponse, removed_components_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionResponse, added_entities_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionResponse, updated_components_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySubscriptionResponse, authority_states_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentId, entity_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentId, component_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot, entity_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntitySnapshot, components_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentUpdate, entity_component_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentUpdate, component_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityComponentUpdate, fields_to_clear_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState, entity_id_),
  PROTOBUF_FIELD_OFFSET(::improbable::platform::runtime::InspectionEntityAuthorityState, component_authority_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::improbable::platform::runtime::EntityData)},
  { 9, -1, sizeof(::improbable::platform::runtime::EntityPosition)},
  { 17, -1, sizeof(::improbable::platform::runtime::RenderableComponent)},
  { 26, -1, sizeof(::improbable::platform::runtime::WorkerNodeRequest)},
  { 32, -1, sizeof(::improbable::platform::runtime::WorkerNodeResponse)},
  { 38, -1, sizeof(::improbable::platform::runtime::DeleteWorkerRequest)},
  { 44, -1, sizeof(::improbable::platform::runtime::DeleteWorkerResponse)},
  { 49, -1, sizeof(::improbable::platform::runtime::DeleteEntitiesRequest)},
  { 55, -1, sizeof(::improbable::platform::runtime::DeleteEntitiesResponse)},
  { 60, -1, sizeof(::improbable::platform::runtime::Heatmap_Cell)},
  { 67, -1, sizeof(::improbable::platform::runtime::Heatmap)},
  { 73, -1, sizeof(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution)},
  { 78, -1, sizeof(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution)},
  { 84, -1, sizeof(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution)},
  { 90, -1, sizeof(::improbable::platform::runtime::EntityHeatmapOptions_Resolution)},
  { 99, -1, sizeof(::improbable::platform::runtime::EntityHeatmapOptions)},
  { 106, -1, sizeof(::improbable::platform::runtime::GetEntityHeatmapRequest)},
  { 113, -1, sizeof(::improbable::platform::runtime::GetEntityHeatmapResponse)},
  { 120, -1, sizeof(::improbable::platform::runtime::GetEntityDetailsRequest)},
  { 126, -1, sizeof(::improbable::platform::runtime::GetEntityDetailsResponse)},
  { 132, -1, sizeof(::improbable::platform::runtime::GetAllWorkersRequest)},
  { 137, -1, sizeof(::improbable::platform::runtime::GetAllWorkersResponse)},
  { 143, -1, sizeof(::improbable::platform::runtime::WorkerSummary)},
  { 152, -1, sizeof(::improbable::platform::runtime::WorkerLoadbalancingStatus)},
  { 159, -1, sizeof(::improbable::platform::runtime::GetWorkerDetailsRequest)},
  { 166, -1, sizeof(::improbable::platform::runtime::GetWorkerDetailsResponse)},
  { 173, -1, sizeof(::improbable::platform::runtime::GetWorkerInterestRequest)},
  { 178, 185, sizeof(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse)},
  { 187, -1, sizeof(::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration)},
  { 195, -1, sizeof(::improbable::platform::runtime::GetWorkerInterestResponse)},
  { 204, -1, sizeof(::improbable::platform::runtime::InspectorStreamingQuery)},
  { 211, -1, sizeof(::improbable::platform::runtime::LoadBalancingGridFormat)},
  { 217, -1, sizeof(::improbable::platform::runtime::GetLoadBalancingStrategyRequest)},
  { 224, -1, sizeof(::improbable::platform::runtime::GridPartition)},
  { 231, -1, sizeof(::improbable::platform::runtime::GridPartitionStrategy)},
  { 237, -1, sizeof(::improbable::platform::runtime::GetLoadBalancingStrategyResponse)},
  { 244, -1, sizeof(::improbable::platform::runtime::GetVirtualWorkerMappingRequest)},
  { 249, 256, sizeof(::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse)},
  { 258, -1, sizeof(::improbable::platform::runtime::GetVirtualWorkerMappingResponse)},
  { 264, 271, sizeof(::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse)},
  { 273, 280, sizeof(::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse)},
  { 282, -1, sizeof(::improbable::platform::runtime::WorkerDetails_ComponentSet)},
  { 288, 295, sizeof(::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse)},
  { 297, -1, sizeof(::improbable::platform::runtime::WorkerDetails)},
  { 308, -1, sizeof(::improbable::platform::runtime::Region_RectanglesRegion)},
  { 314, -1, sizeof(::improbable::platform::runtime::Region)},
  { 321, -1, sizeof(::improbable::platform::runtime::GetWorldExtentsRequest)},
  { 326, -1, sizeof(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision)},
  { 333, -1, sizeof(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision)},
  { 340, -1, sizeof(::improbable::platform::runtime::GetWorldExtentsResponse)},
  { 347, -1, sizeof(::improbable::platform::runtime::GetChunksRequest)},
  { 353, -1, sizeof(::improbable::platform::runtime::GetChunksResponse)},
  { 359, 366, sizeof(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse)},
  { 368, 375, sizeof(::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse)},
  { 377, -1, sizeof(::improbable::platform::runtime::ChunkDetails)},
  { 387, -1, sizeof(::improbable::platform::runtime::InspectionEntitySubscriptionQuery)},
  { 394, -1, sizeof(::improbable::platform::runtime::InspectionEntitySubscriptionResponse)},
  { 404, -1, sizeof(::improbable::platform::runtime::InspectionEntityComponentId)},
  { 411, 418, sizeof(::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse)},
  { 420, -1, sizeof(::improbable::platform::runtime::InspectionEntitySnapshot)},
  { 427, -1, sizeof(::improbable::platform::runtime::InspectionEntityComponentUpdate)},
  { 435, 442, sizeof(::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse)},
  { 444, -1, sizeof(::improbable::platform::runtime::InspectionEntityAuthorityState)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_RenderableComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerNodeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerNodeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_DeleteWorkerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_DeleteWorkerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_DeleteEntitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_DeleteEntitiesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_Heatmap_Cell_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_Heatmap_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_ChunkResolution_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_SquareGridResolution_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_AutoResolution_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityHeatmapOptions_Resolution_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_EntityHeatmapOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetEntityHeatmapRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetEntityHeatmapResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetEntityDetailsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetEntityDetailsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetAllWorkersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetAllWorkersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerSummary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerLoadbalancingStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorkerDetailsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorkerDetailsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorkerInterestRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorkerInterestResponse_WorkerInterestConfiguration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorkerInterestResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectorStreamingQuery_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_LoadBalancingGridFormat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetLoadBalancingStrategyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GridPartition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GridPartitionStrategy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetLoadBalancingStrategyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetVirtualWorkerMappingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetVirtualWorkerMappingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerDetails_ComponentSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerDetails_MetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_WorkerDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_Region_RectanglesRegion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_Region_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorldExtentsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorldExtentsResponse_WorldSubdivision_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetWorldExtentsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetChunksRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_GetChunksResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_ChunkDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntitySubscriptionQuery_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntitySubscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntityComponentId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntitySnapshot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntityComponentUpdate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::platform::runtime::_InspectionEntityAuthorityState_default_instance_),
};

const char descriptor_table_protodef_runtime_2finspection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030runtime/inspection.proto\022\033improbable.p"
  "latform.runtime\032 google/protobuf/field_m"
  "ask.proto\032\024runtime/common.proto\032\023runtime"
  "/query.proto\032\036runtime/worker_attribute.p"
  "roto\"\316\001\n\nEntityData\022\021\n\tentity_id\030\001 \001(\003\022O"
  "\n\025renderable_components\030\002 \003(\01320.improbab"
  "le.platform.runtime.RenderableComponent\022"
  "\022\n\006prefab\030\003 \001(\tB\002\030\001\022H\n\017entity_position\030\004"
  " \001(\0132+.improbable.platform.runtime.Entit"
  "yPositionB\002\030\001\"1\n\016EntityPosition\022\t\n\001x\030\001 \001"
  "(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"d\n\023RenderableCo"
  "mponent\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\032\n\022"
  "assigned_worker_id\030\003 \001(\t\022\024\n\014component_id"
  "\030\004 \001(\r\"&\n\021WorkerNodeRequest\022\021\n\tworker_id"
  "\030\001 \001(\t\"\'\n\022WorkerNodeResponse\022\021\n\tnode_nam"
  "e\030\001 \001(\t\"(\n\023DeleteWorkerRequest\022\021\n\tworker"
  "_id\030\001 \001(\t\"\026\n\024DeleteWorkerResponse\"R\n\025Del"
  "eteEntitiesRequest\0229\n\nentity_ids\030\001 \003(\0132%"
  ".improbable.platform.runtime.EntityId\"\030\n"
  "\026DeleteEntitiesResponse\"\231\001\n\007Heatmap\0228\n\005c"
  "ells\030\001 \003(\0132).improbable.platform.runtime"
  ".Heatmap.Cell\032T\n\004Cell\022\024\n\014entity_count\030\001 "
  "\001(\003\0226\n\006extent\030\002 \001(\0132&.improbable.platfor"
  "m.runtime.Rectangle\"\336\004\n\024EntityHeatmapOpt"
  "ions\0228\n\010viewport\030\001 \001(\0132&.improbable.plat"
  "form.runtime.Rectangle\022P\n\nresolution\030\002 \001"
  "(\0132<.improbable.platform.runtime.EntityH"
  "eatmapOptions.Resolution\032\271\003\n\nResolution\022"
  "a\n\tas_chunks\030\001 \001(\0132L.improbable.platform"
  ".runtime.EntityHeatmapOptions.Resolution"
  ".ChunkResolutionH\000\022h\n\013square_grid\030\002 \001(\0132"
  "Q.improbable.platform.runtime.EntityHeat"
  "mapOptions.Resolution.SquareGridResoluti"
  "onH\000\022f\n\017auto_resolution\030\003 \001(\0132K.improbab"
  "le.platform.runtime.EntityHeatmapOptions"
  ".Resolution.AutoResolutionH\000\032\021\n\017ChunkRes"
  "olution\032+\n\024SquareGridResolution\022\023\n\013edge_"
  "length\030\001 \001(\005\032#\n\016AutoResolution\022\021\n\tmax_ce"
  "lls\030\001 \001(\005B\021\n\017resolution_type\"\222\001\n\027GetEnti"
  "tyHeatmapRequest\022Q\n\026entity_heatmap_optio"
  "ns\030\001 \001(\01321.improbable.platform.runtime.E"
  "ntityHeatmapOptions\022$\n\034desired_response_"
  "interval_ms\030\002 \001(\003\"e\n\030GetEntityHeatmapRes"
  "ponse\0225\n\007heatmap\030\001 \001(\0132$.improbable.plat"
  "form.runtime.Heatmap\022\022\n\nquery_cost\030\002 \001(\002"
  "\",\n\027GetEntityDetailsRequest\022\021\n\tentity_id"
  "\030\001 \001(\003\"X\n\030GetEntityDetailsResponse\022<\n\013en"
  "tity_data\030\001 \001(\0132\'.improbable.platform.ru"
  "ntime.EntityData\"\026\n\024GetAllWorkersRequest"
  "\"]\n\025GetAllWorkersResponse\022D\n\020worker_summ"
  "aries\030\001 \003(\0132*.improbable.platform.runtim"
  "e.WorkerSummary\"\303\001\n\rWorkerSummary\022\021\n\twor"
  "ker_id\030\001 \001(\t\0224\n\010position\030\002 \001(\0132\".improba"
  "ble.platform.runtime.Point\022T\n\024loadbalanc"
  "ing_status\030\003 \001(\01326.improbable.platform.r"
  "untime.WorkerLoadbalancingStatus\022\023\n\013work"
  "er_name\030\004 \001(\t\"\325\001\n\031WorkerLoadbalancingSta"
  "tus\022Z\n\rload_category\030\001 \001(\0162C.improbable."
  "platform.runtime.WorkerLoadbalancingStat"
  "us.LoadCategory\022\022\n\nload_value\030\002 \001(\001\"H\n\014L"
  "oadCategory\022\013\n\007UNKNOWN\020\000\022\017\n\013UNDERLOADED\020"
  "\001\022\n\n\006NORMAL\020\002\022\016\n\nOVERLOADED\020\003\"\\\n\027GetWork"
  "erDetailsRequest\022\021\n\tworker_id\030\001 \001(\t\022.\n\nf"
  "ield_mask\030\002 \001(\0132\032.google.protobuf.FieldM"
  "ask\"\224\001\n\030GetWorkerDetailsResponse\022;\n\007summ"
  "ary\030\001 \001(\0132*.improbable.platform.runtime."
  "WorkerSummary\022;\n\007details\030\002 \001(\0132*.improba"
  "ble.platform.runtime.WorkerDetails\"\032\n\030Ge"
  "tWorkerInterestRequest\"\253\004\n\031GetWorkerInte"
  "restResponse\022#\n\033enable_chunk_based_inter"
  "est\030\001 \001(\010\022 \n\030enable_streaming_queries\030\002 "
  "\001(\010\022\022\n\nchunk_size\030\003 \001(\005\022y\n\033worker_type_i"
  "nterest_config\030\004 \003(\0132T.improbable.platfo"
  "rm.runtime.GetWorkerInterestResponse.Wor"
  "kerTypeInterestConfigEntry\032\223\001\n\035WorkerTyp"
  "eInterestConfigEntry\022\013\n\003key\030\001 \001(\t\022a\n\005val"
  "ue\030\002 \001(\0132R.improbable.platform.runtime.G"
  "etWorkerInterestResponse.WorkerInterestC"
  "onfiguration:\0028\001\032\241\001\n\033WorkerInterestConfi"
  "guration\022\023\n\013worker_type\030\001 \001(\t\022\036\n\026entity_"
  "interest_radius\030\002 \001(\001\022M\n\017streaming_query"
  "\030\003 \003(\01324.improbable.platform.runtime.Ins"
  "pectorStreamingQuery\"A\n\027InspectorStreami"
  "ngQuery\022\026\n\016component_name\030\001 \001(\t\022\016\n\006radiu"
  "s\030\002 \001(\001\"3\n\027LoadBalancingGridFormat\022\030\n\020ce"
  "ll_edge_length\030\001 \001(\005\"x\n\037GetLoadBalancing"
  "StrategyRequest\022K\n\013grid_format\030\001 \001(\01324.i"
  "mprobable.platform.runtime.LoadBalancing"
  "GridFormatH\000B\010\n\006format\"_\n\rGridPartition\022"
  "\031\n\021virtual_worker_id\030\001 \001(\003\0223\n\006region\030\002 \001"
  "(\0132#.improbable.platform.runtime.Region\""
  "\\\n\025GridPartitionStrategy\022C\n\017grid_partiti"
  "ons\030\001 \003(\0132*.improbable.platform.runtime."
  "GridPartition\"\205\001\n GetLoadBalancingStrate"
  "gyResponse\022U\n\027grid_partition_strategy\030\001 "
  "\001(\01322.improbable.platform.runtime.GridPa"
  "rtitionStrategyH\000B\n\n\010strategy\" \n\036GetVirt"
  "ualWorkerMappingRequest\"\307\001\n\037GetVirtualWo"
  "rkerMappingResponse\022l\n\021virtual_to_worker"
  "\030\001 \003(\0132Q.improbable.platform.runtime.Get"
  "VirtualWorkerMappingResponse.VirtualToWo"
  "rkerEntry\0326\n\024VirtualToWorkerEntry\022\013\n\003key"
  "\030\001 \001(\003\022\r\n\005value\030\002 \001(\t:\0028\001\"\234\006\n\rWorkerDeta"
  "ils\022<\n\017interest_region\030\002 \001(\0132#.improbabl"
  "e.platform.runtime.Region\022\030\n\020known_entit"
  "y_ids\030\003 \003(\003\022n\n\033delegated_entity_componen"
  "ts\030\004 \003(\0132I.improbable.platform.runtime.W"
  "orkerDetails.DelegatedEntityComponentsEn"
  "try\022H\n\007metrics\030\005 \003(\01327.improbable.platfo"
  "rm.runtime.WorkerDetails.MetricsEntry\022J\n"
  "\021worker_attributes\030\006 \001(\0132/.improbable.pl"
  "atform.runtime.WorkerAttributeSet\022=\n\020aut"
  "hority_region\030\007 \001(\0132#.improbable.platfor"
  "m.runtime.Region\032y\n\036DelegatedEntityCompo"
  "nentsEntry\022\013\n\003key\030\001 \001(\003\022F\n\005value\030\002 \001(\01327"
  ".improbable.platform.runtime.WorkerDetai"
  "ls.ComponentSet:\0028\001\032\302\001\n\014ComponentSet\022t\n\030"
  "component_ids_with_names\030\001 \003(\0132R.improba"
  "ble.platform.runtime.WorkerDetails.Compo"
  "nentSet.ComponentIdsWithNamesEntry\032<\n\032Co"
  "mponentIdsWithNamesEntry\022\013\n\003key\030\001 \001(\005\022\r\n"
  "\005value\030\002 \001(\t:\0028\001\032.\n\014MetricsEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"\257\001\n\006Region\022M\n\ra"
  "s_rectangles\030\001 \001(\01324.improbable.platform"
  ".runtime.Region.RectanglesRegionH\000\032N\n\020Re"
  "ctanglesRegion\022:\n\nrectangles\030\001 \003(\0132&.imp"
  "robable.platform.runtime.RectangleB\006\n\004ar"
  "ea\"\030\n\026GetWorldExtentsRequest\"\260\003\n\027GetWorl"
  "dExtentsResponse\022`\n\021world_subdivision\030\001 "
  "\001(\0132E.improbable.platform.runtime.GetWor"
  "ldExtentsResponse.WorldSubdivision\022<\n\014wo"
  "rld_bounds\030\002 \001(\0132&.improbable.platform.r"
  "untime.Rectangle\032\364\001\n\020WorldSubdivision\022m\n"
  "\014gsim_extents\030\001 \001(\0132U.improbable.platfor"
  "m.runtime.GetWorldExtentsResponse.WorldS"
  "ubdivision.GsimSubdivisionH\000\032b\n\017GsimSubd"
  "ivision\022;\n\013gsim_bounds\030\001 \003(\0132&.improbabl"
  "e.platform.runtime.Rectangle\022\022\n\nchunk_si"
  "ze\030\002 \001(\005B\r\n\013subdivision\"L\n\020GetChunksRequ"
  "est\0228\n\010viewport\030\001 \001(\0132&.improbable.platf"
  "orm.runtime.Rectangle\"N\n\021GetChunksRespon"
  "se\0229\n\006chunks\030\001 \003(\0132).improbable.platform"
  ".runtime.ChunkDetails\"\304\003\n\014ChunkDetails\022\020"
  "\n\010chunk_id\030\001 \001(\t\0226\n\006extent\030\002 \001(\0132&.impro"
  "bable.platform.runtime.Rectangle\022\035\n\025subs"
  "cribed_worker_ids\030\003 \003(\t\022\\\n\022worker_assign"
  "ments\030\004 \003(\0132@.improbable.platform.runtim"
  "e.ChunkDetails.WorkerAssignmentsEntry\022q\n"
  "\033worker_assignment_overrides\030\005 \003(\0132H.imp"
  "robable.platform.runtime.ChunkDetails.Wo"
  "rkerAssignmentOverridesEntryB\002\030\001\0328\n\026Work"
  "erAssignmentsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\032@\n\036WorkerAssignmentOverridesE"
  "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\302\001\n"
  "!InspectionEntitySubscriptionQuery\022P\n\nco"
  "nstraint\030\001 \001(\0132<.improbable.platform.run"
  "time.InspectionEntityQueryConstraint\022K\n\013"
  "result_type\030\002 \001(\01326.improbable.platform."
  "runtime.InspectionQueryResultType\"\226\003\n$In"
  "spectionEntitySubscriptionResponse\022\030\n\020de"
  "leted_entities\030\001 \003(\004\022T\n\022removed_componen"
  "ts\030\002 \003(\01328.improbable.platform.runtime.I"
  "nspectionEntityComponentId\022M\n\016added_enti"
  "ties\030\003 \003(\01325.improbable.platform.runtime"
  ".InspectionEntitySnapshot\022X\n\022updated_com"
  "ponents\030\004 \003(\0132<.improbable.platform.runt"
  "ime.InspectionEntityComponentUpdate\022U\n\020a"
  "uthority_states\030\005 \003(\0132;.improbable.platf"
  "orm.runtime.InspectionEntityAuthoritySta"
  "te\"F\n\033InspectionEntityComponentId\022\021\n\tent"
  "ity_id\030\001 \001(\003\022\024\n\014component_id\030\002 \001(\r\"\273\001\n\030I"
  "nspectionEntitySnapshot\022\021\n\tentity_id\030\001 \001"
  "(\003\022Y\n\ncomponents\030\002 \003(\0132E.improbable.plat"
  "form.runtime.InspectionEntitySnapshot.Co"
  "mponentsEntry\0321\n\017ComponentsEntry\022\013\n\003key\030"
  "\001 \001(\r\022\r\n\005value\030\002 \001(\014:\0028\001\"\244\001\n\037InspectionE"
  "ntityComponentUpdate\022U\n\023entity_component"
  "_id\030\001 \001(\01328.improbable.platform.runtime."
  "InspectionEntityComponentId\022\021\n\tcomponent"
  "\030\002 \001(\014\022\027\n\017fields_to_clear\030\003 \003(\r\"\340\001\n\036Insp"
  "ectionEntityAuthorityState\022\021\n\tentity_id\030"
  "\001 \001(\003\022p\n\023component_authority\030\002 \003(\0132S.imp"
  "robable.platform.runtime.InspectionEntit"
  "yAuthorityState.ComponentAuthorityEntry\032"
  "9\n\027ComponentAuthorityEntry\022\013\n\003key\030\001 \001(\r\022"
  "\r\n\005value\030\002 \001(\t:\0028\0012\322\r\n\021InspectionService"
  "\022r\n\rGetWorkerNode\022..improbable.platform."
  "runtime.WorkerNodeRequest\032/.improbable.p"
  "latform.runtime.WorkerNodeResponse\"\000\022u\n\014"
  "DeleteWorker\0220.improbable.platform.runti"
  "me.DeleteWorkerRequest\0321.improbable.plat"
  "form.runtime.DeleteWorkerResponse\"\000\022\201\001\n\020"
  "GetWorkerDetails\0224.improbable.platform.r"
  "untime.GetWorkerDetailsRequest\0325.improba"
  "ble.platform.runtime.GetWorkerDetailsRes"
  "ponse\"\000\022\212\001\n\027GetWorkerInterestConfig\0225.im"
  "probable.platform.runtime.GetWorkerInter"
  "estRequest\0326.improbable.platform.runtime"
  ".GetWorkerInterestResponse\"\000\022{\n\016DeleteEn"
  "tities\0222.improbable.platform.runtime.Del"
  "eteEntitiesRequest\0323.improbable.platform"
  ".runtime.DeleteEntitiesResponse\"\000\022\201\001\n\020Ge"
  "tEntityHeatmap\0224.improbable.platform.run"
  "time.GetEntityHeatmapRequest\0325.improbabl"
  "e.platform.runtime.GetEntityHeatmapRespo"
  "nse\"\000\022\201\001\n\020GetEntityDetails\0224.improbable."
  "platform.runtime.GetEntityDetailsRequest"
  "\0325.improbable.platform.runtime.GetEntity"
  "DetailsResponse\"\000\022~\n\017GetWorldExtents\0223.i"
  "mprobable.platform.runtime.GetWorldExten"
  "tsRequest\0324.improbable.platform.runtime."
  "GetWorldExtentsResponse\"\000\022l\n\tGetChunks\022-"
  ".improbable.platform.runtime.GetChunksRe"
  "quest\032..improbable.platform.runtime.GetC"
  "hunksResponse\"\000\022x\n\rGetAllWorkers\0221.impro"
  "bable.platform.runtime.GetAllWorkersRequ"
  "est\0322.improbable.platform.runtime.GetAll"
  "WorkersResponse\"\000\022\231\001\n\030GetLoadBalancingSt"
  "rategy\022<.improbable.platform.runtime.Get"
  "LoadBalancingStrategyRequest\032=.improbabl"
  "e.platform.runtime.GetLoadBalancingStrat"
  "egyResponse\"\000\022\226\001\n\027GetVirtualWorkerMappin"
  "g\022;.improbable.platform.runtime.GetVirtu"
  "alWorkerMappingRequest\032<.improbable.plat"
  "form.runtime.GetVirtualWorkerMappingResp"
  "onse\"\000\022\236\001\n\023SubscribeToEntities\022>.improba"
  "ble.platform.runtime.InspectionEntitySub"
  "scriptionQuery\032A.improbable.platform.run"
  "time.InspectionEntitySubscriptionRespons"
  "e\"\000(\0010\001B\022B\020InspectionProtosb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_runtime_2finspection_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_runtime_2fcommon_2eproto,
  &::descriptor_table_runtime_2fquery_2eproto,
  &::descriptor_table_runtime_2fworker_5fattribute_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_runtime_2finspection_2eproto_sccs[63] = {
  &scc_info_ChunkDetails_runtime_2finspection_2eproto.base,
  &scc_info_ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_ChunkDetails_WorkerAssignmentsEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_DeleteEntitiesRequest_runtime_2finspection_2eproto.base,
  &scc_info_DeleteEntitiesResponse_runtime_2finspection_2eproto.base,
  &scc_info_DeleteWorkerRequest_runtime_2finspection_2eproto.base,
  &scc_info_DeleteWorkerResponse_runtime_2finspection_2eproto.base,
  &scc_info_EntityData_runtime_2finspection_2eproto.base,
  &scc_info_EntityHeatmapOptions_runtime_2finspection_2eproto.base,
  &scc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto.base,
  &scc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto.base,
  &scc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto.base,
  &scc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto.base,
  &scc_info_EntityPosition_runtime_2finspection_2eproto.base,
  &scc_info_GetAllWorkersRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetAllWorkersResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetChunksRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetChunksResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetEntityDetailsRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetEntityDetailsResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetEntityHeatmapRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetEntityHeatmapResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetLoadBalancingStrategyRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetLoadBalancingStrategyResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetVirtualWorkerMappingRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetVirtualWorkerMappingResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_GetWorkerDetailsRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetWorkerDetailsResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetWorkerInterestRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetWorkerInterestResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto.base,
  &scc_info_GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_GetWorldExtentsRequest_runtime_2finspection_2eproto.base,
  &scc_info_GetWorldExtentsResponse_runtime_2finspection_2eproto.base,
  &scc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto.base,
  &scc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto.base,
  &scc_info_GridPartition_runtime_2finspection_2eproto.base,
  &scc_info_GridPartitionStrategy_runtime_2finspection_2eproto.base,
  &scc_info_Heatmap_runtime_2finspection_2eproto.base,
  &scc_info_Heatmap_Cell_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntityComponentId_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntitySnapshot_ComponentsEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntitySubscriptionQuery_runtime_2finspection_2eproto.base,
  &scc_info_InspectionEntitySubscriptionResponse_runtime_2finspection_2eproto.base,
  &scc_info_InspectorStreamingQuery_runtime_2finspection_2eproto.base,
  &scc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto.base,
  &scc_info_Region_runtime_2finspection_2eproto.base,
  &scc_info_Region_RectanglesRegion_runtime_2finspection_2eproto.base,
  &scc_info_RenderableComponent_runtime_2finspection_2eproto.base,
  &scc_info_WorkerDetails_runtime_2finspection_2eproto.base,
  &scc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto.base,
  &scc_info_WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_WorkerDetails_MetricsEntry_DoNotUse_runtime_2finspection_2eproto.base,
  &scc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto.base,
  &scc_info_WorkerNodeRequest_runtime_2finspection_2eproto.base,
  &scc_info_WorkerNodeResponse_runtime_2finspection_2eproto.base,
  &scc_info_WorkerSummary_runtime_2finspection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_runtime_2finspection_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_runtime_2finspection_2eproto = {
  false, false, descriptor_table_protodef_runtime_2finspection_2eproto, "runtime/inspection.proto", 9195,
  &descriptor_table_runtime_2finspection_2eproto_once, descriptor_table_runtime_2finspection_2eproto_sccs, descriptor_table_runtime_2finspection_2eproto_deps, 63, 4,
  schemas, file_default_instances, TableStruct_runtime_2finspection_2eproto::offsets,
  file_level_metadata_runtime_2finspection_2eproto, 63, file_level_enum_descriptors_runtime_2finspection_2eproto, file_level_service_descriptors_runtime_2finspection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_runtime_2finspection_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_runtime_2finspection_2eproto)), true);
namespace improbable {
namespace platform {
namespace runtime {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WorkerLoadbalancingStatus_LoadCategory_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_runtime_2finspection_2eproto);
  return file_level_enum_descriptors_runtime_2finspection_2eproto[0];
}
bool WorkerLoadbalancingStatus_LoadCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr WorkerLoadbalancingStatus_LoadCategory WorkerLoadbalancingStatus::UNKNOWN;
constexpr WorkerLoadbalancingStatus_LoadCategory WorkerLoadbalancingStatus::UNDERLOADED;
constexpr WorkerLoadbalancingStatus_LoadCategory WorkerLoadbalancingStatus::NORMAL;
constexpr WorkerLoadbalancingStatus_LoadCategory WorkerLoadbalancingStatus::OVERLOADED;
constexpr WorkerLoadbalancingStatus_LoadCategory WorkerLoadbalancingStatus::LoadCategory_MIN;
constexpr WorkerLoadbalancingStatus_LoadCategory WorkerLoadbalancingStatus::LoadCategory_MAX;
constexpr int WorkerLoadbalancingStatus::LoadCategory_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class EntityData::_Internal {
 public:
  static const ::improbable::platform::runtime::EntityPosition& entity_position(const EntityData* msg);
};

const ::improbable::platform::runtime::EntityPosition&
EntityData::_Internal::entity_position(const EntityData* msg) {
  return *msg->entity_position_;
}
EntityData::EntityData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  renderable_components_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityData)
}
EntityData::EntityData(const EntityData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      renderable_components_(from.renderable_components_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prefab_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prefab().empty()) {
    prefab_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prefab(), 
      GetArena());
  }
  if (from._internal_has_entity_position()) {
    entity_position_ = new ::improbable::platform::runtime::EntityPosition(*from.entity_position_);
  } else {
    entity_position_ = nullptr;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityData)
}

void EntityData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityData_runtime_2finspection_2eproto.base);
  prefab_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&entity_position_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&entity_position_)) + sizeof(entity_id_));
}

EntityData::~EntityData() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prefab_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_position_;
}

void EntityData::ArenaDtor(void* object) {
  EntityData* _this = reinterpret_cast< EntityData* >(object);
  (void)_this;
}
void EntityData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityData& EntityData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityData_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityData::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  renderable_components_.Clear();
  prefab_.ClearToEmpty();
  if (GetArena() == nullptr && entity_position_ != nullptr) {
    delete entity_position_;
  }
  entity_position_ = nullptr;
  entity_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .improbable.platform.runtime.RenderableComponent renderable_components = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_renderable_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string prefab = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_prefab();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.EntityData.prefab"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.EntityPosition entity_position = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // repeated .improbable.platform.runtime.RenderableComponent renderable_components = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_renderable_components_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_renderable_components(i), target, stream);
  }

  // string prefab = 3 [deprecated = true];
  if (this->prefab().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prefab().data(), static_cast<int>(this->_internal_prefab().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.EntityData.prefab");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_prefab(), target);
  }

  // .improbable.platform.runtime.EntityPosition entity_position = 4 [deprecated = true];
  if (this->has_entity_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::entity_position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityData)
  return target;
}

size_t EntityData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.RenderableComponent renderable_components = 2;
  total_size += 1UL * this->_internal_renderable_components_size();
  for (const auto& msg : this->renderable_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string prefab = 3 [deprecated = true];
  if (this->prefab().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prefab());
  }

  // .improbable.platform.runtime.EntityPosition entity_position = 4 [deprecated = true];
  if (this->has_entity_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *entity_position_);
  }

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityData)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityData)
    MergeFrom(*source);
  }
}

void EntityData::MergeFrom(const EntityData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  renderable_components_.MergeFrom(from.renderable_components_);
  if (from.prefab().size() > 0) {
    _internal_set_prefab(from._internal_prefab());
  }
  if (from.has_entity_position()) {
    _internal_mutable_entity_position()->::improbable::platform::runtime::EntityPosition::MergeFrom(from._internal_entity_position());
  }
  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
}

void EntityData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityData::CopyFrom(const EntityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityData::IsInitialized() const {
  return true;
}

void EntityData::InternalSwap(EntityData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  renderable_components_.InternalSwap(&other->renderable_components_);
  prefab_.Swap(&other->prefab_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityData, entity_id_)
      + sizeof(EntityData::entity_id_)
      - PROTOBUF_FIELD_OFFSET(EntityData, entity_position_)>(
          reinterpret_cast<char*>(&entity_position_),
          reinterpret_cast<char*>(&other->entity_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityPosition::_Internal {
 public:
};

EntityPosition::EntityPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityPosition)
}
EntityPosition::EntityPosition(const EntityPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityPosition)
}

void EntityPosition::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

EntityPosition::~EntityPosition() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityPosition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EntityPosition::ArenaDtor(void* object) {
  EntityPosition* _this = reinterpret_cast< EntityPosition* >(object);
  (void)_this;
}
void EntityPosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityPosition& EntityPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityPosition_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityPosition)
  return target;
}

size_t EntityPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityPosition)
    MergeFrom(*source);
  }
}

void EntityPosition::MergeFrom(const EntityPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void EntityPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityPosition::CopyFrom(const EntityPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityPosition::IsInitialized() const {
  return true;
}

void EntityPosition::InternalSwap(EntityPosition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityPosition, z_)
      + sizeof(EntityPosition::z_)
      - PROTOBUF_FIELD_OFFSET(EntityPosition, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RenderableComponent::_Internal {
 public:
};

RenderableComponent::RenderableComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.RenderableComponent)
}
RenderableComponent::RenderableComponent(const RenderableComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  assigned_worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_assigned_worker_id().empty()) {
    assigned_worker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_assigned_worker_id(), 
      GetArena());
  }
  component_id_ = from.component_id_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.RenderableComponent)
}

void RenderableComponent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RenderableComponent_runtime_2finspection_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  assigned_worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  component_id_ = 0u;
}

RenderableComponent::~RenderableComponent() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.RenderableComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RenderableComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  assigned_worker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RenderableComponent::ArenaDtor(void* object) {
  RenderableComponent* _this = reinterpret_cast< RenderableComponent* >(object);
  (void)_this;
}
void RenderableComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RenderableComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RenderableComponent& RenderableComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RenderableComponent_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void RenderableComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.RenderableComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  value_.ClearToEmpty();
  assigned_worker_id_.ClearToEmpty();
  component_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RenderableComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.RenderableComponent.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.RenderableComponent.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string assigned_worker_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_assigned_worker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.RenderableComponent.assigned_worker_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 component_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          component_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RenderableComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.RenderableComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.RenderableComponent.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.RenderableComponent.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  // string assigned_worker_id = 3;
  if (this->assigned_worker_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assigned_worker_id().data(), static_cast<int>(this->_internal_assigned_worker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.RenderableComponent.assigned_worker_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_assigned_worker_id(), target);
  }

  // uint32 component_id = 4;
  if (this->component_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.RenderableComponent)
  return target;
}

size_t RenderableComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.RenderableComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string assigned_worker_id = 3;
  if (this->assigned_worker_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assigned_worker_id());
  }

  // uint32 component_id = 4;
  if (this->component_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_component_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenderableComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.RenderableComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const RenderableComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RenderableComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.RenderableComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.RenderableComponent)
    MergeFrom(*source);
  }
}

void RenderableComponent::MergeFrom(const RenderableComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.RenderableComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.assigned_worker_id().size() > 0) {
    _internal_set_assigned_worker_id(from._internal_assigned_worker_id());
  }
  if (from.component_id() != 0) {
    _internal_set_component_id(from._internal_component_id());
  }
}

void RenderableComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.RenderableComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenderableComponent::CopyFrom(const RenderableComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.RenderableComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenderableComponent::IsInitialized() const {
  return true;
}

void RenderableComponent::InternalSwap(RenderableComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  assigned_worker_id_.Swap(&other->assigned_worker_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(component_id_, other->component_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RenderableComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WorkerNodeRequest::_Internal {
 public:
};

WorkerNodeRequest::WorkerNodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.WorkerNodeRequest)
}
WorkerNodeRequest::WorkerNodeRequest(const WorkerNodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_id().empty()) {
    worker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.WorkerNodeRequest)
}

void WorkerNodeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerNodeRequest_runtime_2finspection_2eproto.base);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WorkerNodeRequest::~WorkerNodeRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.WorkerNodeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerNodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkerNodeRequest::ArenaDtor(void* object) {
  WorkerNodeRequest* _this = reinterpret_cast< WorkerNodeRequest* >(object);
  (void)_this;
}
void WorkerNodeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerNodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerNodeRequest& WorkerNodeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerNodeRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void WorkerNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.WorkerNodeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerNodeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string worker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.WorkerNodeRequest.worker_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerNodeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.WorkerNodeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_id().data(), static_cast<int>(this->_internal_worker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.WorkerNodeRequest.worker_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_worker_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.WorkerNodeRequest)
  return target;
}

size_t WorkerNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.WorkerNodeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerNodeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.WorkerNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerNodeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerNodeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.WorkerNodeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.WorkerNodeRequest)
    MergeFrom(*source);
  }
}

void WorkerNodeRequest::MergeFrom(const WorkerNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.WorkerNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worker_id().size() > 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
}

void WorkerNodeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.WorkerNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerNodeRequest::CopyFrom(const WorkerNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.WorkerNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerNodeRequest::IsInitialized() const {
  return true;
}

void WorkerNodeRequest::InternalSwap(WorkerNodeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worker_id_.Swap(&other->worker_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerNodeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WorkerNodeResponse::_Internal {
 public:
};

WorkerNodeResponse::WorkerNodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.WorkerNodeResponse)
}
WorkerNodeResponse::WorkerNodeResponse(const WorkerNodeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  node_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node_name().empty()) {
    node_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_node_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.WorkerNodeResponse)
}

void WorkerNodeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerNodeResponse_runtime_2finspection_2eproto.base);
  node_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WorkerNodeResponse::~WorkerNodeResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.WorkerNodeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerNodeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  node_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkerNodeResponse::ArenaDtor(void* object) {
  WorkerNodeResponse* _this = reinterpret_cast< WorkerNodeResponse* >(object);
  (void)_this;
}
void WorkerNodeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerNodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerNodeResponse& WorkerNodeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerNodeResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void WorkerNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.WorkerNodeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerNodeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string node_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_node_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.WorkerNodeResponse.node_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerNodeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.WorkerNodeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string node_name = 1;
  if (this->node_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_name().data(), static_cast<int>(this->_internal_node_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.WorkerNodeResponse.node_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_node_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.WorkerNodeResponse)
  return target;
}

size_t WorkerNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.WorkerNodeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string node_name = 1;
  if (this->node_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerNodeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.WorkerNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerNodeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerNodeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.WorkerNodeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.WorkerNodeResponse)
    MergeFrom(*source);
  }
}

void WorkerNodeResponse::MergeFrom(const WorkerNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.WorkerNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_name().size() > 0) {
    _internal_set_node_name(from._internal_node_name());
  }
}

void WorkerNodeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.WorkerNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerNodeResponse::CopyFrom(const WorkerNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.WorkerNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerNodeResponse::IsInitialized() const {
  return true;
}

void WorkerNodeResponse::InternalSwap(WorkerNodeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node_name_.Swap(&other->node_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerNodeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteWorkerRequest::_Internal {
 public:
};

DeleteWorkerRequest::DeleteWorkerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.DeleteWorkerRequest)
}
DeleteWorkerRequest::DeleteWorkerRequest(const DeleteWorkerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_id().empty()) {
    worker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.DeleteWorkerRequest)
}

void DeleteWorkerRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteWorkerRequest_runtime_2finspection_2eproto.base);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteWorkerRequest::~DeleteWorkerRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.DeleteWorkerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteWorkerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteWorkerRequest::ArenaDtor(void* object) {
  DeleteWorkerRequest* _this = reinterpret_cast< DeleteWorkerRequest* >(object);
  (void)_this;
}
void DeleteWorkerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteWorkerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteWorkerRequest& DeleteWorkerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteWorkerRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void DeleteWorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.DeleteWorkerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteWorkerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string worker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.DeleteWorkerRequest.worker_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteWorkerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.DeleteWorkerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_id().data(), static_cast<int>(this->_internal_worker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.DeleteWorkerRequest.worker_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_worker_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.DeleteWorkerRequest)
  return target;
}

size_t DeleteWorkerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.DeleteWorkerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteWorkerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.DeleteWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteWorkerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteWorkerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.DeleteWorkerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.DeleteWorkerRequest)
    MergeFrom(*source);
  }
}

void DeleteWorkerRequest::MergeFrom(const DeleteWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.DeleteWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worker_id().size() > 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
}

void DeleteWorkerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.DeleteWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteWorkerRequest::CopyFrom(const DeleteWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.DeleteWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteWorkerRequest::IsInitialized() const {
  return true;
}

void DeleteWorkerRequest::InternalSwap(DeleteWorkerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worker_id_.Swap(&other->worker_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteWorkerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteWorkerResponse::_Internal {
 public:
};

DeleteWorkerResponse::DeleteWorkerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.DeleteWorkerResponse)
}
DeleteWorkerResponse::DeleteWorkerResponse(const DeleteWorkerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.DeleteWorkerResponse)
}

void DeleteWorkerResponse::SharedCtor() {
}

DeleteWorkerResponse::~DeleteWorkerResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.DeleteWorkerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteWorkerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteWorkerResponse::ArenaDtor(void* object) {
  DeleteWorkerResponse* _this = reinterpret_cast< DeleteWorkerResponse* >(object);
  (void)_this;
}
void DeleteWorkerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteWorkerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteWorkerResponse& DeleteWorkerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteWorkerResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void DeleteWorkerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.DeleteWorkerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteWorkerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteWorkerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.DeleteWorkerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.DeleteWorkerResponse)
  return target;
}

size_t DeleteWorkerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.DeleteWorkerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteWorkerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.DeleteWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteWorkerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteWorkerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.DeleteWorkerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.DeleteWorkerResponse)
    MergeFrom(*source);
  }
}

void DeleteWorkerResponse::MergeFrom(const DeleteWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.DeleteWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteWorkerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.DeleteWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteWorkerResponse::CopyFrom(const DeleteWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.DeleteWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteWorkerResponse::IsInitialized() const {
  return true;
}

void DeleteWorkerResponse::InternalSwap(DeleteWorkerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteWorkerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteEntitiesRequest::_Internal {
 public:
};

void DeleteEntitiesRequest::clear_entity_ids() {
  entity_ids_.Clear();
}
DeleteEntitiesRequest::DeleteEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entity_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.DeleteEntitiesRequest)
}
DeleteEntitiesRequest::DeleteEntitiesRequest(const DeleteEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entity_ids_(from.entity_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.DeleteEntitiesRequest)
}

void DeleteEntitiesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteEntitiesRequest_runtime_2finspection_2eproto.base);
}

DeleteEntitiesRequest::~DeleteEntitiesRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.DeleteEntitiesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteEntitiesRequest::ArenaDtor(void* object) {
  DeleteEntitiesRequest* _this = reinterpret_cast< DeleteEntitiesRequest* >(object);
  (void)_this;
}
void DeleteEntitiesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteEntitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteEntitiesRequest& DeleteEntitiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteEntitiesRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void DeleteEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.DeleteEntitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteEntitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.EntityId entity_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entity_ids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteEntitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.DeleteEntitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.EntityId entity_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entity_ids_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entity_ids(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.DeleteEntitiesRequest)
  return target;
}

size_t DeleteEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.DeleteEntitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.EntityId entity_ids = 1;
  total_size += 1UL * this->_internal_entity_ids_size();
  for (const auto& msg : this->entity_ids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteEntitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.DeleteEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteEntitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteEntitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.DeleteEntitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.DeleteEntitiesRequest)
    MergeFrom(*source);
  }
}

void DeleteEntitiesRequest::MergeFrom(const DeleteEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.DeleteEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_ids_.MergeFrom(from.entity_ids_);
}

void DeleteEntitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.DeleteEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEntitiesRequest::CopyFrom(const DeleteEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.DeleteEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEntitiesRequest::IsInitialized() const {
  return true;
}

void DeleteEntitiesRequest::InternalSwap(DeleteEntitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entity_ids_.InternalSwap(&other->entity_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteEntitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteEntitiesResponse::_Internal {
 public:
};

DeleteEntitiesResponse::DeleteEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.DeleteEntitiesResponse)
}
DeleteEntitiesResponse::DeleteEntitiesResponse(const DeleteEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.DeleteEntitiesResponse)
}

void DeleteEntitiesResponse::SharedCtor() {
}

DeleteEntitiesResponse::~DeleteEntitiesResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.DeleteEntitiesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteEntitiesResponse::ArenaDtor(void* object) {
  DeleteEntitiesResponse* _this = reinterpret_cast< DeleteEntitiesResponse* >(object);
  (void)_this;
}
void DeleteEntitiesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteEntitiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteEntitiesResponse& DeleteEntitiesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteEntitiesResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void DeleteEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.DeleteEntitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteEntitiesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteEntitiesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.DeleteEntitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.DeleteEntitiesResponse)
  return target;
}

size_t DeleteEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.DeleteEntitiesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteEntitiesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.DeleteEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteEntitiesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteEntitiesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.DeleteEntitiesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.DeleteEntitiesResponse)
    MergeFrom(*source);
  }
}

void DeleteEntitiesResponse::MergeFrom(const DeleteEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.DeleteEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteEntitiesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.DeleteEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEntitiesResponse::CopyFrom(const DeleteEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.DeleteEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteEntitiesResponse::IsInitialized() const {
  return true;
}

void DeleteEntitiesResponse::InternalSwap(DeleteEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteEntitiesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Heatmap_Cell::_Internal {
 public:
  static const ::improbable::platform::runtime::Rectangle& extent(const Heatmap_Cell* msg);
};

const ::improbable::platform::runtime::Rectangle&
Heatmap_Cell::_Internal::extent(const Heatmap_Cell* msg) {
  return *msg->extent_;
}
void Heatmap_Cell::clear_extent() {
  if (GetArena() == nullptr && extent_ != nullptr) {
    delete extent_;
  }
  extent_ = nullptr;
}
Heatmap_Cell::Heatmap_Cell(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.Heatmap.Cell)
}
Heatmap_Cell::Heatmap_Cell(const Heatmap_Cell& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_extent()) {
    extent_ = new ::improbable::platform::runtime::Rectangle(*from.extent_);
  } else {
    extent_ = nullptr;
  }
  entity_count_ = from.entity_count_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.Heatmap.Cell)
}

void Heatmap_Cell::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Heatmap_Cell_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&extent_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&entity_count_) -
      reinterpret_cast<char*>(&extent_)) + sizeof(entity_count_));
}

Heatmap_Cell::~Heatmap_Cell() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.Heatmap.Cell)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Heatmap_Cell::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete extent_;
}

void Heatmap_Cell::ArenaDtor(void* object) {
  Heatmap_Cell* _this = reinterpret_cast< Heatmap_Cell* >(object);
  (void)_this;
}
void Heatmap_Cell::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Heatmap_Cell::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Heatmap_Cell& Heatmap_Cell::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Heatmap_Cell_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void Heatmap_Cell::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.Heatmap.Cell)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && extent_ != nullptr) {
    delete extent_;
  }
  extent_ = nullptr;
  entity_count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Heatmap_Cell::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entity_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entity_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.Rectangle extent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Heatmap_Cell::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.Heatmap.Cell)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_count = 1;
  if (this->entity_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_count(), target);
  }

  // .improbable.platform.runtime.Rectangle extent = 2;
  if (this->has_extent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::extent(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.Heatmap.Cell)
  return target;
}

size_t Heatmap_Cell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.Heatmap.Cell)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.Rectangle extent = 2;
  if (this->has_extent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extent_);
  }

  // int64 entity_count = 1;
  if (this->entity_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entity_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Heatmap_Cell::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.Heatmap.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  const Heatmap_Cell* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Heatmap_Cell>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.Heatmap.Cell)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.Heatmap.Cell)
    MergeFrom(*source);
  }
}

void Heatmap_Cell::MergeFrom(const Heatmap_Cell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.Heatmap.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_extent()) {
    _internal_mutable_extent()->::improbable::platform::runtime::Rectangle::MergeFrom(from._internal_extent());
  }
  if (from.entity_count() != 0) {
    _internal_set_entity_count(from._internal_entity_count());
  }
}

void Heatmap_Cell::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.Heatmap.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heatmap_Cell::CopyFrom(const Heatmap_Cell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.Heatmap.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heatmap_Cell::IsInitialized() const {
  return true;
}

void Heatmap_Cell::InternalSwap(Heatmap_Cell* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Heatmap_Cell, entity_count_)
      + sizeof(Heatmap_Cell::entity_count_)
      - PROTOBUF_FIELD_OFFSET(Heatmap_Cell, extent_)>(
          reinterpret_cast<char*>(&extent_),
          reinterpret_cast<char*>(&other->extent_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Heatmap_Cell::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Heatmap::_Internal {
 public:
};

Heatmap::Heatmap(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cells_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.Heatmap)
}
Heatmap::Heatmap(const Heatmap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cells_(from.cells_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.Heatmap)
}

void Heatmap::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Heatmap_runtime_2finspection_2eproto.base);
}

Heatmap::~Heatmap() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.Heatmap)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Heatmap::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Heatmap::ArenaDtor(void* object) {
  Heatmap* _this = reinterpret_cast< Heatmap* >(object);
  (void)_this;
}
void Heatmap::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Heatmap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Heatmap& Heatmap::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Heatmap_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void Heatmap::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.Heatmap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cells_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Heatmap::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.Heatmap.Cell cells = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cells(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Heatmap::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.Heatmap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.Heatmap.Cell cells = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cells_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_cells(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.Heatmap)
  return target;
}

size_t Heatmap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.Heatmap)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.Heatmap.Cell cells = 1;
  total_size += 1UL * this->_internal_cells_size();
  for (const auto& msg : this->cells_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Heatmap::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.Heatmap)
  GOOGLE_DCHECK_NE(&from, this);
  const Heatmap* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Heatmap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.Heatmap)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.Heatmap)
    MergeFrom(*source);
  }
}

void Heatmap::MergeFrom(const Heatmap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.Heatmap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cells_.MergeFrom(from.cells_);
}

void Heatmap::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.Heatmap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heatmap::CopyFrom(const Heatmap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.Heatmap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heatmap::IsInitialized() const {
  return true;
}

void Heatmap::InternalSwap(Heatmap* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cells_.InternalSwap(&other->cells_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Heatmap::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityHeatmapOptions_Resolution_ChunkResolution::_Internal {
 public:
};

EntityHeatmapOptions_Resolution_ChunkResolution::EntityHeatmapOptions_Resolution_ChunkResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
}
EntityHeatmapOptions_Resolution_ChunkResolution::EntityHeatmapOptions_Resolution_ChunkResolution(const EntityHeatmapOptions_Resolution_ChunkResolution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
}

void EntityHeatmapOptions_Resolution_ChunkResolution::SharedCtor() {
}

EntityHeatmapOptions_Resolution_ChunkResolution::~EntityHeatmapOptions_Resolution_ChunkResolution() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityHeatmapOptions_Resolution_ChunkResolution::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EntityHeatmapOptions_Resolution_ChunkResolution::ArenaDtor(void* object) {
  EntityHeatmapOptions_Resolution_ChunkResolution* _this = reinterpret_cast< EntityHeatmapOptions_Resolution_ChunkResolution* >(object);
  (void)_this;
}
void EntityHeatmapOptions_Resolution_ChunkResolution::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityHeatmapOptions_Resolution_ChunkResolution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityHeatmapOptions_Resolution_ChunkResolution& EntityHeatmapOptions_Resolution_ChunkResolution::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityHeatmapOptions_Resolution_ChunkResolution_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityHeatmapOptions_Resolution_ChunkResolution::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityHeatmapOptions_Resolution_ChunkResolution::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityHeatmapOptions_Resolution_ChunkResolution::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  return target;
}

size_t EntityHeatmapOptions_Resolution_ChunkResolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityHeatmapOptions_Resolution_ChunkResolution::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityHeatmapOptions_Resolution_ChunkResolution* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityHeatmapOptions_Resolution_ChunkResolution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
    MergeFrom(*source);
  }
}

void EntityHeatmapOptions_Resolution_ChunkResolution::MergeFrom(const EntityHeatmapOptions_Resolution_ChunkResolution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EntityHeatmapOptions_Resolution_ChunkResolution::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityHeatmapOptions_Resolution_ChunkResolution::CopyFrom(const EntityHeatmapOptions_Resolution_ChunkResolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityHeatmapOptions_Resolution_ChunkResolution::IsInitialized() const {
  return true;
}

void EntityHeatmapOptions_Resolution_ChunkResolution::InternalSwap(EntityHeatmapOptions_Resolution_ChunkResolution* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityHeatmapOptions_Resolution_ChunkResolution::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityHeatmapOptions_Resolution_SquareGridResolution::_Internal {
 public:
};

EntityHeatmapOptions_Resolution_SquareGridResolution::EntityHeatmapOptions_Resolution_SquareGridResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
}
EntityHeatmapOptions_Resolution_SquareGridResolution::EntityHeatmapOptions_Resolution_SquareGridResolution(const EntityHeatmapOptions_Resolution_SquareGridResolution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edge_length_ = from.edge_length_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::SharedCtor() {
  edge_length_ = 0;
}

EntityHeatmapOptions_Resolution_SquareGridResolution::~EntityHeatmapOptions_Resolution_SquareGridResolution() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::ArenaDtor(void* object) {
  EntityHeatmapOptions_Resolution_SquareGridResolution* _this = reinterpret_cast< EntityHeatmapOptions_Resolution_SquareGridResolution* >(object);
  (void)_this;
}
void EntityHeatmapOptions_Resolution_SquareGridResolution::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityHeatmapOptions_Resolution_SquareGridResolution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityHeatmapOptions_Resolution_SquareGridResolution& EntityHeatmapOptions_Resolution_SquareGridResolution::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityHeatmapOptions_Resolution_SquareGridResolution_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityHeatmapOptions_Resolution_SquareGridResolution::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edge_length_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityHeatmapOptions_Resolution_SquareGridResolution::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 edge_length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          edge_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityHeatmapOptions_Resolution_SquareGridResolution::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 edge_length = 1;
  if (this->edge_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_edge_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  return target;
}

size_t EntityHeatmapOptions_Resolution_SquareGridResolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 edge_length = 1;
  if (this->edge_length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_edge_length());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityHeatmapOptions_Resolution_SquareGridResolution* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityHeatmapOptions_Resolution_SquareGridResolution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
    MergeFrom(*source);
  }
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::MergeFrom(const EntityHeatmapOptions_Resolution_SquareGridResolution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.edge_length() != 0) {
    _internal_set_edge_length(from._internal_edge_length());
  }
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::CopyFrom(const EntityHeatmapOptions_Resolution_SquareGridResolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityHeatmapOptions_Resolution_SquareGridResolution::IsInitialized() const {
  return true;
}

void EntityHeatmapOptions_Resolution_SquareGridResolution::InternalSwap(EntityHeatmapOptions_Resolution_SquareGridResolution* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(edge_length_, other->edge_length_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityHeatmapOptions_Resolution_SquareGridResolution::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityHeatmapOptions_Resolution_AutoResolution::_Internal {
 public:
};

EntityHeatmapOptions_Resolution_AutoResolution::EntityHeatmapOptions_Resolution_AutoResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
}
EntityHeatmapOptions_Resolution_AutoResolution::EntityHeatmapOptions_Resolution_AutoResolution(const EntityHeatmapOptions_Resolution_AutoResolution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  max_cells_ = from.max_cells_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
}

void EntityHeatmapOptions_Resolution_AutoResolution::SharedCtor() {
  max_cells_ = 0;
}

EntityHeatmapOptions_Resolution_AutoResolution::~EntityHeatmapOptions_Resolution_AutoResolution() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityHeatmapOptions_Resolution_AutoResolution::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EntityHeatmapOptions_Resolution_AutoResolution::ArenaDtor(void* object) {
  EntityHeatmapOptions_Resolution_AutoResolution* _this = reinterpret_cast< EntityHeatmapOptions_Resolution_AutoResolution* >(object);
  (void)_this;
}
void EntityHeatmapOptions_Resolution_AutoResolution::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityHeatmapOptions_Resolution_AutoResolution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityHeatmapOptions_Resolution_AutoResolution& EntityHeatmapOptions_Resolution_AutoResolution::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityHeatmapOptions_Resolution_AutoResolution_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityHeatmapOptions_Resolution_AutoResolution::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_cells_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityHeatmapOptions_Resolution_AutoResolution::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 max_cells = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          max_cells_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityHeatmapOptions_Resolution_AutoResolution::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_cells = 1;
  if (this->max_cells() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_max_cells(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  return target;
}

size_t EntityHeatmapOptions_Resolution_AutoResolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 max_cells = 1;
  if (this->max_cells() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_cells());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityHeatmapOptions_Resolution_AutoResolution::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityHeatmapOptions_Resolution_AutoResolution* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityHeatmapOptions_Resolution_AutoResolution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
    MergeFrom(*source);
  }
}

void EntityHeatmapOptions_Resolution_AutoResolution::MergeFrom(const EntityHeatmapOptions_Resolution_AutoResolution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_cells() != 0) {
    _internal_set_max_cells(from._internal_max_cells());
  }
}

void EntityHeatmapOptions_Resolution_AutoResolution::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityHeatmapOptions_Resolution_AutoResolution::CopyFrom(const EntityHeatmapOptions_Resolution_AutoResolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityHeatmapOptions_Resolution_AutoResolution::IsInitialized() const {
  return true;
}

void EntityHeatmapOptions_Resolution_AutoResolution::InternalSwap(EntityHeatmapOptions_Resolution_AutoResolution* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(max_cells_, other->max_cells_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityHeatmapOptions_Resolution_AutoResolution::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityHeatmapOptions_Resolution::_Internal {
 public:
  static const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution& as_chunks(const EntityHeatmapOptions_Resolution* msg);
  static const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution& square_grid(const EntityHeatmapOptions_Resolution* msg);
  static const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution& auto_resolution(const EntityHeatmapOptions_Resolution* msg);
};

const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution&
EntityHeatmapOptions_Resolution::_Internal::as_chunks(const EntityHeatmapOptions_Resolution* msg) {
  return *msg->resolution_type_.as_chunks_;
}
const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution&
EntityHeatmapOptions_Resolution::_Internal::square_grid(const EntityHeatmapOptions_Resolution* msg) {
  return *msg->resolution_type_.square_grid_;
}
const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution&
EntityHeatmapOptions_Resolution::_Internal::auto_resolution(const EntityHeatmapOptions_Resolution* msg) {
  return *msg->resolution_type_.auto_resolution_;
}
void EntityHeatmapOptions_Resolution::set_allocated_as_chunks(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution* as_chunks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resolution_type();
  if (as_chunks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(as_chunks);
    if (message_arena != submessage_arena) {
      as_chunks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, as_chunks, submessage_arena);
    }
    set_has_as_chunks();
    resolution_type_.as_chunks_ = as_chunks;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.EntityHeatmapOptions.Resolution.as_chunks)
}
void EntityHeatmapOptions_Resolution::set_allocated_square_grid(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution* square_grid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resolution_type();
  if (square_grid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(square_grid);
    if (message_arena != submessage_arena) {
      square_grid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, square_grid, submessage_arena);
    }
    set_has_square_grid();
    resolution_type_.square_grid_ = square_grid;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.EntityHeatmapOptions.Resolution.square_grid)
}
void EntityHeatmapOptions_Resolution::set_allocated_auto_resolution(::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution* auto_resolution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resolution_type();
  if (auto_resolution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(auto_resolution);
    if (message_arena != submessage_arena) {
      auto_resolution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auto_resolution, submessage_arena);
    }
    set_has_auto_resolution();
    resolution_type_.auto_resolution_ = auto_resolution;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.EntityHeatmapOptions.Resolution.auto_resolution)
}
EntityHeatmapOptions_Resolution::EntityHeatmapOptions_Resolution(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
}
EntityHeatmapOptions_Resolution::EntityHeatmapOptions_Resolution(const EntityHeatmapOptions_Resolution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_resolution_type();
  switch (from.resolution_type_case()) {
    case kAsChunks: {
      _internal_mutable_as_chunks()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution::MergeFrom(from._internal_as_chunks());
      break;
    }
    case kSquareGrid: {
      _internal_mutable_square_grid()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution::MergeFrom(from._internal_square_grid());
      break;
    }
    case kAutoResolution: {
      _internal_mutable_auto_resolution()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution::MergeFrom(from._internal_auto_resolution());
      break;
    }
    case RESOLUTION_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
}

void EntityHeatmapOptions_Resolution::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto.base);
  clear_has_resolution_type();
}

EntityHeatmapOptions_Resolution::~EntityHeatmapOptions_Resolution() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityHeatmapOptions_Resolution::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_resolution_type()) {
    clear_resolution_type();
  }
}

void EntityHeatmapOptions_Resolution::ArenaDtor(void* object) {
  EntityHeatmapOptions_Resolution* _this = reinterpret_cast< EntityHeatmapOptions_Resolution* >(object);
  (void)_this;
}
void EntityHeatmapOptions_Resolution::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityHeatmapOptions_Resolution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityHeatmapOptions_Resolution& EntityHeatmapOptions_Resolution::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityHeatmapOptions_Resolution_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityHeatmapOptions_Resolution::clear_resolution_type() {
// @@protoc_insertion_point(one_of_clear_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  switch (resolution_type_case()) {
    case kAsChunks: {
      if (GetArena() == nullptr) {
        delete resolution_type_.as_chunks_;
      }
      break;
    }
    case kSquareGrid: {
      if (GetArena() == nullptr) {
        delete resolution_type_.square_grid_;
      }
      break;
    }
    case kAutoResolution: {
      if (GetArena() == nullptr) {
        delete resolution_type_.auto_resolution_;
      }
      break;
    }
    case RESOLUTION_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESOLUTION_TYPE_NOT_SET;
}


void EntityHeatmapOptions_Resolution::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_resolution_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityHeatmapOptions_Resolution::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution as_chunks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_chunks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution square_grid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_square_grid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution auto_resolution = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_auto_resolution(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityHeatmapOptions_Resolution::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution as_chunks = 1;
  if (_internal_has_as_chunks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_chunks(this), target, stream);
  }

  // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution square_grid = 2;
  if (_internal_has_square_grid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::square_grid(this), target, stream);
  }

  // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution auto_resolution = 3;
  if (_internal_has_auto_resolution()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::auto_resolution(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  return target;
}

size_t EntityHeatmapOptions_Resolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (resolution_type_case()) {
    // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.ChunkResolution as_chunks = 1;
    case kAsChunks: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resolution_type_.as_chunks_);
      break;
    }
    // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.SquareGridResolution square_grid = 2;
    case kSquareGrid: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resolution_type_.square_grid_);
      break;
    }
    // .improbable.platform.runtime.EntityHeatmapOptions.Resolution.AutoResolution auto_resolution = 3;
    case kAutoResolution: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resolution_type_.auto_resolution_);
      break;
    }
    case RESOLUTION_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityHeatmapOptions_Resolution::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityHeatmapOptions_Resolution* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityHeatmapOptions_Resolution>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
    MergeFrom(*source);
  }
}

void EntityHeatmapOptions_Resolution::MergeFrom(const EntityHeatmapOptions_Resolution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.resolution_type_case()) {
    case kAsChunks: {
      _internal_mutable_as_chunks()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution::MergeFrom(from._internal_as_chunks());
      break;
    }
    case kSquareGrid: {
      _internal_mutable_square_grid()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution::MergeFrom(from._internal_square_grid());
      break;
    }
    case kAutoResolution: {
      _internal_mutable_auto_resolution()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution::MergeFrom(from._internal_auto_resolution());
      break;
    }
    case RESOLUTION_TYPE_NOT_SET: {
      break;
    }
  }
}

void EntityHeatmapOptions_Resolution::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityHeatmapOptions_Resolution::CopyFrom(const EntityHeatmapOptions_Resolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions.Resolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityHeatmapOptions_Resolution::IsInitialized() const {
  return true;
}

void EntityHeatmapOptions_Resolution::InternalSwap(EntityHeatmapOptions_Resolution* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(resolution_type_, other->resolution_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityHeatmapOptions_Resolution::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityHeatmapOptions::_Internal {
 public:
  static const ::improbable::platform::runtime::Rectangle& viewport(const EntityHeatmapOptions* msg);
  static const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution& resolution(const EntityHeatmapOptions* msg);
};

const ::improbable::platform::runtime::Rectangle&
EntityHeatmapOptions::_Internal::viewport(const EntityHeatmapOptions* msg) {
  return *msg->viewport_;
}
const ::improbable::platform::runtime::EntityHeatmapOptions_Resolution&
EntityHeatmapOptions::_Internal::resolution(const EntityHeatmapOptions* msg) {
  return *msg->resolution_;
}
void EntityHeatmapOptions::clear_viewport() {
  if (GetArena() == nullptr && viewport_ != nullptr) {
    delete viewport_;
  }
  viewport_ = nullptr;
}
EntityHeatmapOptions::EntityHeatmapOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.EntityHeatmapOptions)
}
EntityHeatmapOptions::EntityHeatmapOptions(const EntityHeatmapOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewport()) {
    viewport_ = new ::improbable::platform::runtime::Rectangle(*from.viewport_);
  } else {
    viewport_ = nullptr;
  }
  if (from._internal_has_resolution()) {
    resolution_ = new ::improbable::platform::runtime::EntityHeatmapOptions_Resolution(*from.resolution_);
  } else {
    resolution_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.EntityHeatmapOptions)
}

void EntityHeatmapOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityHeatmapOptions_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewport_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&resolution_) -
      reinterpret_cast<char*>(&viewport_)) + sizeof(resolution_));
}

EntityHeatmapOptions::~EntityHeatmapOptions() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.EntityHeatmapOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityHeatmapOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewport_;
  if (this != internal_default_instance()) delete resolution_;
}

void EntityHeatmapOptions::ArenaDtor(void* object) {
  EntityHeatmapOptions* _this = reinterpret_cast< EntityHeatmapOptions* >(object);
  (void)_this;
}
void EntityHeatmapOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityHeatmapOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityHeatmapOptions& EntityHeatmapOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityHeatmapOptions_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void EntityHeatmapOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.EntityHeatmapOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewport_ != nullptr) {
    delete viewport_;
  }
  viewport_ = nullptr;
  if (GetArena() == nullptr && resolution_ != nullptr) {
    delete resolution_;
  }
  resolution_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityHeatmapOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.Rectangle viewport = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewport(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.EntityHeatmapOptions.Resolution resolution = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_resolution(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityHeatmapOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.EntityHeatmapOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.Rectangle viewport = 1;
  if (this->has_viewport()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewport(this), target, stream);
  }

  // .improbable.platform.runtime.EntityHeatmapOptions.Resolution resolution = 2;
  if (this->has_resolution()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::resolution(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.EntityHeatmapOptions)
  return target;
}

size_t EntityHeatmapOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.EntityHeatmapOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.Rectangle viewport = 1;
  if (this->has_viewport()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewport_);
  }

  // .improbable.platform.runtime.EntityHeatmapOptions.Resolution resolution = 2;
  if (this->has_resolution()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *resolution_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityHeatmapOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityHeatmapOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityHeatmapOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.EntityHeatmapOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.EntityHeatmapOptions)
    MergeFrom(*source);
  }
}

void EntityHeatmapOptions::MergeFrom(const EntityHeatmapOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.EntityHeatmapOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewport()) {
    _internal_mutable_viewport()->::improbable::platform::runtime::Rectangle::MergeFrom(from._internal_viewport());
  }
  if (from.has_resolution()) {
    _internal_mutable_resolution()->::improbable::platform::runtime::EntityHeatmapOptions_Resolution::MergeFrom(from._internal_resolution());
  }
}

void EntityHeatmapOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityHeatmapOptions::CopyFrom(const EntityHeatmapOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.EntityHeatmapOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityHeatmapOptions::IsInitialized() const {
  return true;
}

void EntityHeatmapOptions::InternalSwap(EntityHeatmapOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityHeatmapOptions, resolution_)
      + sizeof(EntityHeatmapOptions::resolution_)
      - PROTOBUF_FIELD_OFFSET(EntityHeatmapOptions, viewport_)>(
          reinterpret_cast<char*>(&viewport_),
          reinterpret_cast<char*>(&other->viewport_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityHeatmapOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetEntityHeatmapRequest::_Internal {
 public:
  static const ::improbable::platform::runtime::EntityHeatmapOptions& entity_heatmap_options(const GetEntityHeatmapRequest* msg);
};

const ::improbable::platform::runtime::EntityHeatmapOptions&
GetEntityHeatmapRequest::_Internal::entity_heatmap_options(const GetEntityHeatmapRequest* msg) {
  return *msg->entity_heatmap_options_;
}
GetEntityHeatmapRequest::GetEntityHeatmapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetEntityHeatmapRequest)
}
GetEntityHeatmapRequest::GetEntityHeatmapRequest(const GetEntityHeatmapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_heatmap_options()) {
    entity_heatmap_options_ = new ::improbable::platform::runtime::EntityHeatmapOptions(*from.entity_heatmap_options_);
  } else {
    entity_heatmap_options_ = nullptr;
  }
  desired_response_interval_ms_ = from.desired_response_interval_ms_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetEntityHeatmapRequest)
}

void GetEntityHeatmapRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEntityHeatmapRequest_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&entity_heatmap_options_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&desired_response_interval_ms_) -
      reinterpret_cast<char*>(&entity_heatmap_options_)) + sizeof(desired_response_interval_ms_));
}

GetEntityHeatmapRequest::~GetEntityHeatmapRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetEntityHeatmapRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityHeatmapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete entity_heatmap_options_;
}

void GetEntityHeatmapRequest::ArenaDtor(void* object) {
  GetEntityHeatmapRequest* _this = reinterpret_cast< GetEntityHeatmapRequest* >(object);
  (void)_this;
}
void GetEntityHeatmapRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityHeatmapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityHeatmapRequest& GetEntityHeatmapRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityHeatmapRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetEntityHeatmapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && entity_heatmap_options_ != nullptr) {
    delete entity_heatmap_options_;
  }
  entity_heatmap_options_ = nullptr;
  desired_response_interval_ms_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityHeatmapRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.EntityHeatmapOptions entity_heatmap_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_heatmap_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 desired_response_interval_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          desired_response_interval_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityHeatmapRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.EntityHeatmapOptions entity_heatmap_options = 1;
  if (this->has_entity_heatmap_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::entity_heatmap_options(this), target, stream);
  }

  // int64 desired_response_interval_ms = 2;
  if (this->desired_response_interval_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_desired_response_interval_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetEntityHeatmapRequest)
  return target;
}

size_t GetEntityHeatmapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.EntityHeatmapOptions entity_heatmap_options = 1;
  if (this->has_entity_heatmap_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *entity_heatmap_options_);
  }

  // int64 desired_response_interval_ms = 2;
  if (this->desired_response_interval_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_desired_response_interval_ms());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityHeatmapRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityHeatmapRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityHeatmapRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetEntityHeatmapRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetEntityHeatmapRequest)
    MergeFrom(*source);
  }
}

void GetEntityHeatmapRequest::MergeFrom(const GetEntityHeatmapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity_heatmap_options()) {
    _internal_mutable_entity_heatmap_options()->::improbable::platform::runtime::EntityHeatmapOptions::MergeFrom(from._internal_entity_heatmap_options());
  }
  if (from.desired_response_interval_ms() != 0) {
    _internal_set_desired_response_interval_ms(from._internal_desired_response_interval_ms());
  }
}

void GetEntityHeatmapRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityHeatmapRequest::CopyFrom(const GetEntityHeatmapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetEntityHeatmapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityHeatmapRequest::IsInitialized() const {
  return true;
}

void GetEntityHeatmapRequest::InternalSwap(GetEntityHeatmapRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEntityHeatmapRequest, desired_response_interval_ms_)
      + sizeof(GetEntityHeatmapRequest::desired_response_interval_ms_)
      - PROTOBUF_FIELD_OFFSET(GetEntityHeatmapRequest, entity_heatmap_options_)>(
          reinterpret_cast<char*>(&entity_heatmap_options_),
          reinterpret_cast<char*>(&other->entity_heatmap_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityHeatmapRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetEntityHeatmapResponse::_Internal {
 public:
  static const ::improbable::platform::runtime::Heatmap& heatmap(const GetEntityHeatmapResponse* msg);
};

const ::improbable::platform::runtime::Heatmap&
GetEntityHeatmapResponse::_Internal::heatmap(const GetEntityHeatmapResponse* msg) {
  return *msg->heatmap_;
}
GetEntityHeatmapResponse::GetEntityHeatmapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetEntityHeatmapResponse)
}
GetEntityHeatmapResponse::GetEntityHeatmapResponse(const GetEntityHeatmapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_heatmap()) {
    heatmap_ = new ::improbable::platform::runtime::Heatmap(*from.heatmap_);
  } else {
    heatmap_ = nullptr;
  }
  query_cost_ = from.query_cost_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetEntityHeatmapResponse)
}

void GetEntityHeatmapResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEntityHeatmapResponse_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&heatmap_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&query_cost_) -
      reinterpret_cast<char*>(&heatmap_)) + sizeof(query_cost_));
}

GetEntityHeatmapResponse::~GetEntityHeatmapResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetEntityHeatmapResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityHeatmapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete heatmap_;
}

void GetEntityHeatmapResponse::ArenaDtor(void* object) {
  GetEntityHeatmapResponse* _this = reinterpret_cast< GetEntityHeatmapResponse* >(object);
  (void)_this;
}
void GetEntityHeatmapResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityHeatmapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityHeatmapResponse& GetEntityHeatmapResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityHeatmapResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetEntityHeatmapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && heatmap_ != nullptr) {
    delete heatmap_;
  }
  heatmap_ = nullptr;
  query_cost_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityHeatmapResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.Heatmap heatmap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_heatmap(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float query_cost = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          query_cost_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityHeatmapResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.Heatmap heatmap = 1;
  if (this->has_heatmap()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::heatmap(this), target, stream);
  }

  // float query_cost = 2;
  if (!(this->query_cost() <= 0 && this->query_cost() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_query_cost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetEntityHeatmapResponse)
  return target;
}

size_t GetEntityHeatmapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.Heatmap heatmap = 1;
  if (this->has_heatmap()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *heatmap_);
  }

  // float query_cost = 2;
  if (!(this->query_cost() <= 0 && this->query_cost() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityHeatmapResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityHeatmapResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityHeatmapResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetEntityHeatmapResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetEntityHeatmapResponse)
    MergeFrom(*source);
  }
}

void GetEntityHeatmapResponse::MergeFrom(const GetEntityHeatmapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_heatmap()) {
    _internal_mutable_heatmap()->::improbable::platform::runtime::Heatmap::MergeFrom(from._internal_heatmap());
  }
  if (!(from.query_cost() <= 0 && from.query_cost() >= 0)) {
    _internal_set_query_cost(from._internal_query_cost());
  }
}

void GetEntityHeatmapResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityHeatmapResponse::CopyFrom(const GetEntityHeatmapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetEntityHeatmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityHeatmapResponse::IsInitialized() const {
  return true;
}

void GetEntityHeatmapResponse::InternalSwap(GetEntityHeatmapResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEntityHeatmapResponse, query_cost_)
      + sizeof(GetEntityHeatmapResponse::query_cost_)
      - PROTOBUF_FIELD_OFFSET(GetEntityHeatmapResponse, heatmap_)>(
          reinterpret_cast<char*>(&heatmap_),
          reinterpret_cast<char*>(&other->heatmap_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityHeatmapResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetEntityDetailsRequest::_Internal {
 public:
};

GetEntityDetailsRequest::GetEntityDetailsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetEntityDetailsRequest)
}
GetEntityDetailsRequest::GetEntityDetailsRequest(const GetEntityDetailsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetEntityDetailsRequest)
}

void GetEntityDetailsRequest::SharedCtor() {
  entity_id_ = PROTOBUF_LONGLONG(0);
}

GetEntityDetailsRequest::~GetEntityDetailsRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetEntityDetailsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityDetailsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetEntityDetailsRequest::ArenaDtor(void* object) {
  GetEntityDetailsRequest* _this = reinterpret_cast< GetEntityDetailsRequest* >(object);
  (void)_this;
}
void GetEntityDetailsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityDetailsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityDetailsRequest& GetEntityDetailsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityDetailsRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetEntityDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetEntityDetailsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityDetailsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityDetailsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetEntityDetailsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetEntityDetailsRequest)
  return target;
}

size_t GetEntityDetailsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetEntityDetailsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityDetailsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetEntityDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityDetailsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityDetailsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetEntityDetailsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetEntityDetailsRequest)
    MergeFrom(*source);
  }
}

void GetEntityDetailsRequest::MergeFrom(const GetEntityDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetEntityDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
}

void GetEntityDetailsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetEntityDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityDetailsRequest::CopyFrom(const GetEntityDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetEntityDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityDetailsRequest::IsInitialized() const {
  return true;
}

void GetEntityDetailsRequest::InternalSwap(GetEntityDetailsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entity_id_, other->entity_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityDetailsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetEntityDetailsResponse::_Internal {
 public:
  static const ::improbable::platform::runtime::EntityData& entity_data(const GetEntityDetailsResponse* msg);
};

const ::improbable::platform::runtime::EntityData&
GetEntityDetailsResponse::_Internal::entity_data(const GetEntityDetailsResponse* msg) {
  return *msg->entity_data_;
}
GetEntityDetailsResponse::GetEntityDetailsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetEntityDetailsResponse)
}
GetEntityDetailsResponse::GetEntityDetailsResponse(const GetEntityDetailsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_data()) {
    entity_data_ = new ::improbable::platform::runtime::EntityData(*from.entity_data_);
  } else {
    entity_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetEntityDetailsResponse)
}

void GetEntityDetailsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEntityDetailsResponse_runtime_2finspection_2eproto.base);
  entity_data_ = nullptr;
}

GetEntityDetailsResponse::~GetEntityDetailsResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetEntityDetailsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityDetailsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete entity_data_;
}

void GetEntityDetailsResponse::ArenaDtor(void* object) {
  GetEntityDetailsResponse* _this = reinterpret_cast< GetEntityDetailsResponse* >(object);
  (void)_this;
}
void GetEntityDetailsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityDetailsResponse& GetEntityDetailsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityDetailsResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetEntityDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetEntityDetailsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && entity_data_ != nullptr) {
    delete entity_data_;
  }
  entity_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityDetailsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.EntityData entity_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityDetailsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetEntityDetailsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.EntityData entity_data = 1;
  if (this->has_entity_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::entity_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetEntityDetailsResponse)
  return target;
}

size_t GetEntityDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetEntityDetailsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.EntityData entity_data = 1;
  if (this->has_entity_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *entity_data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityDetailsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetEntityDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityDetailsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityDetailsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetEntityDetailsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetEntityDetailsResponse)
    MergeFrom(*source);
  }
}

void GetEntityDetailsResponse::MergeFrom(const GetEntityDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetEntityDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity_data()) {
    _internal_mutable_entity_data()->::improbable::platform::runtime::EntityData::MergeFrom(from._internal_entity_data());
  }
}

void GetEntityDetailsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetEntityDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityDetailsResponse::CopyFrom(const GetEntityDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetEntityDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityDetailsResponse::IsInitialized() const {
  return true;
}

void GetEntityDetailsResponse::InternalSwap(GetEntityDetailsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entity_data_, other->entity_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityDetailsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetAllWorkersRequest::_Internal {
 public:
};

GetAllWorkersRequest::GetAllWorkersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetAllWorkersRequest)
}
GetAllWorkersRequest::GetAllWorkersRequest(const GetAllWorkersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetAllWorkersRequest)
}

void GetAllWorkersRequest::SharedCtor() {
}

GetAllWorkersRequest::~GetAllWorkersRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetAllWorkersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllWorkersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllWorkersRequest::ArenaDtor(void* object) {
  GetAllWorkersRequest* _this = reinterpret_cast< GetAllWorkersRequest* >(object);
  (void)_this;
}
void GetAllWorkersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllWorkersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllWorkersRequest& GetAllWorkersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllWorkersRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetAllWorkersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetAllWorkersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllWorkersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllWorkersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetAllWorkersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetAllWorkersRequest)
  return target;
}

size_t GetAllWorkersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetAllWorkersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllWorkersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetAllWorkersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllWorkersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllWorkersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetAllWorkersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetAllWorkersRequest)
    MergeFrom(*source);
  }
}

void GetAllWorkersRequest::MergeFrom(const GetAllWorkersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetAllWorkersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllWorkersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetAllWorkersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllWorkersRequest::CopyFrom(const GetAllWorkersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetAllWorkersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllWorkersRequest::IsInitialized() const {
  return true;
}

void GetAllWorkersRequest::InternalSwap(GetAllWorkersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllWorkersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetAllWorkersResponse::_Internal {
 public:
};

GetAllWorkersResponse::GetAllWorkersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  worker_summaries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetAllWorkersResponse)
}
GetAllWorkersResponse::GetAllWorkersResponse(const GetAllWorkersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      worker_summaries_(from.worker_summaries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetAllWorkersResponse)
}

void GetAllWorkersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllWorkersResponse_runtime_2finspection_2eproto.base);
}

GetAllWorkersResponse::~GetAllWorkersResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetAllWorkersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllWorkersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllWorkersResponse::ArenaDtor(void* object) {
  GetAllWorkersResponse* _this = reinterpret_cast< GetAllWorkersResponse* >(object);
  (void)_this;
}
void GetAllWorkersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllWorkersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllWorkersResponse& GetAllWorkersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllWorkersResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetAllWorkersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetAllWorkersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_summaries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllWorkersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.WorkerSummary worker_summaries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_worker_summaries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllWorkersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetAllWorkersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.WorkerSummary worker_summaries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_worker_summaries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_worker_summaries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetAllWorkersResponse)
  return target;
}

size_t GetAllWorkersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetAllWorkersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.WorkerSummary worker_summaries = 1;
  total_size += 1UL * this->_internal_worker_summaries_size();
  for (const auto& msg : this->worker_summaries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllWorkersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetAllWorkersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllWorkersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllWorkersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetAllWorkersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetAllWorkersResponse)
    MergeFrom(*source);
  }
}

void GetAllWorkersResponse::MergeFrom(const GetAllWorkersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetAllWorkersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  worker_summaries_.MergeFrom(from.worker_summaries_);
}

void GetAllWorkersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetAllWorkersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllWorkersResponse::CopyFrom(const GetAllWorkersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetAllWorkersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllWorkersResponse::IsInitialized() const {
  return true;
}

void GetAllWorkersResponse::InternalSwap(GetAllWorkersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worker_summaries_.InternalSwap(&other->worker_summaries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllWorkersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WorkerSummary::_Internal {
 public:
  static const ::improbable::platform::runtime::Point& position(const WorkerSummary* msg);
  static const ::improbable::platform::runtime::WorkerLoadbalancingStatus& loadbalancing_status(const WorkerSummary* msg);
};

const ::improbable::platform::runtime::Point&
WorkerSummary::_Internal::position(const WorkerSummary* msg) {
  return *msg->position_;
}
const ::improbable::platform::runtime::WorkerLoadbalancingStatus&
WorkerSummary::_Internal::loadbalancing_status(const WorkerSummary* msg) {
  return *msg->loadbalancing_status_;
}
void WorkerSummary::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
WorkerSummary::WorkerSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.WorkerSummary)
}
WorkerSummary::WorkerSummary(const WorkerSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_id().empty()) {
    worker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_id(), 
      GetArena());
  }
  worker_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_name().empty()) {
    worker_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_name(), 
      GetArena());
  }
  if (from._internal_has_position()) {
    position_ = new ::improbable::platform::runtime::Point(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_loadbalancing_status()) {
    loadbalancing_status_ = new ::improbable::platform::runtime::WorkerLoadbalancingStatus(*from.loadbalancing_status_);
  } else {
    loadbalancing_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.WorkerSummary)
}

void WorkerSummary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerSummary_runtime_2finspection_2eproto.base);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  worker_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&position_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&loadbalancing_status_) -
      reinterpret_cast<char*>(&position_)) + sizeof(loadbalancing_status_));
}

WorkerSummary::~WorkerSummary() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.WorkerSummary)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  worker_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete loadbalancing_status_;
}

void WorkerSummary::ArenaDtor(void* object) {
  WorkerSummary* _this = reinterpret_cast< WorkerSummary* >(object);
  (void)_this;
}
void WorkerSummary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerSummary& WorkerSummary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerSummary_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void WorkerSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.WorkerSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_id_.ClearToEmpty();
  worker_name_.ClearToEmpty();
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArena() == nullptr && loadbalancing_status_ != nullptr) {
    delete loadbalancing_status_;
  }
  loadbalancing_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerSummary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string worker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.WorkerSummary.worker_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.Point position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.WorkerLoadbalancingStatus loadbalancing_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_loadbalancing_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string worker_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_worker_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.WorkerSummary.worker_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerSummary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.WorkerSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_id().data(), static_cast<int>(this->_internal_worker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.WorkerSummary.worker_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_worker_id(), target);
  }

  // .improbable.platform.runtime.Point position = 2;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::position(this), target, stream);
  }

  // .improbable.platform.runtime.WorkerLoadbalancingStatus loadbalancing_status = 3;
  if (this->has_loadbalancing_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::loadbalancing_status(this), target, stream);
  }

  // string worker_name = 4;
  if (this->worker_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_name().data(), static_cast<int>(this->_internal_worker_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.WorkerSummary.worker_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_worker_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.WorkerSummary)
  return target;
}

size_t WorkerSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.WorkerSummary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_id());
  }

  // string worker_name = 4;
  if (this->worker_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_name());
  }

  // .improbable.platform.runtime.Point position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .improbable.platform.runtime.WorkerLoadbalancingStatus loadbalancing_status = 3;
  if (this->has_loadbalancing_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *loadbalancing_status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerSummary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.WorkerSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerSummary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.WorkerSummary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.WorkerSummary)
    MergeFrom(*source);
  }
}

void WorkerSummary::MergeFrom(const WorkerSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.WorkerSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worker_id().size() > 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.worker_name().size() > 0) {
    _internal_set_worker_name(from._internal_worker_name());
  }
  if (from.has_position()) {
    _internal_mutable_position()->::improbable::platform::runtime::Point::MergeFrom(from._internal_position());
  }
  if (from.has_loadbalancing_status()) {
    _internal_mutable_loadbalancing_status()->::improbable::platform::runtime::WorkerLoadbalancingStatus::MergeFrom(from._internal_loadbalancing_status());
  }
}

void WorkerSummary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.WorkerSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerSummary::CopyFrom(const WorkerSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.WorkerSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerSummary::IsInitialized() const {
  return true;
}

void WorkerSummary::InternalSwap(WorkerSummary* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worker_id_.Swap(&other->worker_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  worker_name_.Swap(&other->worker_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkerSummary, loadbalancing_status_)
      + sizeof(WorkerSummary::loadbalancing_status_)
      - PROTOBUF_FIELD_OFFSET(WorkerSummary, position_)>(
          reinterpret_cast<char*>(&position_),
          reinterpret_cast<char*>(&other->position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerSummary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WorkerLoadbalancingStatus::_Internal {
 public:
};

WorkerLoadbalancingStatus::WorkerLoadbalancingStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.WorkerLoadbalancingStatus)
}
WorkerLoadbalancingStatus::WorkerLoadbalancingStatus(const WorkerLoadbalancingStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&load_value_, &from.load_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&load_category_) -
    reinterpret_cast<char*>(&load_value_)) + sizeof(load_category_));
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.WorkerLoadbalancingStatus)
}

void WorkerLoadbalancingStatus::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&load_value_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&load_category_) -
      reinterpret_cast<char*>(&load_value_)) + sizeof(load_category_));
}

WorkerLoadbalancingStatus::~WorkerLoadbalancingStatus() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.WorkerLoadbalancingStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerLoadbalancingStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WorkerLoadbalancingStatus::ArenaDtor(void* object) {
  WorkerLoadbalancingStatus* _this = reinterpret_cast< WorkerLoadbalancingStatus* >(object);
  (void)_this;
}
void WorkerLoadbalancingStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerLoadbalancingStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerLoadbalancingStatus& WorkerLoadbalancingStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerLoadbalancingStatus_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void WorkerLoadbalancingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&load_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_category_) -
      reinterpret_cast<char*>(&load_value_)) + sizeof(load_category_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerLoadbalancingStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.WorkerLoadbalancingStatus.LoadCategory load_category = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_load_category(static_cast<::improbable::platform::runtime::WorkerLoadbalancingStatus_LoadCategory>(val));
        } else goto handle_unusual;
        continue;
      // double load_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          load_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerLoadbalancingStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.WorkerLoadbalancingStatus.LoadCategory load_category = 1;
  if (this->load_category() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_load_category(), target);
  }

  // double load_value = 2;
  if (!(this->load_value() <= 0 && this->load_value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_load_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.WorkerLoadbalancingStatus)
  return target;
}

size_t WorkerLoadbalancingStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double load_value = 2;
  if (!(this->load_value() <= 0 && this->load_value() >= 0)) {
    total_size += 1 + 8;
  }

  // .improbable.platform.runtime.WorkerLoadbalancingStatus.LoadCategory load_category = 1;
  if (this->load_category() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_load_category());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerLoadbalancingStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerLoadbalancingStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerLoadbalancingStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.WorkerLoadbalancingStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.WorkerLoadbalancingStatus)
    MergeFrom(*source);
  }
}

void WorkerLoadbalancingStatus::MergeFrom(const WorkerLoadbalancingStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.load_value() <= 0 && from.load_value() >= 0)) {
    _internal_set_load_value(from._internal_load_value());
  }
  if (from.load_category() != 0) {
    _internal_set_load_category(from._internal_load_category());
  }
}

void WorkerLoadbalancingStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerLoadbalancingStatus::CopyFrom(const WorkerLoadbalancingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.WorkerLoadbalancingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerLoadbalancingStatus::IsInitialized() const {
  return true;
}

void WorkerLoadbalancingStatus::InternalSwap(WorkerLoadbalancingStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkerLoadbalancingStatus, load_category_)
      + sizeof(WorkerLoadbalancingStatus::load_category_)
      - PROTOBUF_FIELD_OFFSET(WorkerLoadbalancingStatus, load_value_)>(
          reinterpret_cast<char*>(&load_value_),
          reinterpret_cast<char*>(&other->load_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerLoadbalancingStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorkerDetailsRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::FieldMask& field_mask(const GetWorkerDetailsRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::FieldMask&
GetWorkerDetailsRequest::_Internal::field_mask(const GetWorkerDetailsRequest* msg) {
  return *msg->field_mask_;
}
void GetWorkerDetailsRequest::clear_field_mask() {
  if (GetArena() == nullptr && field_mask_ != nullptr) {
    delete field_mask_;
  }
  field_mask_ = nullptr;
}
GetWorkerDetailsRequest::GetWorkerDetailsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorkerDetailsRequest)
}
GetWorkerDetailsRequest::GetWorkerDetailsRequest(const GetWorkerDetailsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_id().empty()) {
    worker_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_id(), 
      GetArena());
  }
  if (from._internal_has_field_mask()) {
    field_mask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.field_mask_);
  } else {
    field_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorkerDetailsRequest)
}

void GetWorkerDetailsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorkerDetailsRequest_runtime_2finspection_2eproto.base);
  worker_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  field_mask_ = nullptr;
}

GetWorkerDetailsRequest::~GetWorkerDetailsRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorkerDetailsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkerDetailsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worker_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete field_mask_;
}

void GetWorkerDetailsRequest::ArenaDtor(void* object) {
  GetWorkerDetailsRequest* _this = reinterpret_cast< GetWorkerDetailsRequest* >(object);
  (void)_this;
}
void GetWorkerDetailsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkerDetailsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkerDetailsRequest& GetWorkerDetailsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkerDetailsRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorkerDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_id_.ClearToEmpty();
  if (GetArena() == nullptr && field_mask_ != nullptr) {
    delete field_mask_;
  }
  field_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkerDetailsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string worker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worker_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.GetWorkerDetailsRequest.worker_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask field_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_field_mask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkerDetailsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_id().data(), static_cast<int>(this->_internal_worker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.GetWorkerDetailsRequest.worker_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_worker_id(), target);
  }

  // .google.protobuf.FieldMask field_mask = 2;
  if (this->has_field_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::field_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorkerDetailsRequest)
  return target;
}

size_t GetWorkerDetailsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_id());
  }

  // .google.protobuf.FieldMask field_mask = 2;
  if (this->has_field_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *field_mask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkerDetailsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkerDetailsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkerDetailsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorkerDetailsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorkerDetailsRequest)
    MergeFrom(*source);
  }
}

void GetWorkerDetailsRequest::MergeFrom(const GetWorkerDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worker_id().size() > 0) {
    _internal_set_worker_id(from._internal_worker_id());
  }
  if (from.has_field_mask()) {
    _internal_mutable_field_mask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_field_mask());
  }
}

void GetWorkerDetailsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkerDetailsRequest::CopyFrom(const GetWorkerDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorkerDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkerDetailsRequest::IsInitialized() const {
  return true;
}

void GetWorkerDetailsRequest::InternalSwap(GetWorkerDetailsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worker_id_.Swap(&other->worker_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(field_mask_, other->field_mask_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkerDetailsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorkerDetailsResponse::_Internal {
 public:
  static const ::improbable::platform::runtime::WorkerSummary& summary(const GetWorkerDetailsResponse* msg);
  static const ::improbable::platform::runtime::WorkerDetails& details(const GetWorkerDetailsResponse* msg);
};

const ::improbable::platform::runtime::WorkerSummary&
GetWorkerDetailsResponse::_Internal::summary(const GetWorkerDetailsResponse* msg) {
  return *msg->summary_;
}
const ::improbable::platform::runtime::WorkerDetails&
GetWorkerDetailsResponse::_Internal::details(const GetWorkerDetailsResponse* msg) {
  return *msg->details_;
}
GetWorkerDetailsResponse::GetWorkerDetailsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorkerDetailsResponse)
}
GetWorkerDetailsResponse::GetWorkerDetailsResponse(const GetWorkerDetailsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_summary()) {
    summary_ = new ::improbable::platform::runtime::WorkerSummary(*from.summary_);
  } else {
    summary_ = nullptr;
  }
  if (from._internal_has_details()) {
    details_ = new ::improbable::platform::runtime::WorkerDetails(*from.details_);
  } else {
    details_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorkerDetailsResponse)
}

void GetWorkerDetailsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorkerDetailsResponse_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&summary_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&details_) -
      reinterpret_cast<char*>(&summary_)) + sizeof(details_));
}

GetWorkerDetailsResponse::~GetWorkerDetailsResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorkerDetailsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkerDetailsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete summary_;
  if (this != internal_default_instance()) delete details_;
}

void GetWorkerDetailsResponse::ArenaDtor(void* object) {
  GetWorkerDetailsResponse* _this = reinterpret_cast< GetWorkerDetailsResponse* >(object);
  (void)_this;
}
void GetWorkerDetailsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkerDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkerDetailsResponse& GetWorkerDetailsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkerDetailsResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorkerDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && summary_ != nullptr) {
    delete summary_;
  }
  summary_ = nullptr;
  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkerDetailsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.WorkerSummary summary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.WorkerDetails details = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkerDetailsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.WorkerSummary summary = 1;
  if (this->has_summary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::summary(this), target, stream);
  }

  // .improbable.platform.runtime.WorkerDetails details = 2;
  if (this->has_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorkerDetailsResponse)
  return target;
}

size_t GetWorkerDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.WorkerSummary summary = 1;
  if (this->has_summary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *summary_);
  }

  // .improbable.platform.runtime.WorkerDetails details = 2;
  if (this->has_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *details_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkerDetailsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkerDetailsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkerDetailsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorkerDetailsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorkerDetailsResponse)
    MergeFrom(*source);
  }
}

void GetWorkerDetailsResponse::MergeFrom(const GetWorkerDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_summary()) {
    _internal_mutable_summary()->::improbable::platform::runtime::WorkerSummary::MergeFrom(from._internal_summary());
  }
  if (from.has_details()) {
    _internal_mutable_details()->::improbable::platform::runtime::WorkerDetails::MergeFrom(from._internal_details());
  }
}

void GetWorkerDetailsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkerDetailsResponse::CopyFrom(const GetWorkerDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorkerDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkerDetailsResponse::IsInitialized() const {
  return true;
}

void GetWorkerDetailsResponse::InternalSwap(GetWorkerDetailsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetWorkerDetailsResponse, details_)
      + sizeof(GetWorkerDetailsResponse::details_)
      - PROTOBUF_FIELD_OFFSET(GetWorkerDetailsResponse, summary_)>(
          reinterpret_cast<char*>(&summary_),
          reinterpret_cast<char*>(&other->summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkerDetailsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorkerInterestRequest::_Internal {
 public:
};

GetWorkerInterestRequest::GetWorkerInterestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorkerInterestRequest)
}
GetWorkerInterestRequest::GetWorkerInterestRequest(const GetWorkerInterestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorkerInterestRequest)
}

void GetWorkerInterestRequest::SharedCtor() {
}

GetWorkerInterestRequest::~GetWorkerInterestRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorkerInterestRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkerInterestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetWorkerInterestRequest::ArenaDtor(void* object) {
  GetWorkerInterestRequest* _this = reinterpret_cast< GetWorkerInterestRequest* >(object);
  (void)_this;
}
void GetWorkerInterestRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkerInterestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkerInterestRequest& GetWorkerInterestRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkerInterestRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorkerInterestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorkerInterestRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkerInterestRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkerInterestRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorkerInterestRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorkerInterestRequest)
  return target;
}

size_t GetWorkerInterestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorkerInterestRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkerInterestRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorkerInterestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkerInterestRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkerInterestRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorkerInterestRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorkerInterestRequest)
    MergeFrom(*source);
  }
}

void GetWorkerInterestRequest::MergeFrom(const GetWorkerInterestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorkerInterestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetWorkerInterestRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorkerInterestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkerInterestRequest::CopyFrom(const GetWorkerInterestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorkerInterestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkerInterestRequest::IsInitialized() const {
  return true;
}

void GetWorkerInterestRequest::InternalSwap(GetWorkerInterestRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkerInterestRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse() {}
GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::MergeFrom(const GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class GetWorkerInterestResponse_WorkerInterestConfiguration::_Internal {
 public:
};

GetWorkerInterestResponse_WorkerInterestConfiguration::GetWorkerInterestResponse_WorkerInterestConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  streaming_query_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
}
GetWorkerInterestResponse_WorkerInterestConfiguration::GetWorkerInterestResponse_WorkerInterestConfiguration(const GetWorkerInterestResponse_WorkerInterestConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      streaming_query_(from.streaming_query_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worker_type().empty()) {
    worker_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worker_type(), 
      GetArena());
  }
  entity_interest_radius_ = from.entity_interest_radius_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto.base);
  worker_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  entity_interest_radius_ = 0;
}

GetWorkerInterestResponse_WorkerInterestConfiguration::~GetWorkerInterestResponse_WorkerInterestConfiguration() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worker_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::ArenaDtor(void* object) {
  GetWorkerInterestResponse_WorkerInterestConfiguration* _this = reinterpret_cast< GetWorkerInterestResponse_WorkerInterestConfiguration* >(object);
  (void)_this;
}
void GetWorkerInterestResponse_WorkerInterestConfiguration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkerInterestResponse_WorkerInterestConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkerInterestResponse_WorkerInterestConfiguration& GetWorkerInterestResponse_WorkerInterestConfiguration::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkerInterestResponse_WorkerInterestConfiguration_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorkerInterestResponse_WorkerInterestConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  streaming_query_.Clear();
  worker_type_.ClearToEmpty();
  entity_interest_radius_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkerInterestResponse_WorkerInterestConfiguration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string worker_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worker_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration.worker_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double entity_interest_radius = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          entity_interest_radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated .improbable.platform.runtime.InspectorStreamingQuery streaming_query = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_streaming_query(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkerInterestResponse_WorkerInterestConfiguration::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_type = 1;
  if (this->worker_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_worker_type().data(), static_cast<int>(this->_internal_worker_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration.worker_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_worker_type(), target);
  }

  // double entity_interest_radius = 2;
  if (!(this->entity_interest_radius() <= 0 && this->entity_interest_radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_entity_interest_radius(), target);
  }

  // repeated .improbable.platform.runtime.InspectorStreamingQuery streaming_query = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_streaming_query_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_streaming_query(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  return target;
}

size_t GetWorkerInterestResponse_WorkerInterestConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.InspectorStreamingQuery streaming_query = 3;
  total_size += 1UL * this->_internal_streaming_query_size();
  for (const auto& msg : this->streaming_query_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string worker_type = 1;
  if (this->worker_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_worker_type());
  }

  // double entity_interest_radius = 2;
  if (!(this->entity_interest_radius() <= 0 && this->entity_interest_radius() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkerInterestResponse_WorkerInterestConfiguration* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkerInterestResponse_WorkerInterestConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
    MergeFrom(*source);
  }
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::MergeFrom(const GetWorkerInterestResponse_WorkerInterestConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  streaming_query_.MergeFrom(from.streaming_query_);
  if (from.worker_type().size() > 0) {
    _internal_set_worker_type(from._internal_worker_type());
  }
  if (!(from.entity_interest_radius() <= 0 && from.entity_interest_radius() >= 0)) {
    _internal_set_entity_interest_radius(from._internal_entity_interest_radius());
  }
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::CopyFrom(const GetWorkerInterestResponse_WorkerInterestConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkerInterestResponse_WorkerInterestConfiguration::IsInitialized() const {
  return true;
}

void GetWorkerInterestResponse_WorkerInterestConfiguration::InternalSwap(GetWorkerInterestResponse_WorkerInterestConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  streaming_query_.InternalSwap(&other->streaming_query_);
  worker_type_.Swap(&other->worker_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(entity_interest_radius_, other->entity_interest_radius_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkerInterestResponse_WorkerInterestConfiguration::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorkerInterestResponse::_Internal {
 public:
};

GetWorkerInterestResponse::GetWorkerInterestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  worker_type_interest_config_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorkerInterestResponse)
}
GetWorkerInterestResponse::GetWorkerInterestResponse(const GetWorkerInterestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_type_interest_config_.MergeFrom(from.worker_type_interest_config_);
  ::memcpy(&enable_chunk_based_interest_, &from.enable_chunk_based_interest_,
    static_cast<size_t>(reinterpret_cast<char*>(&chunk_size_) -
    reinterpret_cast<char*>(&enable_chunk_based_interest_)) + sizeof(chunk_size_));
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorkerInterestResponse)
}

void GetWorkerInterestResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorkerInterestResponse_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&enable_chunk_based_interest_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&chunk_size_) -
      reinterpret_cast<char*>(&enable_chunk_based_interest_)) + sizeof(chunk_size_));
}

GetWorkerInterestResponse::~GetWorkerInterestResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorkerInterestResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkerInterestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetWorkerInterestResponse::ArenaDtor(void* object) {
  GetWorkerInterestResponse* _this = reinterpret_cast< GetWorkerInterestResponse* >(object);
  (void)_this;
}
void GetWorkerInterestResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkerInterestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkerInterestResponse& GetWorkerInterestResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkerInterestResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorkerInterestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorkerInterestResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_type_interest_config_.Clear();
  ::memset(&enable_chunk_based_interest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chunk_size_) -
      reinterpret_cast<char*>(&enable_chunk_based_interest_)) + sizeof(chunk_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkerInterestResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool enable_chunk_based_interest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          enable_chunk_based_interest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool enable_streaming_queries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          enable_streaming_queries_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 chunk_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          chunk_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration> worker_type_interest_config = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&worker_type_interest_config_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkerInterestResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorkerInterestResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_chunk_based_interest = 1;
  if (this->enable_chunk_based_interest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_enable_chunk_based_interest(), target);
  }

  // bool enable_streaming_queries = 2;
  if (this->enable_streaming_queries() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_enable_streaming_queries(), target);
  }

  // int32 chunk_size = 3;
  if (this->chunk_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_chunk_size(), target);
  }

  // map<string, .improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration> worker_type_interest_config = 4;
  if (!this->_internal_worker_type_interest_config().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.GetWorkerInterestResponse.WorkerTypeInterestConfigEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_worker_type_interest_config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_worker_type_interest_config().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >::const_iterator
          it = this->_internal_worker_type_interest_config().begin();
          it != this->_internal_worker_type_interest_config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >::const_iterator
          it = this->_internal_worker_type_interest_config().begin();
          it != this->_internal_worker_type_interest_config().end(); ++it) {
        target = GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorkerInterestResponse)
  return target;
}

size_t GetWorkerInterestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorkerInterestResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .improbable.platform.runtime.GetWorkerInterestResponse.WorkerInterestConfiguration> worker_type_interest_config = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_worker_type_interest_config_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >::const_iterator
      it = this->_internal_worker_type_interest_config().begin();
      it != this->_internal_worker_type_interest_config().end(); ++it) {
    total_size += GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bool enable_chunk_based_interest = 1;
  if (this->enable_chunk_based_interest() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_streaming_queries = 2;
  if (this->enable_streaming_queries() != 0) {
    total_size += 1 + 1;
  }

  // int32 chunk_size = 3;
  if (this->chunk_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chunk_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkerInterestResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorkerInterestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkerInterestResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkerInterestResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorkerInterestResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorkerInterestResponse)
    MergeFrom(*source);
  }
}

void GetWorkerInterestResponse::MergeFrom(const GetWorkerInterestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorkerInterestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  worker_type_interest_config_.MergeFrom(from.worker_type_interest_config_);
  if (from.enable_chunk_based_interest() != 0) {
    _internal_set_enable_chunk_based_interest(from._internal_enable_chunk_based_interest());
  }
  if (from.enable_streaming_queries() != 0) {
    _internal_set_enable_streaming_queries(from._internal_enable_streaming_queries());
  }
  if (from.chunk_size() != 0) {
    _internal_set_chunk_size(from._internal_chunk_size());
  }
}

void GetWorkerInterestResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorkerInterestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkerInterestResponse::CopyFrom(const GetWorkerInterestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorkerInterestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkerInterestResponse::IsInitialized() const {
  return true;
}

void GetWorkerInterestResponse::InternalSwap(GetWorkerInterestResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worker_type_interest_config_.Swap(&other->worker_type_interest_config_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetWorkerInterestResponse, chunk_size_)
      + sizeof(GetWorkerInterestResponse::chunk_size_)
      - PROTOBUF_FIELD_OFFSET(GetWorkerInterestResponse, enable_chunk_based_interest_)>(
          reinterpret_cast<char*>(&enable_chunk_based_interest_),
          reinterpret_cast<char*>(&other->enable_chunk_based_interest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkerInterestResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InspectorStreamingQuery::_Internal {
 public:
};

InspectorStreamingQuery::InspectorStreamingQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectorStreamingQuery)
}
InspectorStreamingQuery::InspectorStreamingQuery(const InspectorStreamingQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_component_name(), 
      GetArena());
  }
  radius_ = from.radius_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectorStreamingQuery)
}

void InspectorStreamingQuery::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InspectorStreamingQuery_runtime_2finspection_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  radius_ = 0;
}

InspectorStreamingQuery::~InspectorStreamingQuery() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectorStreamingQuery)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectorStreamingQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InspectorStreamingQuery::ArenaDtor(void* object) {
  InspectorStreamingQuery* _this = reinterpret_cast< InspectorStreamingQuery* >(object);
  (void)_this;
}
void InspectorStreamingQuery::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectorStreamingQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectorStreamingQuery& InspectorStreamingQuery::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectorStreamingQuery_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectorStreamingQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectorStreamingQuery)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty();
  radius_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectorStreamingQuery::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.InspectorStreamingQuery.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double radius = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectorStreamingQuery::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectorStreamingQuery)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1;
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.InspectorStreamingQuery.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // double radius = 2;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectorStreamingQuery)
  return target;
}

size_t InspectorStreamingQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectorStreamingQuery)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1;
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // double radius = 2;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectorStreamingQuery::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectorStreamingQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectorStreamingQuery* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectorStreamingQuery>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectorStreamingQuery)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectorStreamingQuery)
    MergeFrom(*source);
  }
}

void InspectorStreamingQuery::MergeFrom(const InspectorStreamingQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectorStreamingQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
}

void InspectorStreamingQuery::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectorStreamingQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectorStreamingQuery::CopyFrom(const InspectorStreamingQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectorStreamingQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectorStreamingQuery::IsInitialized() const {
  return true;
}

void InspectorStreamingQuery::InternalSwap(InspectorStreamingQuery* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(radius_, other->radius_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectorStreamingQuery::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoadBalancingGridFormat::_Internal {
 public:
};

LoadBalancingGridFormat::LoadBalancingGridFormat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.LoadBalancingGridFormat)
}
LoadBalancingGridFormat::LoadBalancingGridFormat(const LoadBalancingGridFormat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cell_edge_length_ = from.cell_edge_length_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.LoadBalancingGridFormat)
}

void LoadBalancingGridFormat::SharedCtor() {
  cell_edge_length_ = 0;
}

LoadBalancingGridFormat::~LoadBalancingGridFormat() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.LoadBalancingGridFormat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadBalancingGridFormat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadBalancingGridFormat::ArenaDtor(void* object) {
  LoadBalancingGridFormat* _this = reinterpret_cast< LoadBalancingGridFormat* >(object);
  (void)_this;
}
void LoadBalancingGridFormat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadBalancingGridFormat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadBalancingGridFormat& LoadBalancingGridFormat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadBalancingGridFormat_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void LoadBalancingGridFormat::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.LoadBalancingGridFormat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cell_edge_length_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadBalancingGridFormat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cell_edge_length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cell_edge_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadBalancingGridFormat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.LoadBalancingGridFormat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cell_edge_length = 1;
  if (this->cell_edge_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cell_edge_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.LoadBalancingGridFormat)
  return target;
}

size_t LoadBalancingGridFormat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.LoadBalancingGridFormat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cell_edge_length = 1;
  if (this->cell_edge_length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cell_edge_length());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadBalancingGridFormat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.LoadBalancingGridFormat)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadBalancingGridFormat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadBalancingGridFormat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.LoadBalancingGridFormat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.LoadBalancingGridFormat)
    MergeFrom(*source);
  }
}

void LoadBalancingGridFormat::MergeFrom(const LoadBalancingGridFormat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.LoadBalancingGridFormat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cell_edge_length() != 0) {
    _internal_set_cell_edge_length(from._internal_cell_edge_length());
  }
}

void LoadBalancingGridFormat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.LoadBalancingGridFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadBalancingGridFormat::CopyFrom(const LoadBalancingGridFormat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.LoadBalancingGridFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadBalancingGridFormat::IsInitialized() const {
  return true;
}

void LoadBalancingGridFormat::InternalSwap(LoadBalancingGridFormat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(cell_edge_length_, other->cell_edge_length_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadBalancingGridFormat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLoadBalancingStrategyRequest::_Internal {
 public:
  static const ::improbable::platform::runtime::LoadBalancingGridFormat& grid_format(const GetLoadBalancingStrategyRequest* msg);
};

const ::improbable::platform::runtime::LoadBalancingGridFormat&
GetLoadBalancingStrategyRequest::_Internal::grid_format(const GetLoadBalancingStrategyRequest* msg) {
  return *msg->format_.grid_format_;
}
void GetLoadBalancingStrategyRequest::set_allocated_grid_format(::improbable::platform::runtime::LoadBalancingGridFormat* grid_format) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_format();
  if (grid_format) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(grid_format);
    if (message_arena != submessage_arena) {
      grid_format = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grid_format, submessage_arena);
    }
    set_has_grid_format();
    format_.grid_format_ = grid_format;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.GetLoadBalancingStrategyRequest.grid_format)
}
GetLoadBalancingStrategyRequest::GetLoadBalancingStrategyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
}
GetLoadBalancingStrategyRequest::GetLoadBalancingStrategyRequest(const GetLoadBalancingStrategyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_format();
  switch (from.format_case()) {
    case kGridFormat: {
      _internal_mutable_grid_format()->::improbable::platform::runtime::LoadBalancingGridFormat::MergeFrom(from._internal_grid_format());
      break;
    }
    case FORMAT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
}

void GetLoadBalancingStrategyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLoadBalancingStrategyRequest_runtime_2finspection_2eproto.base);
  clear_has_format();
}

GetLoadBalancingStrategyRequest::~GetLoadBalancingStrategyRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLoadBalancingStrategyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_format()) {
    clear_format();
  }
}

void GetLoadBalancingStrategyRequest::ArenaDtor(void* object) {
  GetLoadBalancingStrategyRequest* _this = reinterpret_cast< GetLoadBalancingStrategyRequest* >(object);
  (void)_this;
}
void GetLoadBalancingStrategyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLoadBalancingStrategyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLoadBalancingStrategyRequest& GetLoadBalancingStrategyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLoadBalancingStrategyRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetLoadBalancingStrategyRequest::clear_format() {
// @@protoc_insertion_point(one_of_clear_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  switch (format_case()) {
    case kGridFormat: {
      if (GetArena() == nullptr) {
        delete format_.grid_format_;
      }
      break;
    }
    case FORMAT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FORMAT_NOT_SET;
}


void GetLoadBalancingStrategyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_format();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLoadBalancingStrategyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.LoadBalancingGridFormat grid_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_grid_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLoadBalancingStrategyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.LoadBalancingGridFormat grid_format = 1;
  if (_internal_has_grid_format()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::grid_format(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  return target;
}

size_t GetLoadBalancingStrategyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (format_case()) {
    // .improbable.platform.runtime.LoadBalancingGridFormat grid_format = 1;
    case kGridFormat: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *format_.grid_format_);
      break;
    }
    case FORMAT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLoadBalancingStrategyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLoadBalancingStrategyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLoadBalancingStrategyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
    MergeFrom(*source);
  }
}

void GetLoadBalancingStrategyRequest::MergeFrom(const GetLoadBalancingStrategyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.format_case()) {
    case kGridFormat: {
      _internal_mutable_grid_format()->::improbable::platform::runtime::LoadBalancingGridFormat::MergeFrom(from._internal_grid_format());
      break;
    }
    case FORMAT_NOT_SET: {
      break;
    }
  }
}

void GetLoadBalancingStrategyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLoadBalancingStrategyRequest::CopyFrom(const GetLoadBalancingStrategyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetLoadBalancingStrategyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoadBalancingStrategyRequest::IsInitialized() const {
  return true;
}

void GetLoadBalancingStrategyRequest::InternalSwap(GetLoadBalancingStrategyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(format_, other->format_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLoadBalancingStrategyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GridPartition::_Internal {
 public:
  static const ::improbable::platform::runtime::Region& region(const GridPartition* msg);
};

const ::improbable::platform::runtime::Region&
GridPartition::_Internal::region(const GridPartition* msg) {
  return *msg->region_;
}
GridPartition::GridPartition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GridPartition)
}
GridPartition::GridPartition(const GridPartition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_region()) {
    region_ = new ::improbable::platform::runtime::Region(*from.region_);
  } else {
    region_ = nullptr;
  }
  virtual_worker_id_ = from.virtual_worker_id_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GridPartition)
}

void GridPartition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GridPartition_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&region_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&virtual_worker_id_) -
      reinterpret_cast<char*>(&region_)) + sizeof(virtual_worker_id_));
}

GridPartition::~GridPartition() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GridPartition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GridPartition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete region_;
}

void GridPartition::ArenaDtor(void* object) {
  GridPartition* _this = reinterpret_cast< GridPartition* >(object);
  (void)_this;
}
void GridPartition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GridPartition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GridPartition& GridPartition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GridPartition_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GridPartition::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GridPartition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && region_ != nullptr) {
    delete region_;
  }
  region_ = nullptr;
  virtual_worker_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GridPartition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 virtual_worker_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          virtual_worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.Region region = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_region(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GridPartition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GridPartition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 virtual_worker_id = 1;
  if (this->virtual_worker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_virtual_worker_id(), target);
  }

  // .improbable.platform.runtime.Region region = 2;
  if (this->has_region()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::region(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GridPartition)
  return target;
}

size_t GridPartition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GridPartition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.Region region = 2;
  if (this->has_region()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *region_);
  }

  // int64 virtual_worker_id = 1;
  if (this->virtual_worker_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_virtual_worker_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GridPartition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GridPartition)
  GOOGLE_DCHECK_NE(&from, this);
  const GridPartition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GridPartition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GridPartition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GridPartition)
    MergeFrom(*source);
  }
}

void GridPartition::MergeFrom(const GridPartition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GridPartition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region()) {
    _internal_mutable_region()->::improbable::platform::runtime::Region::MergeFrom(from._internal_region());
  }
  if (from.virtual_worker_id() != 0) {
    _internal_set_virtual_worker_id(from._internal_virtual_worker_id());
  }
}

void GridPartition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GridPartition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridPartition::CopyFrom(const GridPartition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GridPartition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridPartition::IsInitialized() const {
  return true;
}

void GridPartition::InternalSwap(GridPartition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GridPartition, virtual_worker_id_)
      + sizeof(GridPartition::virtual_worker_id_)
      - PROTOBUF_FIELD_OFFSET(GridPartition, region_)>(
          reinterpret_cast<char*>(&region_),
          reinterpret_cast<char*>(&other->region_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GridPartition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GridPartitionStrategy::_Internal {
 public:
};

GridPartitionStrategy::GridPartitionStrategy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  grid_partitions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GridPartitionStrategy)
}
GridPartitionStrategy::GridPartitionStrategy(const GridPartitionStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      grid_partitions_(from.grid_partitions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GridPartitionStrategy)
}

void GridPartitionStrategy::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GridPartitionStrategy_runtime_2finspection_2eproto.base);
}

GridPartitionStrategy::~GridPartitionStrategy() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GridPartitionStrategy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GridPartitionStrategy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GridPartitionStrategy::ArenaDtor(void* object) {
  GridPartitionStrategy* _this = reinterpret_cast< GridPartitionStrategy* >(object);
  (void)_this;
}
void GridPartitionStrategy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GridPartitionStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GridPartitionStrategy& GridPartitionStrategy::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GridPartitionStrategy_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GridPartitionStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GridPartitionStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grid_partitions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GridPartitionStrategy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.GridPartition grid_partitions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_grid_partitions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GridPartitionStrategy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GridPartitionStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.GridPartition grid_partitions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_grid_partitions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_grid_partitions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GridPartitionStrategy)
  return target;
}

size_t GridPartitionStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GridPartitionStrategy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.GridPartition grid_partitions = 1;
  total_size += 1UL * this->_internal_grid_partitions_size();
  for (const auto& msg : this->grid_partitions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GridPartitionStrategy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GridPartitionStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const GridPartitionStrategy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GridPartitionStrategy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GridPartitionStrategy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GridPartitionStrategy)
    MergeFrom(*source);
  }
}

void GridPartitionStrategy::MergeFrom(const GridPartitionStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GridPartitionStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grid_partitions_.MergeFrom(from.grid_partitions_);
}

void GridPartitionStrategy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GridPartitionStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridPartitionStrategy::CopyFrom(const GridPartitionStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GridPartitionStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridPartitionStrategy::IsInitialized() const {
  return true;
}

void GridPartitionStrategy::InternalSwap(GridPartitionStrategy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  grid_partitions_.InternalSwap(&other->grid_partitions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GridPartitionStrategy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLoadBalancingStrategyResponse::_Internal {
 public:
  static const ::improbable::platform::runtime::GridPartitionStrategy& grid_partition_strategy(const GetLoadBalancingStrategyResponse* msg);
};

const ::improbable::platform::runtime::GridPartitionStrategy&
GetLoadBalancingStrategyResponse::_Internal::grid_partition_strategy(const GetLoadBalancingStrategyResponse* msg) {
  return *msg->strategy_.grid_partition_strategy_;
}
void GetLoadBalancingStrategyResponse::set_allocated_grid_partition_strategy(::improbable::platform::runtime::GridPartitionStrategy* grid_partition_strategy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_strategy();
  if (grid_partition_strategy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(grid_partition_strategy);
    if (message_arena != submessage_arena) {
      grid_partition_strategy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grid_partition_strategy, submessage_arena);
    }
    set_has_grid_partition_strategy();
    strategy_.grid_partition_strategy_ = grid_partition_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.GetLoadBalancingStrategyResponse.grid_partition_strategy)
}
GetLoadBalancingStrategyResponse::GetLoadBalancingStrategyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
}
GetLoadBalancingStrategyResponse::GetLoadBalancingStrategyResponse(const GetLoadBalancingStrategyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_strategy();
  switch (from.strategy_case()) {
    case kGridPartitionStrategy: {
      _internal_mutable_grid_partition_strategy()->::improbable::platform::runtime::GridPartitionStrategy::MergeFrom(from._internal_grid_partition_strategy());
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
}

void GetLoadBalancingStrategyResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLoadBalancingStrategyResponse_runtime_2finspection_2eproto.base);
  clear_has_strategy();
}

GetLoadBalancingStrategyResponse::~GetLoadBalancingStrategyResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLoadBalancingStrategyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_strategy()) {
    clear_strategy();
  }
}

void GetLoadBalancingStrategyResponse::ArenaDtor(void* object) {
  GetLoadBalancingStrategyResponse* _this = reinterpret_cast< GetLoadBalancingStrategyResponse* >(object);
  (void)_this;
}
void GetLoadBalancingStrategyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLoadBalancingStrategyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLoadBalancingStrategyResponse& GetLoadBalancingStrategyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLoadBalancingStrategyResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetLoadBalancingStrategyResponse::clear_strategy() {
// @@protoc_insertion_point(one_of_clear_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  switch (strategy_case()) {
    case kGridPartitionStrategy: {
      if (GetArena() == nullptr) {
        delete strategy_.grid_partition_strategy_;
      }
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STRATEGY_NOT_SET;
}


void GetLoadBalancingStrategyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_strategy();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLoadBalancingStrategyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.GridPartitionStrategy grid_partition_strategy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_grid_partition_strategy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLoadBalancingStrategyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.GridPartitionStrategy grid_partition_strategy = 1;
  if (_internal_has_grid_partition_strategy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::grid_partition_strategy(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  return target;
}

size_t GetLoadBalancingStrategyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (strategy_case()) {
    // .improbable.platform.runtime.GridPartitionStrategy grid_partition_strategy = 1;
    case kGridPartitionStrategy: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *strategy_.grid_partition_strategy_);
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLoadBalancingStrategyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLoadBalancingStrategyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLoadBalancingStrategyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
    MergeFrom(*source);
  }
}

void GetLoadBalancingStrategyResponse::MergeFrom(const GetLoadBalancingStrategyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.strategy_case()) {
    case kGridPartitionStrategy: {
      _internal_mutable_grid_partition_strategy()->::improbable::platform::runtime::GridPartitionStrategy::MergeFrom(from._internal_grid_partition_strategy());
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
}

void GetLoadBalancingStrategyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLoadBalancingStrategyResponse::CopyFrom(const GetLoadBalancingStrategyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetLoadBalancingStrategyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLoadBalancingStrategyResponse::IsInitialized() const {
  return true;
}

void GetLoadBalancingStrategyResponse::InternalSwap(GetLoadBalancingStrategyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(strategy_, other->strategy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLoadBalancingStrategyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetVirtualWorkerMappingRequest::_Internal {
 public:
};

GetVirtualWorkerMappingRequest::GetVirtualWorkerMappingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
}
GetVirtualWorkerMappingRequest::GetVirtualWorkerMappingRequest(const GetVirtualWorkerMappingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
}

void GetVirtualWorkerMappingRequest::SharedCtor() {
}

GetVirtualWorkerMappingRequest::~GetVirtualWorkerMappingRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVirtualWorkerMappingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetVirtualWorkerMappingRequest::ArenaDtor(void* object) {
  GetVirtualWorkerMappingRequest* _this = reinterpret_cast< GetVirtualWorkerMappingRequest* >(object);
  (void)_this;
}
void GetVirtualWorkerMappingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualWorkerMappingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVirtualWorkerMappingRequest& GetVirtualWorkerMappingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVirtualWorkerMappingRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetVirtualWorkerMappingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualWorkerMappingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVirtualWorkerMappingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  return target;
}

size_t GetVirtualWorkerMappingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVirtualWorkerMappingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVirtualWorkerMappingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVirtualWorkerMappingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
    MergeFrom(*source);
  }
}

void GetVirtualWorkerMappingRequest::MergeFrom(const GetVirtualWorkerMappingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetVirtualWorkerMappingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVirtualWorkerMappingRequest::CopyFrom(const GetVirtualWorkerMappingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetVirtualWorkerMappingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualWorkerMappingRequest::IsInitialized() const {
  return true;
}

void GetVirtualWorkerMappingRequest::InternalSwap(GetVirtualWorkerMappingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualWorkerMappingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse() {}
GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::MergeFrom(const GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class GetVirtualWorkerMappingResponse::_Internal {
 public:
};

GetVirtualWorkerMappingResponse::GetVirtualWorkerMappingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  virtual_to_worker_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
}
GetVirtualWorkerMappingResponse::GetVirtualWorkerMappingResponse(const GetVirtualWorkerMappingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  virtual_to_worker_.MergeFrom(from.virtual_to_worker_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
}

void GetVirtualWorkerMappingResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetVirtualWorkerMappingResponse_runtime_2finspection_2eproto.base);
}

GetVirtualWorkerMappingResponse::~GetVirtualWorkerMappingResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVirtualWorkerMappingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetVirtualWorkerMappingResponse::ArenaDtor(void* object) {
  GetVirtualWorkerMappingResponse* _this = reinterpret_cast< GetVirtualWorkerMappingResponse* >(object);
  (void)_this;
}
void GetVirtualWorkerMappingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualWorkerMappingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVirtualWorkerMappingResponse& GetVirtualWorkerMappingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVirtualWorkerMappingResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetVirtualWorkerMappingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  virtual_to_worker_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualWorkerMappingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int64, string> virtual_to_worker = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&virtual_to_worker_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVirtualWorkerMappingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, string> virtual_to_worker = 1;
  if (!this->_internal_virtual_to_worker().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.GetVirtualWorkerMappingResponse.VirtualToWorkerEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_virtual_to_worker().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_virtual_to_worker().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_iterator
          it = this->_internal_virtual_to_worker().begin();
          it != this->_internal_virtual_to_worker().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)].second));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_iterator
          it = this->_internal_virtual_to_worker().begin();
          it != this->_internal_virtual_to_worker().end(); ++it) {
        target = GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  return target;
}

size_t GetVirtualWorkerMappingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, string> virtual_to_worker = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_virtual_to_worker_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_iterator
      it = this->_internal_virtual_to_worker().begin();
      it != this->_internal_virtual_to_worker().end(); ++it) {
    total_size += GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVirtualWorkerMappingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVirtualWorkerMappingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVirtualWorkerMappingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
    MergeFrom(*source);
  }
}

void GetVirtualWorkerMappingResponse::MergeFrom(const GetVirtualWorkerMappingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  virtual_to_worker_.MergeFrom(from.virtual_to_worker_);
}

void GetVirtualWorkerMappingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVirtualWorkerMappingResponse::CopyFrom(const GetVirtualWorkerMappingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetVirtualWorkerMappingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualWorkerMappingResponse::IsInitialized() const {
  return true;
}

void GetVirtualWorkerMappingResponse::InternalSwap(GetVirtualWorkerMappingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  virtual_to_worker_.Swap(&other->virtual_to_worker_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualWorkerMappingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse() {}
WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::MergeFrom(const WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse() {}
WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::MergeFrom(const WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class WorkerDetails_ComponentSet::_Internal {
 public:
};

WorkerDetails_ComponentSet::WorkerDetails_ComponentSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  component_ids_with_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.WorkerDetails.ComponentSet)
}
WorkerDetails_ComponentSet::WorkerDetails_ComponentSet(const WorkerDetails_ComponentSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_ids_with_names_.MergeFrom(from.component_ids_with_names_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.WorkerDetails.ComponentSet)
}

void WorkerDetails_ComponentSet::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto.base);
}

WorkerDetails_ComponentSet::~WorkerDetails_ComponentSet() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.WorkerDetails.ComponentSet)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerDetails_ComponentSet::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WorkerDetails_ComponentSet::ArenaDtor(void* object) {
  WorkerDetails_ComponentSet* _this = reinterpret_cast< WorkerDetails_ComponentSet* >(object);
  (void)_this;
}
void WorkerDetails_ComponentSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerDetails_ComponentSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerDetails_ComponentSet& WorkerDetails_ComponentSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerDetails_ComponentSet_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void WorkerDetails_ComponentSet::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_ids_with_names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerDetails_ComponentSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, string> component_ids_with_names = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&component_ids_with_names_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerDetails_ComponentSet::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, string> component_ids_with_names = 1;
  if (!this->_internal_component_ids_with_names().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.WorkerDetails.ComponentSet.ComponentIdsWithNamesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_component_ids_with_names().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_component_ids_with_names().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_iterator
          it = this->_internal_component_ids_with_names().begin();
          it != this->_internal_component_ids_with_names().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)].second));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_iterator
          it = this->_internal_component_ids_with_names().begin();
          it != this->_internal_component_ids_with_names().end(); ++it) {
        target = WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.WorkerDetails.ComponentSet)
  return target;
}

size_t WorkerDetails_ComponentSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, string> component_ids_with_names = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_component_ids_with_names_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >::const_iterator
      it = this->_internal_component_ids_with_names().begin();
      it != this->_internal_component_ids_with_names().end(); ++it) {
    total_size += WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerDetails_ComponentSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerDetails_ComponentSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerDetails_ComponentSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.WorkerDetails.ComponentSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.WorkerDetails.ComponentSet)
    MergeFrom(*source);
  }
}

void WorkerDetails_ComponentSet::MergeFrom(const WorkerDetails_ComponentSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  component_ids_with_names_.MergeFrom(from.component_ids_with_names_);
}

void WorkerDetails_ComponentSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerDetails_ComponentSet::CopyFrom(const WorkerDetails_ComponentSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.WorkerDetails.ComponentSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerDetails_ComponentSet::IsInitialized() const {
  return true;
}

void WorkerDetails_ComponentSet::InternalSwap(WorkerDetails_ComponentSet* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_ids_with_names_.Swap(&other->component_ids_with_names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerDetails_ComponentSet::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

WorkerDetails_MetricsEntry_DoNotUse::WorkerDetails_MetricsEntry_DoNotUse() {}
WorkerDetails_MetricsEntry_DoNotUse::WorkerDetails_MetricsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WorkerDetails_MetricsEntry_DoNotUse::MergeFrom(const WorkerDetails_MetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WorkerDetails_MetricsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WorkerDetails_MetricsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class WorkerDetails::_Internal {
 public:
  static const ::improbable::platform::runtime::Region& interest_region(const WorkerDetails* msg);
  static const ::improbable::platform::runtime::WorkerAttributeSet& worker_attributes(const WorkerDetails* msg);
  static const ::improbable::platform::runtime::Region& authority_region(const WorkerDetails* msg);
};

const ::improbable::platform::runtime::Region&
WorkerDetails::_Internal::interest_region(const WorkerDetails* msg) {
  return *msg->interest_region_;
}
const ::improbable::platform::runtime::WorkerAttributeSet&
WorkerDetails::_Internal::worker_attributes(const WorkerDetails* msg) {
  return *msg->worker_attributes_;
}
const ::improbable::platform::runtime::Region&
WorkerDetails::_Internal::authority_region(const WorkerDetails* msg) {
  return *msg->authority_region_;
}
void WorkerDetails::clear_worker_attributes() {
  if (GetArena() == nullptr && worker_attributes_ != nullptr) {
    delete worker_attributes_;
  }
  worker_attributes_ = nullptr;
}
WorkerDetails::WorkerDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  known_entity_ids_(arena),
  delegated_entity_components_(arena),
  metrics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.WorkerDetails)
}
WorkerDetails::WorkerDetails(const WorkerDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      known_entity_ids_(from.known_entity_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegated_entity_components_.MergeFrom(from.delegated_entity_components_);
  metrics_.MergeFrom(from.metrics_);
  if (from._internal_has_interest_region()) {
    interest_region_ = new ::improbable::platform::runtime::Region(*from.interest_region_);
  } else {
    interest_region_ = nullptr;
  }
  if (from._internal_has_worker_attributes()) {
    worker_attributes_ = new ::improbable::platform::runtime::WorkerAttributeSet(*from.worker_attributes_);
  } else {
    worker_attributes_ = nullptr;
  }
  if (from._internal_has_authority_region()) {
    authority_region_ = new ::improbable::platform::runtime::Region(*from.authority_region_);
  } else {
    authority_region_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.WorkerDetails)
}

void WorkerDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerDetails_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&interest_region_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&authority_region_) -
      reinterpret_cast<char*>(&interest_region_)) + sizeof(authority_region_));
}

WorkerDetails::~WorkerDetails() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.WorkerDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete interest_region_;
  if (this != internal_default_instance()) delete worker_attributes_;
  if (this != internal_default_instance()) delete authority_region_;
}

void WorkerDetails::ArenaDtor(void* object) {
  WorkerDetails* _this = reinterpret_cast< WorkerDetails* >(object);
  (void)_this;
}
void WorkerDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerDetails& WorkerDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerDetails_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void WorkerDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.WorkerDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  known_entity_ids_.Clear();
  delegated_entity_components_.Clear();
  metrics_.Clear();
  if (GetArena() == nullptr && interest_region_ != nullptr) {
    delete interest_region_;
  }
  interest_region_ = nullptr;
  if (GetArena() == nullptr && worker_attributes_ != nullptr) {
    delete worker_attributes_;
  }
  worker_attributes_ = nullptr;
  if (GetArena() == nullptr && authority_region_ != nullptr) {
    delete authority_region_;
  }
  authority_region_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.Region interest_region = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_interest_region(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 known_entity_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_known_entity_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_known_entity_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int64, .improbable.platform.runtime.WorkerDetails.ComponentSet> delegated_entity_components = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&delegated_entity_components_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, double> metrics = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metrics_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.WorkerAttributeSet worker_attributes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_worker_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.Region authority_region = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_authority_region(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.WorkerDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.Region interest_region = 2;
  if (this->has_interest_region()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::interest_region(this), target, stream);
  }

  // repeated int64 known_entity_ids = 3;
  {
    int byte_size = _known_entity_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_known_entity_ids(), byte_size, target);
    }
  }

  // map<int64, .improbable.platform.runtime.WorkerDetails.ComponentSet> delegated_entity_components = 4;
  if (!this->_internal_delegated_entity_components().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::improbable::platform::runtime::WorkerDetails_ComponentSet >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_delegated_entity_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_delegated_entity_components().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::improbable::platform::runtime::WorkerDetails_ComponentSet >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::improbable::platform::runtime::WorkerDetails_ComponentSet >::const_iterator
          it = this->_internal_delegated_entity_components().begin();
          it != this->_internal_delegated_entity_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::improbable::platform::runtime::WorkerDetails_ComponentSet >::const_iterator
          it = this->_internal_delegated_entity_components().begin();
          it != this->_internal_delegated_entity_components().end(); ++it) {
        target = WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<string, double> metrics = 5;
  if (!this->_internal_metrics().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.WorkerDetails.MetricsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metrics().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
          it = this->_internal_metrics().begin();
          it != this->_internal_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WorkerDetails_MetricsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
          it = this->_internal_metrics().begin();
          it != this->_internal_metrics().end(); ++it) {
        target = WorkerDetails_MetricsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .improbable.platform.runtime.WorkerAttributeSet worker_attributes = 6;
  if (this->has_worker_attributes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::worker_attributes(this), target, stream);
  }

  // .improbable.platform.runtime.Region authority_region = 7;
  if (this->has_authority_region()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::authority_region(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.WorkerDetails)
  return target;
}

size_t WorkerDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.WorkerDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 known_entity_ids = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->known_entity_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _known_entity_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<int64, .improbable.platform.runtime.WorkerDetails.ComponentSet> delegated_entity_components = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delegated_entity_components_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::improbable::platform::runtime::WorkerDetails_ComponentSet >::const_iterator
      it = this->_internal_delegated_entity_components().begin();
      it != this->_internal_delegated_entity_components().end(); ++it) {
    total_size += WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, double> metrics = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metrics_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
      it = this->_internal_metrics().begin();
      it != this->_internal_metrics().end(); ++it) {
    total_size += WorkerDetails_MetricsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .improbable.platform.runtime.Region interest_region = 2;
  if (this->has_interest_region()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interest_region_);
  }

  // .improbable.platform.runtime.WorkerAttributeSet worker_attributes = 6;
  if (this->has_worker_attributes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *worker_attributes_);
  }

  // .improbable.platform.runtime.Region authority_region = 7;
  if (this->has_authority_region()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authority_region_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.WorkerDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.WorkerDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.WorkerDetails)
    MergeFrom(*source);
  }
}

void WorkerDetails::MergeFrom(const WorkerDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.WorkerDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  known_entity_ids_.MergeFrom(from.known_entity_ids_);
  delegated_entity_components_.MergeFrom(from.delegated_entity_components_);
  metrics_.MergeFrom(from.metrics_);
  if (from.has_interest_region()) {
    _internal_mutable_interest_region()->::improbable::platform::runtime::Region::MergeFrom(from._internal_interest_region());
  }
  if (from.has_worker_attributes()) {
    _internal_mutable_worker_attributes()->::improbable::platform::runtime::WorkerAttributeSet::MergeFrom(from._internal_worker_attributes());
  }
  if (from.has_authority_region()) {
    _internal_mutable_authority_region()->::improbable::platform::runtime::Region::MergeFrom(from._internal_authority_region());
  }
}

void WorkerDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.WorkerDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerDetails::CopyFrom(const WorkerDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.WorkerDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerDetails::IsInitialized() const {
  return true;
}

void WorkerDetails::InternalSwap(WorkerDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  known_entity_ids_.InternalSwap(&other->known_entity_ids_);
  delegated_entity_components_.Swap(&other->delegated_entity_components_);
  metrics_.Swap(&other->metrics_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkerDetails, authority_region_)
      + sizeof(WorkerDetails::authority_region_)
      - PROTOBUF_FIELD_OFFSET(WorkerDetails, interest_region_)>(
          reinterpret_cast<char*>(&interest_region_),
          reinterpret_cast<char*>(&other->interest_region_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Region_RectanglesRegion::_Internal {
 public:
};

void Region_RectanglesRegion::clear_rectangles() {
  rectangles_.Clear();
}
Region_RectanglesRegion::Region_RectanglesRegion(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rectangles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.Region.RectanglesRegion)
}
Region_RectanglesRegion::Region_RectanglesRegion(const Region_RectanglesRegion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rectangles_(from.rectangles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.Region.RectanglesRegion)
}

void Region_RectanglesRegion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Region_RectanglesRegion_runtime_2finspection_2eproto.base);
}

Region_RectanglesRegion::~Region_RectanglesRegion() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.Region.RectanglesRegion)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Region_RectanglesRegion::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Region_RectanglesRegion::ArenaDtor(void* object) {
  Region_RectanglesRegion* _this = reinterpret_cast< Region_RectanglesRegion* >(object);
  (void)_this;
}
void Region_RectanglesRegion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Region_RectanglesRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Region_RectanglesRegion& Region_RectanglesRegion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Region_RectanglesRegion_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void Region_RectanglesRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.Region.RectanglesRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rectangles_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Region_RectanglesRegion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.Rectangle rectangles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rectangles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Region_RectanglesRegion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.Region.RectanglesRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.Rectangle rectangles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rectangles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_rectangles(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.Region.RectanglesRegion)
  return target;
}

size_t Region_RectanglesRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.Region.RectanglesRegion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.Rectangle rectangles = 1;
  total_size += 1UL * this->_internal_rectangles_size();
  for (const auto& msg : this->rectangles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Region_RectanglesRegion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.Region.RectanglesRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const Region_RectanglesRegion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Region_RectanglesRegion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.Region.RectanglesRegion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.Region.RectanglesRegion)
    MergeFrom(*source);
  }
}

void Region_RectanglesRegion::MergeFrom(const Region_RectanglesRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.Region.RectanglesRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rectangles_.MergeFrom(from.rectangles_);
}

void Region_RectanglesRegion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.Region.RectanglesRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region_RectanglesRegion::CopyFrom(const Region_RectanglesRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.Region.RectanglesRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region_RectanglesRegion::IsInitialized() const {
  return true;
}

void Region_RectanglesRegion::InternalSwap(Region_RectanglesRegion* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rectangles_.InternalSwap(&other->rectangles_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Region_RectanglesRegion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Region::_Internal {
 public:
  static const ::improbable::platform::runtime::Region_RectanglesRegion& as_rectangles(const Region* msg);
};

const ::improbable::platform::runtime::Region_RectanglesRegion&
Region::_Internal::as_rectangles(const Region* msg) {
  return *msg->area_.as_rectangles_;
}
void Region::set_allocated_as_rectangles(::improbable::platform::runtime::Region_RectanglesRegion* as_rectangles) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_area();
  if (as_rectangles) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(as_rectangles);
    if (message_arena != submessage_arena) {
      as_rectangles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, as_rectangles, submessage_arena);
    }
    set_has_as_rectangles();
    area_.as_rectangles_ = as_rectangles;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.Region.as_rectangles)
}
Region::Region(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.Region)
}
Region::Region(const Region& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_area();
  switch (from.area_case()) {
    case kAsRectangles: {
      _internal_mutable_as_rectangles()->::improbable::platform::runtime::Region_RectanglesRegion::MergeFrom(from._internal_as_rectangles());
      break;
    }
    case AREA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.Region)
}

void Region::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Region_runtime_2finspection_2eproto.base);
  clear_has_area();
}

Region::~Region() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.Region)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Region::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_area()) {
    clear_area();
  }
}

void Region::ArenaDtor(void* object) {
  Region* _this = reinterpret_cast< Region* >(object);
  (void)_this;
}
void Region::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Region::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Region& Region::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Region_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void Region::clear_area() {
// @@protoc_insertion_point(one_of_clear_start:improbable.platform.runtime.Region)
  switch (area_case()) {
    case kAsRectangles: {
      if (GetArena() == nullptr) {
        delete area_.as_rectangles_;
      }
      break;
    }
    case AREA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AREA_NOT_SET;
}


void Region::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.Region)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_area();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Region::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.Region.RectanglesRegion as_rectangles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_as_rectangles(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Region::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.Region)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.Region.RectanglesRegion as_rectangles = 1;
  if (_internal_has_as_rectangles()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::as_rectangles(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.Region)
  return target;
}

size_t Region::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.Region)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (area_case()) {
    // .improbable.platform.runtime.Region.RectanglesRegion as_rectangles = 1;
    case kAsRectangles: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_.as_rectangles_);
      break;
    }
    case AREA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Region::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.Region)
  GOOGLE_DCHECK_NE(&from, this);
  const Region* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Region>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.Region)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.Region)
    MergeFrom(*source);
  }
}

void Region::MergeFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.Region)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.area_case()) {
    case kAsRectangles: {
      _internal_mutable_as_rectangles()->::improbable::platform::runtime::Region_RectanglesRegion::MergeFrom(from._internal_as_rectangles());
      break;
    }
    case AREA_NOT_SET: {
      break;
    }
  }
}

void Region::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region::CopyFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region::IsInitialized() const {
  return true;
}

void Region::InternalSwap(Region* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(area_, other->area_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Region::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorldExtentsRequest::_Internal {
 public:
};

GetWorldExtentsRequest::GetWorldExtentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorldExtentsRequest)
}
GetWorldExtentsRequest::GetWorldExtentsRequest(const GetWorldExtentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorldExtentsRequest)
}

void GetWorldExtentsRequest::SharedCtor() {
}

GetWorldExtentsRequest::~GetWorldExtentsRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorldExtentsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorldExtentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetWorldExtentsRequest::ArenaDtor(void* object) {
  GetWorldExtentsRequest* _this = reinterpret_cast< GetWorldExtentsRequest* >(object);
  (void)_this;
}
void GetWorldExtentsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorldExtentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorldExtentsRequest& GetWorldExtentsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorldExtentsRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorldExtentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorldExtentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorldExtentsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorldExtentsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorldExtentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorldExtentsRequest)
  return target;
}

size_t GetWorldExtentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorldExtentsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorldExtentsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorldExtentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorldExtentsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorldExtentsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorldExtentsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorldExtentsRequest)
    MergeFrom(*source);
  }
}

void GetWorldExtentsRequest::MergeFrom(const GetWorldExtentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorldExtentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetWorldExtentsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorldExtentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldExtentsRequest::CopyFrom(const GetWorldExtentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorldExtentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldExtentsRequest::IsInitialized() const {
  return true;
}

void GetWorldExtentsRequest::InternalSwap(GetWorldExtentsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorldExtentsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::_Internal {
 public:
};

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::clear_gsim_bounds() {
  gsim_bounds_.Clear();
}
GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  gsim_bounds_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
}
GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision(const GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      gsim_bounds_(from.gsim_bounds_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chunk_size_ = from.chunk_size_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto.base);
  chunk_size_ = 0;
}

GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::~GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::ArenaDtor(void* object) {
  GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision* _this = reinterpret_cast< GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision* >(object);
  (void)_this;
}
void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision& GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gsim_bounds_.Clear();
  chunk_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.Rectangle gsim_bounds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_gsim_bounds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 chunk_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          chunk_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.Rectangle gsim_bounds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_gsim_bounds_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_gsim_bounds(i), target, stream);
  }

  // int32 chunk_size = 2;
  if (this->chunk_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_chunk_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  return target;
}

size_t GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.Rectangle gsim_bounds = 1;
  total_size += 1UL * this->_internal_gsim_bounds_size();
  for (const auto& msg : this->gsim_bounds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 chunk_size = 2;
  if (this->chunk_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chunk_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
    MergeFrom(*source);
  }
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::MergeFrom(const GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gsim_bounds_.MergeFrom(from.gsim_bounds_);
  if (from.chunk_size() != 0) {
    _internal_set_chunk_size(from._internal_chunk_size());
  }
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::CopyFrom(const GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::IsInitialized() const {
  return true;
}

void GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::InternalSwap(GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  gsim_bounds_.InternalSwap(&other->gsim_bounds_);
  swap(chunk_size_, other->chunk_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorldExtentsResponse_WorldSubdivision::_Internal {
 public:
  static const ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision& gsim_extents(const GetWorldExtentsResponse_WorldSubdivision* msg);
};

const ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision&
GetWorldExtentsResponse_WorldSubdivision::_Internal::gsim_extents(const GetWorldExtentsResponse_WorldSubdivision* msg) {
  return *msg->subdivision_.gsim_extents_;
}
void GetWorldExtentsResponse_WorldSubdivision::set_allocated_gsim_extents(::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision* gsim_extents) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_subdivision();
  if (gsim_extents) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gsim_extents);
    if (message_arena != submessage_arena) {
      gsim_extents = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gsim_extents, submessage_arena);
    }
    set_has_gsim_extents();
    subdivision_.gsim_extents_ = gsim_extents;
  }
  // @@protoc_insertion_point(field_set_allocated:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.gsim_extents)
}
GetWorldExtentsResponse_WorldSubdivision::GetWorldExtentsResponse_WorldSubdivision(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
}
GetWorldExtentsResponse_WorldSubdivision::GetWorldExtentsResponse_WorldSubdivision(const GetWorldExtentsResponse_WorldSubdivision& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_subdivision();
  switch (from.subdivision_case()) {
    case kGsimExtents: {
      _internal_mutable_gsim_extents()->::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::MergeFrom(from._internal_gsim_extents());
      break;
    }
    case SUBDIVISION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
}

void GetWorldExtentsResponse_WorldSubdivision::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto.base);
  clear_has_subdivision();
}

GetWorldExtentsResponse_WorldSubdivision::~GetWorldExtentsResponse_WorldSubdivision() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorldExtentsResponse_WorldSubdivision::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_subdivision()) {
    clear_subdivision();
  }
}

void GetWorldExtentsResponse_WorldSubdivision::ArenaDtor(void* object) {
  GetWorldExtentsResponse_WorldSubdivision* _this = reinterpret_cast< GetWorldExtentsResponse_WorldSubdivision* >(object);
  (void)_this;
}
void GetWorldExtentsResponse_WorldSubdivision::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorldExtentsResponse_WorldSubdivision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorldExtentsResponse_WorldSubdivision& GetWorldExtentsResponse_WorldSubdivision::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorldExtentsResponse_WorldSubdivision_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorldExtentsResponse_WorldSubdivision::clear_subdivision() {
// @@protoc_insertion_point(one_of_clear_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  switch (subdivision_case()) {
    case kGsimExtents: {
      if (GetArena() == nullptr) {
        delete subdivision_.gsim_extents_;
      }
      break;
    }
    case SUBDIVISION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBDIVISION_NOT_SET;
}


void GetWorldExtentsResponse_WorldSubdivision::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_subdivision();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorldExtentsResponse_WorldSubdivision::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision gsim_extents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_gsim_extents(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorldExtentsResponse_WorldSubdivision::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision gsim_extents = 1;
  if (_internal_has_gsim_extents()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::gsim_extents(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  return target;
}

size_t GetWorldExtentsResponse_WorldSubdivision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (subdivision_case()) {
    // .improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision.GsimSubdivision gsim_extents = 1;
    case kGsimExtents: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *subdivision_.gsim_extents_);
      break;
    }
    case SUBDIVISION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorldExtentsResponse_WorldSubdivision::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorldExtentsResponse_WorldSubdivision* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorldExtentsResponse_WorldSubdivision>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
    MergeFrom(*source);
  }
}

void GetWorldExtentsResponse_WorldSubdivision::MergeFrom(const GetWorldExtentsResponse_WorldSubdivision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.subdivision_case()) {
    case kGsimExtents: {
      _internal_mutable_gsim_extents()->::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision::MergeFrom(from._internal_gsim_extents());
      break;
    }
    case SUBDIVISION_NOT_SET: {
      break;
    }
  }
}

void GetWorldExtentsResponse_WorldSubdivision::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldExtentsResponse_WorldSubdivision::CopyFrom(const GetWorldExtentsResponse_WorldSubdivision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldExtentsResponse_WorldSubdivision::IsInitialized() const {
  return true;
}

void GetWorldExtentsResponse_WorldSubdivision::InternalSwap(GetWorldExtentsResponse_WorldSubdivision* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subdivision_, other->subdivision_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorldExtentsResponse_WorldSubdivision::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetWorldExtentsResponse::_Internal {
 public:
  static const ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision& world_subdivision(const GetWorldExtentsResponse* msg);
  static const ::improbable::platform::runtime::Rectangle& world_bounds(const GetWorldExtentsResponse* msg);
};

const ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision&
GetWorldExtentsResponse::_Internal::world_subdivision(const GetWorldExtentsResponse* msg) {
  return *msg->world_subdivision_;
}
const ::improbable::platform::runtime::Rectangle&
GetWorldExtentsResponse::_Internal::world_bounds(const GetWorldExtentsResponse* msg) {
  return *msg->world_bounds_;
}
void GetWorldExtentsResponse::clear_world_bounds() {
  if (GetArena() == nullptr && world_bounds_ != nullptr) {
    delete world_bounds_;
  }
  world_bounds_ = nullptr;
}
GetWorldExtentsResponse::GetWorldExtentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetWorldExtentsResponse)
}
GetWorldExtentsResponse::GetWorldExtentsResponse(const GetWorldExtentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_world_subdivision()) {
    world_subdivision_ = new ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision(*from.world_subdivision_);
  } else {
    world_subdivision_ = nullptr;
  }
  if (from._internal_has_world_bounds()) {
    world_bounds_ = new ::improbable::platform::runtime::Rectangle(*from.world_bounds_);
  } else {
    world_bounds_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetWorldExtentsResponse)
}

void GetWorldExtentsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorldExtentsResponse_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&world_subdivision_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&world_bounds_) -
      reinterpret_cast<char*>(&world_subdivision_)) + sizeof(world_bounds_));
}

GetWorldExtentsResponse::~GetWorldExtentsResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetWorldExtentsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorldExtentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete world_subdivision_;
  if (this != internal_default_instance()) delete world_bounds_;
}

void GetWorldExtentsResponse::ArenaDtor(void* object) {
  GetWorldExtentsResponse* _this = reinterpret_cast< GetWorldExtentsResponse* >(object);
  (void)_this;
}
void GetWorldExtentsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorldExtentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorldExtentsResponse& GetWorldExtentsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorldExtentsResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetWorldExtentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetWorldExtentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && world_subdivision_ != nullptr) {
    delete world_subdivision_;
  }
  world_subdivision_ = nullptr;
  if (GetArena() == nullptr && world_bounds_ != nullptr) {
    delete world_bounds_;
  }
  world_bounds_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorldExtentsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision world_subdivision = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_world_subdivision(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.Rectangle world_bounds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_world_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorldExtentsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetWorldExtentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision world_subdivision = 1;
  if (this->has_world_subdivision()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::world_subdivision(this), target, stream);
  }

  // .improbable.platform.runtime.Rectangle world_bounds = 2;
  if (this->has_world_bounds()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::world_bounds(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetWorldExtentsResponse)
  return target;
}

size_t GetWorldExtentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetWorldExtentsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.GetWorldExtentsResponse.WorldSubdivision world_subdivision = 1;
  if (this->has_world_subdivision()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *world_subdivision_);
  }

  // .improbable.platform.runtime.Rectangle world_bounds = 2;
  if (this->has_world_bounds()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *world_bounds_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorldExtentsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetWorldExtentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorldExtentsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorldExtentsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetWorldExtentsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetWorldExtentsResponse)
    MergeFrom(*source);
  }
}

void GetWorldExtentsResponse::MergeFrom(const GetWorldExtentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetWorldExtentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_world_subdivision()) {
    _internal_mutable_world_subdivision()->::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision::MergeFrom(from._internal_world_subdivision());
  }
  if (from.has_world_bounds()) {
    _internal_mutable_world_bounds()->::improbable::platform::runtime::Rectangle::MergeFrom(from._internal_world_bounds());
  }
}

void GetWorldExtentsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetWorldExtentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldExtentsResponse::CopyFrom(const GetWorldExtentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetWorldExtentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldExtentsResponse::IsInitialized() const {
  return true;
}

void GetWorldExtentsResponse::InternalSwap(GetWorldExtentsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetWorldExtentsResponse, world_bounds_)
      + sizeof(GetWorldExtentsResponse::world_bounds_)
      - PROTOBUF_FIELD_OFFSET(GetWorldExtentsResponse, world_subdivision_)>(
          reinterpret_cast<char*>(&world_subdivision_),
          reinterpret_cast<char*>(&other->world_subdivision_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorldExtentsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetChunksRequest::_Internal {
 public:
  static const ::improbable::platform::runtime::Rectangle& viewport(const GetChunksRequest* msg);
};

const ::improbable::platform::runtime::Rectangle&
GetChunksRequest::_Internal::viewport(const GetChunksRequest* msg) {
  return *msg->viewport_;
}
void GetChunksRequest::clear_viewport() {
  if (GetArena() == nullptr && viewport_ != nullptr) {
    delete viewport_;
  }
  viewport_ = nullptr;
}
GetChunksRequest::GetChunksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetChunksRequest)
}
GetChunksRequest::GetChunksRequest(const GetChunksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewport()) {
    viewport_ = new ::improbable::platform::runtime::Rectangle(*from.viewport_);
  } else {
    viewport_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetChunksRequest)
}

void GetChunksRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetChunksRequest_runtime_2finspection_2eproto.base);
  viewport_ = nullptr;
}

GetChunksRequest::~GetChunksRequest() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetChunksRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetChunksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewport_;
}

void GetChunksRequest::ArenaDtor(void* object) {
  GetChunksRequest* _this = reinterpret_cast< GetChunksRequest* >(object);
  (void)_this;
}
void GetChunksRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetChunksRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetChunksRequest& GetChunksRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetChunksRequest_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetChunksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetChunksRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewport_ != nullptr) {
    delete viewport_;
  }
  viewport_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChunksRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.Rectangle viewport = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewport(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetChunksRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetChunksRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.Rectangle viewport = 1;
  if (this->has_viewport()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewport(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetChunksRequest)
  return target;
}

size_t GetChunksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetChunksRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.Rectangle viewport = 1;
  if (this->has_viewport()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewport_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetChunksRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetChunksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChunksRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetChunksRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetChunksRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetChunksRequest)
    MergeFrom(*source);
  }
}

void GetChunksRequest::MergeFrom(const GetChunksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetChunksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewport()) {
    _internal_mutable_viewport()->::improbable::platform::runtime::Rectangle::MergeFrom(from._internal_viewport());
  }
}

void GetChunksRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetChunksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChunksRequest::CopyFrom(const GetChunksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetChunksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChunksRequest::IsInitialized() const {
  return true;
}

void GetChunksRequest::InternalSwap(GetChunksRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(viewport_, other->viewport_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChunksRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetChunksResponse::_Internal {
 public:
};

GetChunksResponse::GetChunksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  chunks_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.GetChunksResponse)
}
GetChunksResponse::GetChunksResponse(const GetChunksResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      chunks_(from.chunks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.GetChunksResponse)
}

void GetChunksResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetChunksResponse_runtime_2finspection_2eproto.base);
}

GetChunksResponse::~GetChunksResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.GetChunksResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetChunksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetChunksResponse::ArenaDtor(void* object) {
  GetChunksResponse* _this = reinterpret_cast< GetChunksResponse* >(object);
  (void)_this;
}
void GetChunksResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetChunksResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetChunksResponse& GetChunksResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetChunksResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void GetChunksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.GetChunksResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunks_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChunksResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.platform.runtime.ChunkDetails chunks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_chunks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetChunksResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.GetChunksResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.ChunkDetails chunks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_chunks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_chunks(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.GetChunksResponse)
  return target;
}

size_t GetChunksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.GetChunksResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.platform.runtime.ChunkDetails chunks = 1;
  total_size += 1UL * this->_internal_chunks_size();
  for (const auto& msg : this->chunks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetChunksResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.GetChunksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChunksResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetChunksResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.GetChunksResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.GetChunksResponse)
    MergeFrom(*source);
  }
}

void GetChunksResponse::MergeFrom(const GetChunksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.GetChunksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunks_.MergeFrom(from.chunks_);
}

void GetChunksResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.GetChunksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChunksResponse::CopyFrom(const GetChunksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.GetChunksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChunksResponse::IsInitialized() const {
  return true;
}

void GetChunksResponse::InternalSwap(GetChunksResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chunks_.InternalSwap(&other->chunks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChunksResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ChunkDetails_WorkerAssignmentsEntry_DoNotUse::ChunkDetails_WorkerAssignmentsEntry_DoNotUse() {}
ChunkDetails_WorkerAssignmentsEntry_DoNotUse::ChunkDetails_WorkerAssignmentsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ChunkDetails_WorkerAssignmentsEntry_DoNotUse::MergeFrom(const ChunkDetails_WorkerAssignmentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ChunkDetails_WorkerAssignmentsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ChunkDetails_WorkerAssignmentsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse() {}
ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::MergeFrom(const ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ChunkDetails::_Internal {
 public:
  static const ::improbable::platform::runtime::Rectangle& extent(const ChunkDetails* msg);
};

const ::improbable::platform::runtime::Rectangle&
ChunkDetails::_Internal::extent(const ChunkDetails* msg) {
  return *msg->extent_;
}
void ChunkDetails::clear_extent() {
  if (GetArena() == nullptr && extent_ != nullptr) {
    delete extent_;
  }
  extent_ = nullptr;
}
ChunkDetails::ChunkDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subscribed_worker_ids_(arena),
  worker_assignments_(arena),
  worker_assignment_overrides_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.ChunkDetails)
}
ChunkDetails::ChunkDetails(const ChunkDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subscribed_worker_ids_(from.subscribed_worker_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worker_assignments_.MergeFrom(from.worker_assignments_);
  worker_assignment_overrides_.MergeFrom(from.worker_assignment_overrides_);
  chunk_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chunk_id().empty()) {
    chunk_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chunk_id(), 
      GetArena());
  }
  if (from._internal_has_extent()) {
    extent_ = new ::improbable::platform::runtime::Rectangle(*from.extent_);
  } else {
    extent_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.ChunkDetails)
}

void ChunkDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChunkDetails_runtime_2finspection_2eproto.base);
  chunk_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extent_ = nullptr;
}

ChunkDetails::~ChunkDetails() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.ChunkDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChunkDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  chunk_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extent_;
}

void ChunkDetails::ArenaDtor(void* object) {
  ChunkDetails* _this = reinterpret_cast< ChunkDetails* >(object);
  (void)_this;
}
void ChunkDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChunkDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChunkDetails& ChunkDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChunkDetails_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void ChunkDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.ChunkDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribed_worker_ids_.Clear();
  worker_assignments_.Clear();
  worker_assignment_overrides_.Clear();
  chunk_id_.ClearToEmpty();
  if (GetArena() == nullptr && extent_ != nullptr) {
    delete extent_;
  }
  extent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChunkDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string chunk_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_chunk_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.ChunkDetails.chunk_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.Rectangle extent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string subscribed_worker_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_subscribed_worker_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.platform.runtime.ChunkDetails.subscribed_worker_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> worker_assignments = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&worker_assignments_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> worker_assignment_overrides = 5 [deprecated = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&worker_assignment_overrides_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChunkDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.ChunkDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chunk_id = 1;
  if (this->chunk_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chunk_id().data(), static_cast<int>(this->_internal_chunk_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.ChunkDetails.chunk_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_chunk_id(), target);
  }

  // .improbable.platform.runtime.Rectangle extent = 2;
  if (this->has_extent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::extent(this), target, stream);
  }

  // repeated string subscribed_worker_ids = 3;
  for (int i = 0, n = this->_internal_subscribed_worker_ids_size(); i < n; i++) {
    const auto& s = this->_internal_subscribed_worker_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.platform.runtime.ChunkDetails.subscribed_worker_ids");
    target = stream->WriteString(3, s, target);
  }

  // map<string, string> worker_assignments = 4;
  if (!this->_internal_worker_assignments().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.ChunkDetails.WorkerAssignmentsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.ChunkDetails.WorkerAssignmentsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_worker_assignments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_worker_assignments().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_worker_assignments().begin();
          it != this->_internal_worker_assignments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ChunkDetails_WorkerAssignmentsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_worker_assignments().begin();
          it != this->_internal_worker_assignments().end(); ++it) {
        target = ChunkDetails_WorkerAssignmentsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> worker_assignment_overrides = 5 [deprecated = true];
  if (!this->_internal_worker_assignment_overrides().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.ChunkDetails.WorkerAssignmentOverridesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.ChunkDetails.WorkerAssignmentOverridesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_worker_assignment_overrides().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_worker_assignment_overrides().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_worker_assignment_overrides().begin();
          it != this->_internal_worker_assignment_overrides().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_worker_assignment_overrides().begin();
          it != this->_internal_worker_assignment_overrides().end(); ++it) {
        target = ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.ChunkDetails)
  return target;
}

size_t ChunkDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.ChunkDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string subscribed_worker_ids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(subscribed_worker_ids_.size());
  for (int i = 0, n = subscribed_worker_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      subscribed_worker_ids_.Get(i));
  }

  // map<string, string> worker_assignments = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_worker_assignments_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_worker_assignments().begin();
      it != this->_internal_worker_assignments().end(); ++it) {
    total_size += ChunkDetails_WorkerAssignmentsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> worker_assignment_overrides = 5 [deprecated = true];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_worker_assignment_overrides_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_worker_assignment_overrides().begin();
      it != this->_internal_worker_assignment_overrides().end(); ++it) {
    total_size += ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string chunk_id = 1;
  if (this->chunk_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chunk_id());
  }

  // .improbable.platform.runtime.Rectangle extent = 2;
  if (this->has_extent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extent_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChunkDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.ChunkDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ChunkDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChunkDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.ChunkDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.ChunkDetails)
    MergeFrom(*source);
  }
}

void ChunkDetails::MergeFrom(const ChunkDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.ChunkDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_worker_ids_.MergeFrom(from.subscribed_worker_ids_);
  worker_assignments_.MergeFrom(from.worker_assignments_);
  worker_assignment_overrides_.MergeFrom(from.worker_assignment_overrides_);
  if (from.chunk_id().size() > 0) {
    _internal_set_chunk_id(from._internal_chunk_id());
  }
  if (from.has_extent()) {
    _internal_mutable_extent()->::improbable::platform::runtime::Rectangle::MergeFrom(from._internal_extent());
  }
}

void ChunkDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.ChunkDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChunkDetails::CopyFrom(const ChunkDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.ChunkDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChunkDetails::IsInitialized() const {
  return true;
}

void ChunkDetails::InternalSwap(ChunkDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subscribed_worker_ids_.InternalSwap(&other->subscribed_worker_ids_);
  worker_assignments_.Swap(&other->worker_assignments_);
  worker_assignment_overrides_.Swap(&other->worker_assignment_overrides_);
  chunk_id_.Swap(&other->chunk_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(extent_, other->extent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChunkDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InspectionEntitySubscriptionQuery::_Internal {
 public:
  static const ::improbable::platform::runtime::InspectionEntityQueryConstraint& constraint(const InspectionEntitySubscriptionQuery* msg);
  static const ::improbable::platform::runtime::InspectionQueryResultType& result_type(const InspectionEntitySubscriptionQuery* msg);
};

const ::improbable::platform::runtime::InspectionEntityQueryConstraint&
InspectionEntitySubscriptionQuery::_Internal::constraint(const InspectionEntitySubscriptionQuery* msg) {
  return *msg->constraint_;
}
const ::improbable::platform::runtime::InspectionQueryResultType&
InspectionEntitySubscriptionQuery::_Internal::result_type(const InspectionEntitySubscriptionQuery* msg) {
  return *msg->result_type_;
}
void InspectionEntitySubscriptionQuery::clear_constraint() {
  if (GetArena() == nullptr && constraint_ != nullptr) {
    delete constraint_;
  }
  constraint_ = nullptr;
}
void InspectionEntitySubscriptionQuery::clear_result_type() {
  if (GetArena() == nullptr && result_type_ != nullptr) {
    delete result_type_;
  }
  result_type_ = nullptr;
}
InspectionEntitySubscriptionQuery::InspectionEntitySubscriptionQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
}
InspectionEntitySubscriptionQuery::InspectionEntitySubscriptionQuery(const InspectionEntitySubscriptionQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_constraint()) {
    constraint_ = new ::improbable::platform::runtime::InspectionEntityQueryConstraint(*from.constraint_);
  } else {
    constraint_ = nullptr;
  }
  if (from._internal_has_result_type()) {
    result_type_ = new ::improbable::platform::runtime::InspectionQueryResultType(*from.result_type_);
  } else {
    result_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
}

void InspectionEntitySubscriptionQuery::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InspectionEntitySubscriptionQuery_runtime_2finspection_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&constraint_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&result_type_) -
      reinterpret_cast<char*>(&constraint_)) + sizeof(result_type_));
}

InspectionEntitySubscriptionQuery::~InspectionEntitySubscriptionQuery() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectionEntitySubscriptionQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete constraint_;
  if (this != internal_default_instance()) delete result_type_;
}

void InspectionEntitySubscriptionQuery::ArenaDtor(void* object) {
  InspectionEntitySubscriptionQuery* _this = reinterpret_cast< InspectionEntitySubscriptionQuery* >(object);
  (void)_this;
}
void InspectionEntitySubscriptionQuery::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectionEntitySubscriptionQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectionEntitySubscriptionQuery& InspectionEntitySubscriptionQuery::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectionEntitySubscriptionQuery_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectionEntitySubscriptionQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && constraint_ != nullptr) {
    delete constraint_;
  }
  constraint_ = nullptr;
  if (GetArena() == nullptr && result_type_ != nullptr) {
    delete result_type_;
  }
  result_type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectionEntitySubscriptionQuery::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.InspectionEntityQueryConstraint constraint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .improbable.platform.runtime.InspectionQueryResultType result_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectionEntitySubscriptionQuery::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.InspectionEntityQueryConstraint constraint = 1;
  if (this->has_constraint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::constraint(this), target, stream);
  }

  // .improbable.platform.runtime.InspectionQueryResultType result_type = 2;
  if (this->has_result_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  return target;
}

size_t InspectionEntitySubscriptionQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .improbable.platform.runtime.InspectionEntityQueryConstraint constraint = 1;
  if (this->has_constraint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *constraint_);
  }

  // .improbable.platform.runtime.InspectionQueryResultType result_type = 2;
  if (this->has_result_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectionEntitySubscriptionQuery::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectionEntitySubscriptionQuery* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectionEntitySubscriptionQuery>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
    MergeFrom(*source);
  }
}

void InspectionEntitySubscriptionQuery::MergeFrom(const InspectionEntitySubscriptionQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_constraint()) {
    _internal_mutable_constraint()->::improbable::platform::runtime::InspectionEntityQueryConstraint::MergeFrom(from._internal_constraint());
  }
  if (from.has_result_type()) {
    _internal_mutable_result_type()->::improbable::platform::runtime::InspectionQueryResultType::MergeFrom(from._internal_result_type());
  }
}

void InspectionEntitySubscriptionQuery::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectionEntitySubscriptionQuery::CopyFrom(const InspectionEntitySubscriptionQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectionEntitySubscriptionQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectionEntitySubscriptionQuery::IsInitialized() const {
  return true;
}

void InspectionEntitySubscriptionQuery::InternalSwap(InspectionEntitySubscriptionQuery* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InspectionEntitySubscriptionQuery, result_type_)
      + sizeof(InspectionEntitySubscriptionQuery::result_type_)
      - PROTOBUF_FIELD_OFFSET(InspectionEntitySubscriptionQuery, constraint_)>(
          reinterpret_cast<char*>(&constraint_),
          reinterpret_cast<char*>(&other->constraint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntitySubscriptionQuery::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InspectionEntitySubscriptionResponse::_Internal {
 public:
};

InspectionEntitySubscriptionResponse::InspectionEntitySubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  deleted_entities_(arena),
  removed_components_(arena),
  added_entities_(arena),
  updated_components_(arena),
  authority_states_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
}
InspectionEntitySubscriptionResponse::InspectionEntitySubscriptionResponse(const InspectionEntitySubscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      deleted_entities_(from.deleted_entities_),
      removed_components_(from.removed_components_),
      added_entities_(from.added_entities_),
      updated_components_(from.updated_components_),
      authority_states_(from.authority_states_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
}

void InspectionEntitySubscriptionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InspectionEntitySubscriptionResponse_runtime_2finspection_2eproto.base);
}

InspectionEntitySubscriptionResponse::~InspectionEntitySubscriptionResponse() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectionEntitySubscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InspectionEntitySubscriptionResponse::ArenaDtor(void* object) {
  InspectionEntitySubscriptionResponse* _this = reinterpret_cast< InspectionEntitySubscriptionResponse* >(object);
  (void)_this;
}
void InspectionEntitySubscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectionEntitySubscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectionEntitySubscriptionResponse& InspectionEntitySubscriptionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectionEntitySubscriptionResponse_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectionEntitySubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deleted_entities_.Clear();
  removed_components_.Clear();
  added_entities_.Clear();
  updated_components_.Clear();
  authority_states_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectionEntitySubscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 deleted_entities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_deleted_entities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_deleted_entities(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .improbable.platform.runtime.InspectionEntityComponentId removed_components = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_removed_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .improbable.platform.runtime.InspectionEntitySnapshot added_entities = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_added_entities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .improbable.platform.runtime.InspectionEntityComponentUpdate updated_components = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updated_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .improbable.platform.runtime.InspectionEntityAuthorityState authority_states = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authority_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectionEntitySubscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 deleted_entities = 1;
  {
    int byte_size = _deleted_entities_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_deleted_entities(), byte_size, target);
    }
  }

  // repeated .improbable.platform.runtime.InspectionEntityComponentId removed_components = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_removed_components_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_removed_components(i), target, stream);
  }

  // repeated .improbable.platform.runtime.InspectionEntitySnapshot added_entities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_added_entities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_added_entities(i), target, stream);
  }

  // repeated .improbable.platform.runtime.InspectionEntityComponentUpdate updated_components = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_updated_components_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_updated_components(i), target, stream);
  }

  // repeated .improbable.platform.runtime.InspectionEntityAuthorityState authority_states = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_authority_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_authority_states(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  return target;
}

size_t InspectionEntitySubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 deleted_entities = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->deleted_entities_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _deleted_entities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .improbable.platform.runtime.InspectionEntityComponentId removed_components = 2;
  total_size += 1UL * this->_internal_removed_components_size();
  for (const auto& msg : this->removed_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .improbable.platform.runtime.InspectionEntitySnapshot added_entities = 3;
  total_size += 1UL * this->_internal_added_entities_size();
  for (const auto& msg : this->added_entities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .improbable.platform.runtime.InspectionEntityComponentUpdate updated_components = 4;
  total_size += 1UL * this->_internal_updated_components_size();
  for (const auto& msg : this->updated_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .improbable.platform.runtime.InspectionEntityAuthorityState authority_states = 5;
  total_size += 1UL * this->_internal_authority_states_size();
  for (const auto& msg : this->authority_states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectionEntitySubscriptionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectionEntitySubscriptionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectionEntitySubscriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
    MergeFrom(*source);
  }
}

void InspectionEntitySubscriptionResponse::MergeFrom(const InspectionEntitySubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deleted_entities_.MergeFrom(from.deleted_entities_);
  removed_components_.MergeFrom(from.removed_components_);
  added_entities_.MergeFrom(from.added_entities_);
  updated_components_.MergeFrom(from.updated_components_);
  authority_states_.MergeFrom(from.authority_states_);
}

void InspectionEntitySubscriptionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectionEntitySubscriptionResponse::CopyFrom(const InspectionEntitySubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectionEntitySubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectionEntitySubscriptionResponse::IsInitialized() const {
  return true;
}

void InspectionEntitySubscriptionResponse::InternalSwap(InspectionEntitySubscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  deleted_entities_.InternalSwap(&other->deleted_entities_);
  removed_components_.InternalSwap(&other->removed_components_);
  added_entities_.InternalSwap(&other->added_entities_);
  updated_components_.InternalSwap(&other->updated_components_);
  authority_states_.InternalSwap(&other->authority_states_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntitySubscriptionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InspectionEntityComponentId::_Internal {
 public:
};

InspectionEntityComponentId::InspectionEntityComponentId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectionEntityComponentId)
}
InspectionEntityComponentId::InspectionEntityComponentId(const InspectionEntityComponentId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&component_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(component_id_));
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectionEntityComponentId)
}

void InspectionEntityComponentId::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&component_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(component_id_));
}

InspectionEntityComponentId::~InspectionEntityComponentId() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectionEntityComponentId)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectionEntityComponentId::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InspectionEntityComponentId::ArenaDtor(void* object) {
  InspectionEntityComponentId* _this = reinterpret_cast< InspectionEntityComponentId* >(object);
  (void)_this;
}
void InspectionEntityComponentId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectionEntityComponentId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectionEntityComponentId& InspectionEntityComponentId::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectionEntityComponentId_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectionEntityComponentId::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectionEntityComponentId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&component_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(component_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectionEntityComponentId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 component_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          component_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectionEntityComponentId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectionEntityComponentId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectionEntityComponentId)
  return target;
}

size_t InspectionEntityComponentId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectionEntityComponentId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entity_id());
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_component_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectionEntityComponentId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectionEntityComponentId)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectionEntityComponentId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectionEntityComponentId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectionEntityComponentId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectionEntityComponentId)
    MergeFrom(*source);
  }
}

void InspectionEntityComponentId::MergeFrom(const InspectionEntityComponentId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectionEntityComponentId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
  if (from.component_id() != 0) {
    _internal_set_component_id(from._internal_component_id());
  }
}

void InspectionEntityComponentId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectionEntityComponentId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectionEntityComponentId::CopyFrom(const InspectionEntityComponentId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectionEntityComponentId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectionEntityComponentId::IsInitialized() const {
  return true;
}

void InspectionEntityComponentId::InternalSwap(InspectionEntityComponentId* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InspectionEntityComponentId, component_id_)
      + sizeof(InspectionEntityComponentId::component_id_)
      - PROTOBUF_FIELD_OFFSET(InspectionEntityComponentId, entity_id_)>(
          reinterpret_cast<char*>(&entity_id_),
          reinterpret_cast<char*>(&other->entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntityComponentId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InspectionEntitySnapshot_ComponentsEntry_DoNotUse::InspectionEntitySnapshot_ComponentsEntry_DoNotUse() {}
InspectionEntitySnapshot_ComponentsEntry_DoNotUse::InspectionEntitySnapshot_ComponentsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InspectionEntitySnapshot_ComponentsEntry_DoNotUse::MergeFrom(const InspectionEntitySnapshot_ComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntitySnapshot_ComponentsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InspectionEntitySnapshot_ComponentsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class InspectionEntitySnapshot::_Internal {
 public:
};

InspectionEntitySnapshot::InspectionEntitySnapshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  components_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectionEntitySnapshot)
}
InspectionEntitySnapshot::InspectionEntitySnapshot(const InspectionEntitySnapshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  components_.MergeFrom(from.components_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectionEntitySnapshot)
}

void InspectionEntitySnapshot::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto.base);
  entity_id_ = PROTOBUF_LONGLONG(0);
}

InspectionEntitySnapshot::~InspectionEntitySnapshot() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectionEntitySnapshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectionEntitySnapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InspectionEntitySnapshot::ArenaDtor(void* object) {
  InspectionEntitySnapshot* _this = reinterpret_cast< InspectionEntitySnapshot* >(object);
  (void)_this;
}
void InspectionEntitySnapshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectionEntitySnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectionEntitySnapshot& InspectionEntitySnapshot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectionEntitySnapshot_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectionEntitySnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectionEntitySnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  components_.Clear();
  entity_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectionEntitySnapshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, bytes> components = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&components_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectionEntitySnapshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectionEntitySnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // map<uint32, bytes> components = 2;
  if (!this->_internal_components().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_components().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_components().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
          it = this->_internal_components().begin();
          it != this->_internal_components().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InspectionEntitySnapshot_ComponentsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
          it = this->_internal_components().begin();
          it != this->_internal_components().end(); ++it) {
        target = InspectionEntitySnapshot_ComponentsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectionEntitySnapshot)
  return target;
}

size_t InspectionEntitySnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectionEntitySnapshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, bytes> components = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_components_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
      it = this->_internal_components().begin();
      it != this->_internal_components().end(); ++it) {
    total_size += InspectionEntitySnapshot_ComponentsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectionEntitySnapshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectionEntitySnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectionEntitySnapshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectionEntitySnapshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectionEntitySnapshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectionEntitySnapshot)
    MergeFrom(*source);
  }
}

void InspectionEntitySnapshot::MergeFrom(const InspectionEntitySnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectionEntitySnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  components_.MergeFrom(from.components_);
  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
}

void InspectionEntitySnapshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectionEntitySnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectionEntitySnapshot::CopyFrom(const InspectionEntitySnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectionEntitySnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectionEntitySnapshot::IsInitialized() const {
  return true;
}

void InspectionEntitySnapshot::InternalSwap(InspectionEntitySnapshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  components_.Swap(&other->components_);
  swap(entity_id_, other->entity_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntitySnapshot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InspectionEntityComponentUpdate::_Internal {
 public:
  static const ::improbable::platform::runtime::InspectionEntityComponentId& entity_component_id(const InspectionEntityComponentUpdate* msg);
};

const ::improbable::platform::runtime::InspectionEntityComponentId&
InspectionEntityComponentUpdate::_Internal::entity_component_id(const InspectionEntityComponentUpdate* msg) {
  return *msg->entity_component_id_;
}
InspectionEntityComponentUpdate::InspectionEntityComponentUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  fields_to_clear_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectionEntityComponentUpdate)
}
InspectionEntityComponentUpdate::InspectionEntityComponentUpdate(const InspectionEntityComponentUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fields_to_clear_(from.fields_to_clear_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component().empty()) {
    component_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_component(), 
      GetArena());
  }
  if (from._internal_has_entity_component_id()) {
    entity_component_id_ = new ::improbable::platform::runtime::InspectionEntityComponentId(*from.entity_component_id_);
  } else {
    entity_component_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectionEntityComponentUpdate)
}

void InspectionEntityComponentUpdate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto.base);
  component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  entity_component_id_ = nullptr;
}

InspectionEntityComponentUpdate::~InspectionEntityComponentUpdate() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectionEntityComponentUpdate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectionEntityComponentUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_component_id_;
}

void InspectionEntityComponentUpdate::ArenaDtor(void* object) {
  InspectionEntityComponentUpdate* _this = reinterpret_cast< InspectionEntityComponentUpdate* >(object);
  (void)_this;
}
void InspectionEntityComponentUpdate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectionEntityComponentUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectionEntityComponentUpdate& InspectionEntityComponentUpdate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectionEntityComponentUpdate_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectionEntityComponentUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_to_clear_.Clear();
  component_.ClearToEmpty();
  if (GetArena() == nullptr && entity_component_id_ != nullptr) {
    delete entity_component_id_;
  }
  entity_component_id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectionEntityComponentUpdate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .improbable.platform.runtime.InspectionEntityComponentId entity_component_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_component_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes component = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 fields_to_clear = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_fields_to_clear(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_fields_to_clear(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectionEntityComponentUpdate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .improbable.platform.runtime.InspectionEntityComponentId entity_component_id = 1;
  if (this->has_entity_component_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::entity_component_id(this), target, stream);
  }

  // bytes component = 2;
  if (this->component().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_component(), target);
  }

  // repeated uint32 fields_to_clear = 3;
  {
    int byte_size = _fields_to_clear_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_fields_to_clear(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectionEntityComponentUpdate)
  return target;
}

size_t InspectionEntityComponentUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 fields_to_clear = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->fields_to_clear_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _fields_to_clear_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes component = 2;
  if (this->component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_component());
  }

  // .improbable.platform.runtime.InspectionEntityComponentId entity_component_id = 1;
  if (this->has_entity_component_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *entity_component_id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectionEntityComponentUpdate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectionEntityComponentUpdate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectionEntityComponentUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectionEntityComponentUpdate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectionEntityComponentUpdate)
    MergeFrom(*source);
  }
}

void InspectionEntityComponentUpdate::MergeFrom(const InspectionEntityComponentUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_to_clear_.MergeFrom(from.fields_to_clear_);
  if (from.component().size() > 0) {
    _internal_set_component(from._internal_component());
  }
  if (from.has_entity_component_id()) {
    _internal_mutable_entity_component_id()->::improbable::platform::runtime::InspectionEntityComponentId::MergeFrom(from._internal_entity_component_id());
  }
}

void InspectionEntityComponentUpdate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectionEntityComponentUpdate::CopyFrom(const InspectionEntityComponentUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectionEntityComponentUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectionEntityComponentUpdate::IsInitialized() const {
  return true;
}

void InspectionEntityComponentUpdate::InternalSwap(InspectionEntityComponentUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fields_to_clear_.InternalSwap(&other->fields_to_clear_);
  component_.Swap(&other->component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(entity_component_id_, other->entity_component_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntityComponentUpdate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse() {}
InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::MergeFrom(const InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class InspectionEntityAuthorityState::_Internal {
 public:
};

InspectionEntityAuthorityState::InspectionEntityAuthorityState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  component_authority_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.platform.runtime.InspectionEntityAuthorityState)
}
InspectionEntityAuthorityState::InspectionEntityAuthorityState(const InspectionEntityAuthorityState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_authority_.MergeFrom(from.component_authority_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:improbable.platform.runtime.InspectionEntityAuthorityState)
}

void InspectionEntityAuthorityState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto.base);
  entity_id_ = PROTOBUF_LONGLONG(0);
}

InspectionEntityAuthorityState::~InspectionEntityAuthorityState() {
  // @@protoc_insertion_point(destructor:improbable.platform.runtime.InspectionEntityAuthorityState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InspectionEntityAuthorityState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InspectionEntityAuthorityState::ArenaDtor(void* object) {
  InspectionEntityAuthorityState* _this = reinterpret_cast< InspectionEntityAuthorityState* >(object);
  (void)_this;
}
void InspectionEntityAuthorityState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InspectionEntityAuthorityState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InspectionEntityAuthorityState& InspectionEntityAuthorityState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InspectionEntityAuthorityState_runtime_2finspection_2eproto.base);
  return *internal_default_instance();
}


void InspectionEntityAuthorityState::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_authority_.Clear();
  entity_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InspectionEntityAuthorityState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, string> component_authority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&component_authority_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InspectionEntityAuthorityState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // map<uint32, string> component_authority = 2;
  if (!this->_internal_component_authority().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "improbable.platform.runtime.InspectionEntityAuthorityState.ComponentAuthorityEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_component_authority().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_component_authority().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
          it = this->_internal_component_authority().begin();
          it != this->_internal_component_authority().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)].second));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
          it = this->_internal_component_authority().begin();
          it != this->_internal_component_authority().end(); ++it) {
        target = InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.platform.runtime.InspectionEntityAuthorityState)
  return target;
}

size_t InspectionEntityAuthorityState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, string> component_authority = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_component_authority_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, std::string >::const_iterator
      it = this->_internal_component_authority().begin();
      it != this->_internal_component_authority().end(); ++it) {
    total_size += InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int64 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entity_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InspectionEntityAuthorityState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  GOOGLE_DCHECK_NE(&from, this);
  const InspectionEntityAuthorityState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InspectionEntityAuthorityState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.platform.runtime.InspectionEntityAuthorityState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.platform.runtime.InspectionEntityAuthorityState)
    MergeFrom(*source);
  }
}

void InspectionEntityAuthorityState::MergeFrom(const InspectionEntityAuthorityState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  component_authority_.MergeFrom(from.component_authority_);
  if (from.entity_id() != 0) {
    _internal_set_entity_id(from._internal_entity_id());
  }
}

void InspectionEntityAuthorityState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InspectionEntityAuthorityState::CopyFrom(const InspectionEntityAuthorityState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.platform.runtime.InspectionEntityAuthorityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InspectionEntityAuthorityState::IsInitialized() const {
  return true;
}

void InspectionEntityAuthorityState::InternalSwap(InspectionEntityAuthorityState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_authority_.Swap(&other->component_authority_);
  swap(entity_id_, other->entity_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InspectionEntityAuthorityState::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace runtime
}  // namespace platform
}  // namespace improbable
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityData* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityData >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityPosition* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::RenderableComponent* Arena::CreateMaybeMessage< ::improbable::platform::runtime::RenderableComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::RenderableComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerNodeRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerNodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerNodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerNodeResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerNodeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerNodeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::DeleteWorkerRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::DeleteWorkerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::DeleteWorkerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::DeleteWorkerResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::DeleteWorkerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::DeleteWorkerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::DeleteEntitiesRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::DeleteEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::DeleteEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::DeleteEntitiesResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::DeleteEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::DeleteEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::Heatmap_Cell* Arena::CreateMaybeMessage< ::improbable::platform::runtime::Heatmap_Cell >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::Heatmap_Cell >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::Heatmap* Arena::CreateMaybeMessage< ::improbable::platform::runtime::Heatmap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::Heatmap >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_ChunkResolution >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_SquareGridResolution >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution_AutoResolution >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityHeatmapOptions_Resolution* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityHeatmapOptions_Resolution >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::EntityHeatmapOptions* Arena::CreateMaybeMessage< ::improbable::platform::runtime::EntityHeatmapOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::EntityHeatmapOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetEntityHeatmapRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetEntityHeatmapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetEntityHeatmapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetEntityHeatmapResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetEntityHeatmapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetEntityHeatmapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetEntityDetailsRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetEntityDetailsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetEntityDetailsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetEntityDetailsResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetEntityDetailsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetEntityDetailsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetAllWorkersRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetAllWorkersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetAllWorkersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetAllWorkersResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetAllWorkersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetAllWorkersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerSummary* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerLoadbalancingStatus* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerLoadbalancingStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerLoadbalancingStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorkerDetailsRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorkerDetailsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorkerDetailsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorkerDetailsResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorkerDetailsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorkerDetailsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorkerInterestRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorkerInterestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorkerInterestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerTypeInterestConfigEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorkerInterestResponse_WorkerInterestConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorkerInterestResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorkerInterestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorkerInterestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectorStreamingQuery* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectorStreamingQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectorStreamingQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::LoadBalancingGridFormat* Arena::CreateMaybeMessage< ::improbable::platform::runtime::LoadBalancingGridFormat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::LoadBalancingGridFormat >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetLoadBalancingStrategyRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetLoadBalancingStrategyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetLoadBalancingStrategyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GridPartition* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GridPartition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GridPartition >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GridPartitionStrategy* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GridPartitionStrategy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GridPartitionStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetLoadBalancingStrategyResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetLoadBalancingStrategyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetLoadBalancingStrategyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetVirtualWorkerMappingRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetVirtualWorkerMappingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetVirtualWorkerMappingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetVirtualWorkerMappingResponse_VirtualToWorkerEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetVirtualWorkerMappingResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetVirtualWorkerMappingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetVirtualWorkerMappingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerDetails_DelegatedEntityComponentsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerDetails_ComponentSet_ComponentIdsWithNamesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerDetails_ComponentSet* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerDetails_ComponentSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerDetails_ComponentSet >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerDetails_MetricsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::WorkerDetails* Arena::CreateMaybeMessage< ::improbable::platform::runtime::WorkerDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::WorkerDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::Region_RectanglesRegion* Arena::CreateMaybeMessage< ::improbable::platform::runtime::Region_RectanglesRegion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::Region_RectanglesRegion >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::Region* Arena::CreateMaybeMessage< ::improbable::platform::runtime::Region >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::Region >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorldExtentsRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorldExtentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorldExtentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorldExtentsResponse_WorldSubdivision >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetWorldExtentsResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetWorldExtentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetWorldExtentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetChunksRequest* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetChunksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetChunksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::GetChunksResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::GetChunksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::GetChunksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::ChunkDetails_WorkerAssignmentOverridesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::ChunkDetails* Arena::CreateMaybeMessage< ::improbable::platform::runtime::ChunkDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::ChunkDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntitySubscriptionQuery* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntitySubscriptionQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntitySubscriptionQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntitySubscriptionResponse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntitySubscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntitySubscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntityComponentId* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntityComponentId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntityComponentId >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntitySnapshot_ComponentsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntitySnapshot* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntitySnapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntitySnapshot >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntityComponentUpdate* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntityComponentUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntityComponentUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntityAuthorityState_ComponentAuthorityEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::platform::runtime::InspectionEntityAuthorityState* Arena::CreateMaybeMessage< ::improbable::platform::runtime::InspectionEntityAuthorityState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::platform::runtime::InspectionEntityAuthorityState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
